import { CommentTokenData, IdentifierTokenData, LiteralTokenData, OperatorTokenData, SeparatorTokenData } from '../../token';
import { ParseResult } from '../result';
/**
 * Tries to parse a separator token at current position.
 *
 * Returns nomatch if the current position cannot contain a separator.
 */
export declare function tryParseSeparator(slice: string): ParseResult<SeparatorTokenData>;
/**
 * Tries to parse an operator token at current position.
 *
 * Returns nomatch if the current position cannot contain an operator.
 */
export declare function tryParseOperator(slice: string): ParseResult<OperatorTokenData>;
export declare function tryParseBooleanLiteral(slice: string): ParseResult<LiteralTokenData>;
/**
 * Tries to parse an identifier token at current position.
 *
 * Returns nomatch if the current position cannot contain an identifier.
 */
export declare function tryParseIdentifier(slice: string): ParseResult<IdentifierTokenData>;
/**
 * Tries to parse a comment token at current position.
 *
 * Returns nomatch if the current position cannot contain a comment.
 */
export declare function tryParseComment(slice: string): ParseResult<CommentTokenData>;
