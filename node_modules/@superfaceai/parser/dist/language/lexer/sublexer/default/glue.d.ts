import { DefaultSublexerTokenData, LexerTokenData, LiteralTokenData, NewlineTokenData } from '../../token';
import { ParseResult } from '../result';
export declare function chainTokenParsers<T extends LexerTokenData>(slice: string, firstParser: (slice: string) => ParseResult<T>, ...parsers: ((slice: string) => ParseResult<T>)[]): ParseResult<T>;
/**
 * Tries to parse a literal token at current position.
 *
 * Returns nomatch if the current position cannot contain a literal.
 *
 * Returns an error if parsing fails.
 */
export declare function tryParseLiteral(slice: string): ParseResult<LiteralTokenData>;
export declare function tryParseNewline(slice: string): ParseResult<NewlineTokenData>;
export declare function tryParseDefault(slice: string): ParseResult<DefaultSublexerTokenData>;
