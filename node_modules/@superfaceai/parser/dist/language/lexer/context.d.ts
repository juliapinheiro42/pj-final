import { ParseResult } from './sublexer/result';
import { DefaultSublexerTokenData, JessieSublexerTokenData, TerminationTokens } from './token';
export declare const enum LexerContextType {
    /**
     * Default lexer context for parsing the profile and map languages.
     */
    DEFAULT = 0,
    /**
     * Lexer context for parsing Jessie script expressions.
     */
    JESSIE_SCRIPT_EXPRESSION = 1
}
export declare type Sublexer<C extends LexerContextType> = (slice: string, ...context: SublexerParamsType<C>) => ParseResult<SublexerReturnType<C>>;
export declare type SublexerParamsType<C extends LexerContextType> = C extends LexerContextType.DEFAULT ? [] : C extends LexerContextType.JESSIE_SCRIPT_EXPRESSION ? [LexerJessieContext['terminationTokens']] : never;
export declare type SublexerReturnType<C extends LexerContextType> = C extends LexerContextType.DEFAULT ? DefaultSublexerTokenData : C extends LexerContextType.JESSIE_SCRIPT_EXPRESSION ? JessieSublexerTokenData : never;
declare type LexerDefaultContext = {
    type: LexerContextType.DEFAULT;
};
declare type LexerJessieContext = {
    type: LexerContextType.JESSIE_SCRIPT_EXPRESSION;
    terminationTokens?: ReadonlyArray<TerminationTokens>;
};
export declare type LexerContext = LexerDefaultContext | LexerJessieContext;
export {};
