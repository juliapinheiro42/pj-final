import { MapDocumentNode, ProfileDocumentNode } from '@superfaceai/ast';
import { SyntaxError } from '../error';
import { Source } from '../source';
import { SyntaxRule } from './rule';
export declare function parseRuleResult<N>(rule: SyntaxRule<N>, source: Source, skipSOF?: boolean): {
    kind: 'success';
    value: N;
} | {
    kind: 'failure';
    error: SyntaxError;
};
/**
 * Attempts to match `rule` onto `source`.
 *
 * If `skipSOF === true`, the first token of the newly created lexer token stream (the SOF token)
 * is skipped.
 *
 * Internally this function calls `parseRuleResult` and throws the error.
 */
export declare function parseRule<N>(rule: SyntaxRule<N>, source: Source, skipSOF?: boolean): N;
/**
 * Equivalent to calling `parseRule(profileRules.PROFILE_DOCUMENT, source)` but isn't required to return location info.
 */
export declare function parseProfile(source: Source): ProfileDocumentNode;
/**
 * Equivalent to calling `parseRule(mapRules.MAP_DOCUMENT, source);` but isn't required to return location info.
 */
export declare function parseMap(source: Source): MapDocumentNode;
