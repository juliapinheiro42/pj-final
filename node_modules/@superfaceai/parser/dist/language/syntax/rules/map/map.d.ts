import { CallStatementNode, HttpCallStatementNode, HttpRequestNode, InlineCallNode, MapDefinitionNode, MapDocumentNode, OperationDefinitionNode, OutcomeStatementNode, SetStatementNode } from '@superfaceai/ast';
import { SyntaxRule } from '../../rule';
import { HasLocation, WithLocation } from '../common';
export declare const ARGUMENT_LIST_ASSIGNMENT: SyntaxRule<{
    kind: "Assignment";
    key: string[];
    value: ({
        kind: "PrimitiveLiteral";
        value: string | number | boolean;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "JessieExpression";
        expression: string;
        source?: string | undefined;
        sourceMap?: string | undefined;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "ObjectLiteral";
        fields: (any & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "InlineCall";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        iteration?: ({
            kind: "IterationAtom";
            iterationVariable: string;
            iterable: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        operationName: string;
        arguments: (any & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation);
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation>;
export declare const INLINE_CALL: SyntaxRule<WithLocation<InlineCallNode>>;
export declare const OBJECT_LITERAL_ASSIGNMENT: SyntaxRule<{
    kind: "Assignment";
    key: string[];
    value: ({
        kind: "PrimitiveLiteral";
        value: string | number | boolean;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "JessieExpression";
        expression: string;
        source?: string | undefined;
        sourceMap?: string | undefined;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "ObjectLiteral";
        fields: (any & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "InlineCall";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        iteration?: ({
            kind: "IterationAtom";
            iterationVariable: string;
            iterable: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        operationName: string;
        arguments: (any & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation);
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation>;
export declare const OBJECT_LITERAL: SyntaxRule<{
    kind: "ObjectLiteral";
    fields: ({
        kind: "Assignment";
        key: string[];
        value: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | (any & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation);
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation)[];
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation>;
export declare const SET_BLOCK_ASSIGNMENT: SyntaxRule<{
    kind: "Assignment";
    key: string[];
    value: ({
        kind: "PrimitiveLiteral";
        value: string | number | boolean;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "JessieExpression";
        expression: string;
        source?: string | undefined;
        sourceMap?: string | undefined;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "ObjectLiteral";
        fields: (any & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "InlineCall";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        iteration?: ({
            kind: "IterationAtom";
            iterationVariable: string;
            iterable: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        operationName: string;
        arguments: (any & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation);
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation>;
export declare const SET_STATEMENT: SyntaxRule<WithLocation<SetStatementNode>>;
/**
 * call name(<...arguments>) <?condition> { <...statements> }
 */
export declare function CALL_STATEMENT_FACTORY(substatementRule: SyntaxRule<WithLocation<OutcomeStatementNode>>): SyntaxRule<WithLocation<CallStatementNode>>;
export declare const HTTP_REQUEST_VARIABLES_BLOCK: SyntaxRule<{
    query: ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    headers: ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    body: ({
        kind: "PrimitiveLiteral";
        value: string | number | boolean;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "JessieExpression";
        expression: string;
        source?: string | undefined;
        sourceMap?: string | undefined;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "InlineCall";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        iteration?: ({
            kind: "IterationAtom";
            iterationVariable: string;
            iterable: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        operationName: string;
        arguments: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    location: import("@superfaceai/ast").LocationSpan;
}>;
export declare const HTTP_REQUEST_VARIABLES_SHORTHAND: SyntaxRule<{
    query?: WithLocation<HttpRequestNode>['query'];
    headers?: WithLocation<HttpRequestNode>['headers'];
    body?: WithLocation<HttpRequestNode>['body'];
} & HasLocation>;
export declare const HTTP_CALL_STATEMENT_REQUEST: SyntaxRule<{
    readonly contentType: string | undefined;
    readonly contentLanguage: string | undefined;
    readonly query: ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    readonly headers: ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    readonly body: ({
        kind: "PrimitiveLiteral";
        value: string | number | boolean;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "JessieExpression";
        expression: string;
        source?: string | undefined;
        sourceMap?: string | undefined;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "InlineCall";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        iteration?: ({
            kind: "IterationAtom";
            iterationVariable: string;
            iterable: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        operationName: string;
        arguments: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    readonly location: import("@superfaceai/ast").LocationSpan;
}>;
export declare function HTTP_CALL_STATEMENT_FACTORY(substatementRule: SyntaxRule<WithLocation<OutcomeStatementNode>>): SyntaxRule<WithLocation<HttpCallStatementNode>>;
/**
 * return? map result/error <?condition> <value>;
 */
export declare const MAP_OUTCOME_STATEMENT: SyntaxRule<WithLocation<OutcomeStatementNode>>;
/**
 * return/fail <?condition> <value>;
 */
export declare const OPERATION_OUTCOME_STATEMENT: SyntaxRule<WithLocation<OutcomeStatementNode>>;
export declare const MAP_SUBSTATEMENT: SyntaxRule<({
    kind: "SetStatement";
    condition?: ({
        kind: "ConditionAtom";
        expression: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    assignments: ({
        kind: "Assignment";
        key: string[];
        value: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation);
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation)[];
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation) | ({
    kind: "OutcomeStatement";
    condition?: ({
        kind: "ConditionAtom";
        expression: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    isError: boolean;
    terminateFlow: boolean;
    value: ({
        kind: "PrimitiveLiteral";
        value: string | number | boolean;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "JessieExpression";
        expression: string;
        source?: string | undefined;
        sourceMap?: string | undefined;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "InlineCall";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        iteration?: ({
            kind: "IterationAtom";
            iterationVariable: string;
            iterable: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        operationName: string;
        arguments: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation);
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation) | ({
    kind: "CallStatement";
    iteration?: ({
        kind: "IterationAtom";
        iterationVariable: string;
        iterable: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    condition?: ({
        kind: "ConditionAtom";
        expression: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    operationName: string;
    arguments: ({
        kind: "Assignment";
        key: string[];
        value: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation);
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation)[];
    statements: (({
        kind: "SetStatement";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        assignments: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "OutcomeStatement";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        isError: boolean;
        terminateFlow: boolean;
        value: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "ObjectLiteral";
                    fields: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation);
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation))[];
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation) | ({
    kind: "HttpCallStatement";
    method: string;
    url: string;
    request?: ({
        kind: "HttpRequest";
        contentType?: string | undefined;
        contentLanguage?: string | undefined;
        query?: ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        headers?: ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        body?: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "ObjectLiteral";
                    fields: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        security: {
            id: string;
            scheme?: "basic" | "apikey" | "bearer" | undefined;
        }[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    responseHandlers: ({
        kind: "HttpResponseHandler";
        statusCode?: number | undefined;
        contentType?: string | undefined;
        contentLanguage?: string | undefined;
        statements: (({
            kind: "SetStatement";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            assignments: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "ObjectLiteral";
                    fields: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "OutcomeStatement";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            isError: boolean;
            terminateFlow: boolean;
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: ({
                    kind: "Assignment";
                    key: string[];
                    value: ({
                        kind: "PrimitiveLiteral";
                        value: string | number | boolean;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | ({
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | (any & HasLocation) | ({
                        kind: "InlineCall";
                        condition?: ({
                            kind: "ConditionAtom";
                            expression: {
                                kind: "JessieExpression";
                                expression: string;
                                source?: string | undefined;
                                sourceMap?: string | undefined;
                                location?: {
                                    start: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                } | undefined;
                            } & HasLocation;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation) | undefined;
                        iteration?: ({
                            kind: "IterationAtom";
                            iterationVariable: string;
                            iterable: {
                                kind: "JessieExpression";
                                expression: string;
                                source?: string | undefined;
                                sourceMap?: string | undefined;
                                location?: {
                                    start: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                } | undefined;
                            } & HasLocation;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation) | undefined;
                        operationName: string;
                        arguments: (any & HasLocation)[];
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation);
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: ({
                    kind: "Assignment";
                    key: string[];
                    value: ({
                        kind: "PrimitiveLiteral";
                        value: string | number | boolean;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | ({
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | ({
                        kind: "ObjectLiteral";
                        fields: (any & HasLocation)[];
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | (any & HasLocation);
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation))[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation)[];
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation)>;
export declare const OPERATION_SUBSTATEMENT: SyntaxRule<({
    kind: "SetStatement";
    condition?: ({
        kind: "ConditionAtom";
        expression: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    assignments: ({
        kind: "Assignment";
        key: string[];
        value: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation);
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation)[];
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation) | ({
    kind: "OutcomeStatement";
    condition?: ({
        kind: "ConditionAtom";
        expression: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    isError: boolean;
    terminateFlow: boolean;
    value: ({
        kind: "PrimitiveLiteral";
        value: string | number | boolean;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "JessieExpression";
        expression: string;
        source?: string | undefined;
        sourceMap?: string | undefined;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "ObjectLiteral";
        fields: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "InlineCall";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        iteration?: ({
            kind: "IterationAtom";
            iterationVariable: string;
            iterable: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        operationName: string;
        arguments: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | (any & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation);
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation) | ({
    kind: "CallStatement";
    iteration?: ({
        kind: "IterationAtom";
        iterationVariable: string;
        iterable: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    condition?: ({
        kind: "ConditionAtom";
        expression: {
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation;
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    operationName: string;
    arguments: ({
        kind: "Assignment";
        key: string[];
        value: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: (any & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation);
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation)[];
    statements: (({
        kind: "SetStatement";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        assignments: ({
            kind: "Assignment";
            key: string[];
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: (any & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation)[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | ({
        kind: "OutcomeStatement";
        condition?: ({
            kind: "ConditionAtom";
            expression: {
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        isError: boolean;
        terminateFlow: boolean;
        value: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "ObjectLiteral";
                    fields: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation);
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation))[];
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation) | ({
    kind: "HttpCallStatement";
    method: string;
    url: string;
    request?: ({
        kind: "HttpRequest";
        contentType?: string | undefined;
        contentLanguage?: string | undefined;
        query?: ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        headers?: ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        body?: ({
            kind: "PrimitiveLiteral";
            value: string | number | boolean;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "JessieExpression";
            expression: string;
            source?: string | undefined;
            sourceMap?: string | undefined;
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "ObjectLiteral";
            fields: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "InlineCall";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            iteration?: ({
                kind: "IterationAtom";
                iterationVariable: string;
                iterable: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            operationName: string;
            arguments: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "ObjectLiteral";
                    fields: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | (any & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | undefined;
        security: {
            id: string;
            scheme?: "basic" | "apikey" | "bearer" | undefined;
        }[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation) | undefined;
    responseHandlers: ({
        kind: "HttpResponseHandler";
        statusCode?: number | undefined;
        contentType?: string | undefined;
        contentLanguage?: string | undefined;
        statements: (({
            kind: "SetStatement";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            assignments: ({
                kind: "Assignment";
                key: string[];
                value: ({
                    kind: "PrimitiveLiteral";
                    value: string | number | boolean;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "ObjectLiteral";
                    fields: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | ({
                    kind: "InlineCall";
                    condition?: ({
                        kind: "ConditionAtom";
                        expression: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    iteration?: ({
                        kind: "IterationAtom";
                        iterationVariable: string;
                        iterable: {
                            kind: "JessieExpression";
                            expression: string;
                            source?: string | undefined;
                            sourceMap?: string | undefined;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | undefined;
                    operationName: string;
                    arguments: (any & HasLocation)[];
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation);
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation)[];
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation) | ({
            kind: "OutcomeStatement";
            condition?: ({
                kind: "ConditionAtom";
                expression: {
                    kind: "JessieExpression";
                    expression: string;
                    source?: string | undefined;
                    sourceMap?: string | undefined;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | undefined;
            isError: boolean;
            terminateFlow: boolean;
            value: ({
                kind: "PrimitiveLiteral";
                value: string | number | boolean;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "JessieExpression";
                expression: string;
                source?: string | undefined;
                sourceMap?: string | undefined;
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "ObjectLiteral";
                fields: ({
                    kind: "Assignment";
                    key: string[];
                    value: ({
                        kind: "PrimitiveLiteral";
                        value: string | number | boolean;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | ({
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | (any & HasLocation) | ({
                        kind: "InlineCall";
                        condition?: ({
                            kind: "ConditionAtom";
                            expression: {
                                kind: "JessieExpression";
                                expression: string;
                                source?: string | undefined;
                                sourceMap?: string | undefined;
                                location?: {
                                    start: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                } | undefined;
                            } & HasLocation;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation) | undefined;
                        iteration?: ({
                            kind: "IterationAtom";
                            iterationVariable: string;
                            iterable: {
                                kind: "JessieExpression";
                                expression: string;
                                source?: string | undefined;
                                sourceMap?: string | undefined;
                                location?: {
                                    start: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                        charIndex: number;
                                    };
                                } | undefined;
                            } & HasLocation;
                            location?: {
                                start: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                    charIndex: number;
                                };
                            } | undefined;
                        } & HasLocation) | undefined;
                        operationName: string;
                        arguments: (any & HasLocation)[];
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation);
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation) | ({
                kind: "InlineCall";
                condition?: ({
                    kind: "ConditionAtom";
                    expression: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                iteration?: ({
                    kind: "IterationAtom";
                    iterationVariable: string;
                    iterable: {
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation;
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation) | undefined;
                operationName: string;
                arguments: ({
                    kind: "Assignment";
                    key: string[];
                    value: ({
                        kind: "PrimitiveLiteral";
                        value: string | number | boolean;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | ({
                        kind: "JessieExpression";
                        expression: string;
                        source?: string | undefined;
                        sourceMap?: string | undefined;
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | ({
                        kind: "ObjectLiteral";
                        fields: (any & HasLocation)[];
                        location?: {
                            start: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                            end: {
                                line: number;
                                column: number;
                                charIndex: number;
                            };
                        } | undefined;
                    } & HasLocation) | (any & HasLocation);
                    location?: {
                        start: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                        end: {
                            line: number;
                            column: number;
                            charIndex: number;
                        };
                    } | undefined;
                } & HasLocation)[];
                location?: {
                    start: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                    end: {
                        line: number;
                        column: number;
                        charIndex: number;
                    };
                } | undefined;
            } & HasLocation);
            location?: {
                start: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
                end: {
                    line: number;
                    column: number;
                    charIndex: number;
                };
            } | undefined;
        } & HasLocation))[];
        location?: {
            start: {
                line: number;
                column: number;
                charIndex: number;
            };
            end: {
                line: number;
                column: number;
                charIndex: number;
            };
        } | undefined;
    } & HasLocation)[];
    location?: {
        start: {
            line: number;
            column: number;
            charIndex: number;
        };
        end: {
            line: number;
            column: number;
            charIndex: number;
        };
    } | undefined;
} & HasLocation)>;
export declare const MAP_DEFINITION: SyntaxRule<WithLocation<MapDefinitionNode>>;
export declare const OPERATION_DEFINITION: SyntaxRule<WithLocation<OperationDefinitionNode>>;
export declare const MAP_DOCUMENT_DEFINITION: SyntaxRule<WithLocation<MapDefinitionNode | OperationDefinitionNode>>;
export declare const MAP_DOCUMENT: SyntaxRule<WithLocation<MapDocumentNode>>;
