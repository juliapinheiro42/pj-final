import { ConditionAtomNode, IterationAtomNode, JessieExpressionNode, MapHeaderNode, PrimitiveLiteralNode } from '@superfaceai/ast';
import { TerminationTokens } from '../../../lexer/token';
import { SyntaxRule } from '../../rule';
import { WithLocation } from '../common';
export declare const PRIMITIVE_LITERAL: SyntaxRule<WithLocation<PrimitiveLiteralNode>>;
export declare function JESSIE_EXPRESSION_FACTORY(...terminators: ReadonlyArray<TerminationTokens>): SyntaxRule<WithLocation<JessieExpressionNode>>;
/**
 * if (<jessie>)
 */
export declare const CONDITION_ATOM: SyntaxRule<WithLocation<ConditionAtomNode>>;
export declare const ITERATION_ATOM: SyntaxRule<WithLocation<IterationAtomNode>>;
export declare const MAP_VARIANT: SyntaxRule<{
    variant: string;
    location: import("@superfaceai/ast").LocationSpan;
}>;
export declare const MAP_HEADER: SyntaxRule<WithLocation<MapHeaderNode>>;
/**
 * Content type with `*` placeholder handling.
 */
export declare const MAYBE_CONTENT_TYPE: SyntaxRule<string | undefined>;
