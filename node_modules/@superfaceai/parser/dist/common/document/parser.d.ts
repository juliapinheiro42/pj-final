import { DocumentId, MapDocumentId, ProfileIdRange } from './interfaces';
export declare type ParseResult<T> = {
    kind: 'parsed';
    value: T;
} | {
    kind: 'error';
    message: string;
};
/**
 * Parses a singular version number or returns undefined.
 */
export declare function tryParseVersionNumber(str: string): number | undefined;
/** Parses document id.
 *
 * This parses a more general structure that fits both the profile and map id.
 */
export declare function parseDocumentId(id: string): ParseResult<DocumentId>;
/** Parses the id using `parseDocumentId`, checks that the `middle` is a valid `name`. */
export declare function parseProfileId(id: string): ParseResult<ProfileIdRange>;
/**
 * Parses version label in format `revN`
 */
export declare function parseRevisionLabel(label: string): ParseResult<number>;
/**
 * Parses the id using `parseDocumentId`, checks that the middle portion contains
 * a valid `name`, `provider` and parses the revision tag, if any.
 */
export declare function parseMapId(id: string): ParseResult<MapDocumentId>;
