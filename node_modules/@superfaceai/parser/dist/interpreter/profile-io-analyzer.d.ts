import { EnumDefinitionNode, EnumValueNode, FieldDefinitionNode, ListDefinitionNode, ModelTypeNameNode, NamedFieldDefinitionNode, NamedModelDefinitionNode, NonNullDefinitionNode, ObjectDefinitionNode, PrimitiveTypeNameNode, ProfileASTNode, ProfileAstVisitor, ProfileDocumentNode, ProfileHeaderNode, Type, UnionDefinitionNode, UseCaseDefinitionNode, UseCaseSlotDefinitionNode } from '@superfaceai/ast';
import { ObjectStructure, ProfileHeaderStructure, ProfileOutput, StructureType, UseCaseStructure } from './profile-output';
export declare class ProfileIOAnalyzer implements ProfileAstVisitor {
    private namedFields;
    private namedModels;
    private fields;
    private models;
    visit(node: ProfileDocumentNode): ProfileOutput;
    visit(node: ProfileHeaderNode): ProfileHeaderStructure;
    visit(node: UseCaseDefinitionNode): UseCaseStructure;
    visit(node: EnumValueNode): string | number | boolean;
    visit(node: NamedModelDefinitionNode | NamedFieldDefinitionNode): void;
    visit(node: ObjectDefinitionNode): ObjectStructure;
    visit(node: Type): StructureType;
    visit(node: UseCaseSlotDefinitionNode<Type>): StructureType;
    visit(node: ProfileASTNode | undefined): undefined;
    visitUseCaseSlotDefinition(node: UseCaseSlotDefinitionNode<ProfileASTNode>): StructureType;
    visitEnumDefinitionNode(node: EnumDefinitionNode): StructureType;
    visitEnumValueNode(node: EnumValueNode): string | number | boolean;
    visitFieldDefinitionNode(node: FieldDefinitionNode): StructureType;
    visitListDefinitionNode(node: ListDefinitionNode): StructureType;
    visitModelTypeNameNode(node: ModelTypeNameNode): StructureType;
    visitNamedFieldDefinitionNode(node: NamedFieldDefinitionNode): void;
    visitNamedModelDefinitionNode(node: NamedModelDefinitionNode): void;
    visitNonNullDefinitionNode(node: NonNullDefinitionNode): StructureType;
    visitObjectDefinitionNode(node: ObjectDefinitionNode): StructureType;
    visitPrimitiveTypeNameNode(node: PrimitiveTypeNameNode): StructureType;
    visitProfileDocumentNode(node: ProfileDocumentNode): ProfileOutput;
    visitProfileHeaderNode(node: ProfileHeaderNode): ProfileHeaderStructure;
    visitUnionDefinitionNode(node: UnionDefinitionNode): StructureType;
    visitUseCaseDefinitionNode(node: UseCaseDefinitionNode): UseCaseStructure;
    /**
     * store the named fields for later reference
     */
    private initializeFields;
    /**
     * store the named models for later reference
     */
    private initializeModels;
}
