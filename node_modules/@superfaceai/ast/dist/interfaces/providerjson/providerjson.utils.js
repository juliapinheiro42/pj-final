"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepareProviderParameters = exports.prepareSecurityValues = exports.isDigestSecurityScheme = exports.isBearerTokenSecurityScheme = exports.isBasicAuthSecurityScheme = exports.isApiKeySecurityScheme = exports.assertProviderJson = exports.isProviderJson = exports.isValidProviderName = void 0;
var typescript_is_1 = require("typescript-is");
var error_1 = require("../../error");
var ast_1 = require("../ast");
var providerjson_1 = require("./providerjson");
function isValidProviderName(name) {
    return providerjson_1.PROVIDER_NAME_REGEX.test(name);
}
exports.isValidProviderName = isValidProviderName;
exports.isProviderJson = typescript_is_1.createIs(function (object) { var path = ["$"]; function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _508_s(object) {
    var e_1, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("baseUrl" in object) {
            path.push("baseUrl");
            var error = _string(object["baseUrl"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'baseUrl' in object", path: path.slice(), reason: { type: "missing-property", property: "baseUrl" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "baseUrl")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return null;
} function sa__508_ea_508(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _508_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _520(object) { ; if (object !== "apiKey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apiKey'", path: path.slice(), reason: { type: "string-literal", value: "apiKey" } };
else
    return null; } function _525(object) { ; if (object !== "header")
    return { message: "validation failed at " + path.join(".") + ": expected string 'header'", path: path.slice(), reason: { type: "string-literal", value: "header" } };
else
    return null; } function _527(object) { ; if (object !== "body")
    return { message: "validation failed at " + path.join(".") + ": expected string 'body'", path: path.slice(), reason: { type: "string-literal", value: "body" } };
else
    return null; } function _529(object) { ; if (object !== "path")
    return { message: "validation failed at " + path.join(".") + ": expected string 'path'", path: path.slice(), reason: { type: "string-literal", value: "path" } };
else
    return null; } function _531(object) { ; if (object !== "query")
    return { message: "validation failed at " + path.join(".") + ": expected string 'query'", path: path.slice(), reason: { type: "string-literal", value: "query" } };
else
    return null; } function su__525__527__529__531_eu(object) {
    var e_2, _a;
    var conditions = [_525, _527, _529, _531];
    try {
        for (var conditions_1 = __values(conditions), conditions_1_1 = conditions_1.next(); !conditions_1_1.done; conditions_1_1 = conditions_1.next()) {
            var condition = conditions_1_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (conditions_1_1 && !conditions_1_1.done && (_a = conditions_1.return)) _a.call(conditions_1);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_3, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_2 = __values(conditions), conditions_2_1 = conditions_2.next(); !conditions_2_1.done; conditions_2_1 = conditions_2.next()) {
            var condition = conditions_2_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (conditions_2_1 && !conditions_2_1.done && (_a = conditions_2.return)) _a.call(conditions_2);
        }
        finally { if (e_3) throw e_3.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _510_s(object) {
    var e_4, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _520(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("in" in object) {
            path.push("in");
            var error = su__525__527__529__531_eu(object["in"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'in' in object", path: path.slice(), reason: { type: "missing-property", property: "in" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = su__undefined__string_eu(object["name"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "in" && key !== "name")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_4) throw e_4.error; }
    }
    return null;
} function _522(object) { ; if (object !== "http")
    return { message: "validation failed at " + path.join(".") + ": expected string 'http'", path: path.slice(), reason: { type: "string-literal", value: "http" } };
else
    return null; } function _534(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _511_s(object) {
    var e_5, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _522(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = _534(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_5) throw e_5.error; }
    }
    return null;
} function _536(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function _512_s(object) {
    var e_6, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _522(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = _536(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
    }
    {
        if ("bearerFormat" in object) {
            path.push("bearerFormat");
            var error = su__undefined__string_eu(object["bearerFormat"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "scheme" && key !== "bearerFormat")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_6_1) { e_6 = { error: e_6_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_6) throw e_6.error; }
    }
    return null;
} function _538(object) { ; if (object !== "digest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'digest'", path: path.slice(), reason: { type: "string-literal", value: "digest" } };
else
    return null; } function _513_s(object) {
    var e_7, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _522(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = _538(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_7_1) { e_7 = { error: e_7_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_7) throw e_7.error; }
    }
    return null;
} function su__510__511__512__513_eu(object) {
    var e_8, _a;
    var conditions = [_510_s, _511_s, _512_s, _513_s];
    try {
        for (var conditions_3 = __values(conditions), conditions_3_1 = conditions_3.next(); !conditions_3_1.done; conditions_3_1 = conditions_3.next()) {
            var condition = conditions_3_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_8_1) { e_8 = { error: e_8_1 }; }
    finally {
        try {
            if (conditions_3_1 && !conditions_3_1.done && (_a = conditions_3.return)) _a.call(conditions_3);
        }
        finally { if (e_8) throw e_8.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__510__511__512__513_eu_ea_514(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__510__511__512__513_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function su__undefined_sa_su__510__511__512__513_eu_ea_514_514_514_eu(object) {
    var e_9, _a;
    var conditions = [_undefined, sa_su__510__511__512__513_eu_ea_514];
    try {
        for (var conditions_4 = __values(conditions), conditions_4_1 = conditions_4.next(); !conditions_4_1.done; conditions_4_1 = conditions_4.next()) {
            var condition = conditions_4_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_9_1) { e_9 = { error: e_9_1 }; }
    finally {
        try {
            if (conditions_4_1 && !conditions_4_1.done && (_a = conditions_4.return)) _a.call(conditions_4);
        }
        finally { if (e_9) throw e_9.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _517_s(object) {
    var e_10, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("description" in object) {
            path.push("description");
            var error = su__undefined__string_eu(object["description"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("default" in object) {
            path.push("default");
            var error = su__undefined__string_eu(object["default"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "name" && key !== "description" && key !== "default")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_10_1) { e_10 = { error: e_10_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_10) throw e_10.error; }
    }
    return null;
} function sa__517_ea_517(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _517_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function su__undefined_sa__517_ea_517_517_517_eu(object) {
    var e_11, _a;
    var conditions = [_undefined, sa__517_ea_517];
    try {
        for (var conditions_5 = __values(conditions), conditions_5_1 = conditions_5.next(); !conditions_5_1.done; conditions_5_1 = conditions_5.next()) {
            var condition = conditions_5_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_11_1) { e_11 = { error: e_11_1 }; }
    finally {
        try {
            if (conditions_5_1 && !conditions_5_1.done && (_a = conditions_5.return)) _a.call(conditions_5);
        }
        finally { if (e_11) throw e_11.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _507_s(object) {
    var e_12, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("services" in object) {
            path.push("services");
            var error = sa__508_ea_508(object["services"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'services' in object", path: path.slice(), reason: { type: "missing-property", property: "services" } };
    }
    {
        if ("securitySchemes" in object) {
            path.push("securitySchemes");
            var error = su__undefined_sa_su__510__511__512__513_eu_ea_514_514_514_eu(object["securitySchemes"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("defaultService" in object) {
            path.push("defaultService");
            var error = _string(object["defaultService"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'defaultService' in object", path: path.slice(), reason: { type: "missing-property", property: "defaultService" } };
    }
    {
        if ("parameters" in object) {
            path.push("parameters");
            var error = su__undefined_sa__517_ea_517_517_517_eu(object["parameters"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "name" && key !== "services" && key !== "securitySchemes" && key !== "defaultService" && key !== "parameters")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_12_1) { e_12 = { error: e_12_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_12) throw e_12.error; }
    }
    return null;
} var error = _507_s(object); return error; });
function assertProviderJson(input) {
    var e_13, _a;
    var parsedInput;
    try {
        parsedInput = typescript_is_1.assertEquals(input, function (object) { var path = ["input"]; function _string(object) { ; if (typeof object !== "string")
            return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
        else
            return null; } function _508_s(object) {
            var e_14, _a;
            ;
            if (typeof object !== "object" || object === null || Array.isArray(object))
                return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
            {
                if ("id" in object) {
                    path.push("id");
                    var error = _string(object["id"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
            }
            {
                if ("baseUrl" in object) {
                    path.push("baseUrl");
                    var error = _string(object["baseUrl"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'baseUrl' in object", path: path.slice(), reason: { type: "missing-property", property: "baseUrl" } };
            }
            try {
                for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (key !== "id" && key !== "baseUrl")
                        return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
                }
            }
            catch (e_14_1) { e_14 = { error: e_14_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_14) throw e_14.error; }
            }
            return null;
        } function sa__508_ea_508(object) { ; if (!Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
            path.push("[" + i + "]");
            var error = _508_s(object[i]);
            path.pop();
            if (error)
                return error;
        } return null; } function _undefined(object) { ; if (object !== undefined)
            return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
        else
            return null; } function _520(object) { ; if (object !== "apiKey")
            return { message: "validation failed at " + path.join(".") + ": expected string 'apiKey'", path: path.slice(), reason: { type: "string-literal", value: "apiKey" } };
        else
            return null; } function _525(object) { ; if (object !== "header")
            return { message: "validation failed at " + path.join(".") + ": expected string 'header'", path: path.slice(), reason: { type: "string-literal", value: "header" } };
        else
            return null; } function _527(object) { ; if (object !== "body")
            return { message: "validation failed at " + path.join(".") + ": expected string 'body'", path: path.slice(), reason: { type: "string-literal", value: "body" } };
        else
            return null; } function _529(object) { ; if (object !== "path")
            return { message: "validation failed at " + path.join(".") + ": expected string 'path'", path: path.slice(), reason: { type: "string-literal", value: "path" } };
        else
            return null; } function _531(object) { ; if (object !== "query")
            return { message: "validation failed at " + path.join(".") + ": expected string 'query'", path: path.slice(), reason: { type: "string-literal", value: "query" } };
        else
            return null; } function su__525__527__529__531_eu(object) {
            var e_15, _a;
            var conditions = [_525, _527, _529, _531];
            try {
                for (var conditions_6 = __values(conditions), conditions_6_1 = conditions_6.next(); !conditions_6_1.done; conditions_6_1 = conditions_6.next()) {
                    var condition = conditions_6_1.value;
                    var error = condition(object);
                    if (!error)
                        return null;
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (conditions_6_1 && !conditions_6_1.done && (_a = conditions_6.return)) _a.call(conditions_6);
                }
                finally { if (e_15) throw e_15.error; }
            }
            return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
        } function _null(object) { ; if (object !== null)
            return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
        else
            return null; } function su__undefined__string_eu(object) {
            var e_16, _a;
            var conditions = [_undefined, _string];
            try {
                for (var conditions_7 = __values(conditions), conditions_7_1 = conditions_7.next(); !conditions_7_1.done; conditions_7_1 = conditions_7.next()) {
                    var condition = conditions_7_1.value;
                    var error = condition(object);
                    if (!error)
                        return null;
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (conditions_7_1 && !conditions_7_1.done && (_a = conditions_7.return)) _a.call(conditions_7);
                }
                finally { if (e_16) throw e_16.error; }
            }
            return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
        } function _510_s(object) {
            var e_17, _a;
            ;
            if (typeof object !== "object" || object === null || Array.isArray(object))
                return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
            {
                if ("id" in object) {
                    path.push("id");
                    var error = _string(object["id"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
            }
            {
                if ("type" in object) {
                    path.push("type");
                    var error = _520(object["type"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
            }
            {
                if ("in" in object) {
                    path.push("in");
                    var error = su__525__527__529__531_eu(object["in"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'in' in object", path: path.slice(), reason: { type: "missing-property", property: "in" } };
            }
            {
                if ("name" in object) {
                    path.push("name");
                    var error = su__undefined__string_eu(object["name"]);
                    path.pop();
                    if (error)
                        return error;
                }
            }
            try {
                for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (key !== "id" && key !== "type" && key !== "in" && key !== "name")
                        return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_17) throw e_17.error; }
            }
            return null;
        } function _522(object) { ; if (object !== "http")
            return { message: "validation failed at " + path.join(".") + ": expected string 'http'", path: path.slice(), reason: { type: "string-literal", value: "http" } };
        else
            return null; } function _534(object) { ; if (object !== "basic")
            return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
        else
            return null; } function _511_s(object) {
            var e_18, _a;
            ;
            if (typeof object !== "object" || object === null || Array.isArray(object))
                return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
            {
                if ("id" in object) {
                    path.push("id");
                    var error = _string(object["id"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
            }
            {
                if ("type" in object) {
                    path.push("type");
                    var error = _522(object["type"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
            }
            {
                if ("scheme" in object) {
                    path.push("scheme");
                    var error = _534(object["scheme"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
            }
            try {
                for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (key !== "id" && key !== "type" && key !== "scheme")
                        return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
                }
            }
            catch (e_18_1) { e_18 = { error: e_18_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_18) throw e_18.error; }
            }
            return null;
        } function _536(object) { ; if (object !== "bearer")
            return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
        else
            return null; } function _512_s(object) {
            var e_19, _a;
            ;
            if (typeof object !== "object" || object === null || Array.isArray(object))
                return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
            {
                if ("id" in object) {
                    path.push("id");
                    var error = _string(object["id"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
            }
            {
                if ("type" in object) {
                    path.push("type");
                    var error = _522(object["type"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
            }
            {
                if ("scheme" in object) {
                    path.push("scheme");
                    var error = _536(object["scheme"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
            }
            {
                if ("bearerFormat" in object) {
                    path.push("bearerFormat");
                    var error = su__undefined__string_eu(object["bearerFormat"]);
                    path.pop();
                    if (error)
                        return error;
                }
            }
            try {
                for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (key !== "id" && key !== "type" && key !== "scheme" && key !== "bearerFormat")
                        return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
                }
            }
            catch (e_19_1) { e_19 = { error: e_19_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_19) throw e_19.error; }
            }
            return null;
        } function _538(object) { ; if (object !== "digest")
            return { message: "validation failed at " + path.join(".") + ": expected string 'digest'", path: path.slice(), reason: { type: "string-literal", value: "digest" } };
        else
            return null; } function _513_s(object) {
            var e_20, _a;
            ;
            if (typeof object !== "object" || object === null || Array.isArray(object))
                return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
            {
                if ("id" in object) {
                    path.push("id");
                    var error = _string(object["id"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
            }
            {
                if ("type" in object) {
                    path.push("type");
                    var error = _522(object["type"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
            }
            {
                if ("scheme" in object) {
                    path.push("scheme");
                    var error = _538(object["scheme"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
            }
            try {
                for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (key !== "id" && key !== "type" && key !== "scheme")
                        return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
                }
            }
            catch (e_20_1) { e_20 = { error: e_20_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_20) throw e_20.error; }
            }
            return null;
        } function su__510__511__512__513_eu(object) {
            var e_21, _a;
            var conditions = [_510_s, _511_s, _512_s, _513_s];
            try {
                for (var conditions_8 = __values(conditions), conditions_8_1 = conditions_8.next(); !conditions_8_1.done; conditions_8_1 = conditions_8.next()) {
                    var condition = conditions_8_1.value;
                    var error = condition(object);
                    if (!error)
                        return null;
                }
            }
            catch (e_21_1) { e_21 = { error: e_21_1 }; }
            finally {
                try {
                    if (conditions_8_1 && !conditions_8_1.done && (_a = conditions_8.return)) _a.call(conditions_8);
                }
                finally { if (e_21) throw e_21.error; }
            }
            return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
        } function sa_su__510__511__512__513_eu_ea_514(object) { ; if (!Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
            path.push("[" + i + "]");
            var error = su__510__511__512__513_eu(object[i]);
            path.pop();
            if (error)
                return error;
        } return null; } function su__undefined_sa_su__510__511__512__513_eu_ea_514_514_514_eu(object) {
            var e_22, _a;
            var conditions = [_undefined, sa_su__510__511__512__513_eu_ea_514];
            try {
                for (var conditions_9 = __values(conditions), conditions_9_1 = conditions_9.next(); !conditions_9_1.done; conditions_9_1 = conditions_9.next()) {
                    var condition = conditions_9_1.value;
                    var error = condition(object);
                    if (!error)
                        return null;
                }
            }
            catch (e_22_1) { e_22 = { error: e_22_1 }; }
            finally {
                try {
                    if (conditions_9_1 && !conditions_9_1.done && (_a = conditions_9.return)) _a.call(conditions_9);
                }
                finally { if (e_22) throw e_22.error; }
            }
            return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
        } function _517_s(object) {
            var e_23, _a;
            ;
            if (typeof object !== "object" || object === null || Array.isArray(object))
                return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
            {
                if ("name" in object) {
                    path.push("name");
                    var error = _string(object["name"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
            }
            {
                if ("description" in object) {
                    path.push("description");
                    var error = su__undefined__string_eu(object["description"]);
                    path.pop();
                    if (error)
                        return error;
                }
            }
            {
                if ("default" in object) {
                    path.push("default");
                    var error = su__undefined__string_eu(object["default"]);
                    path.pop();
                    if (error)
                        return error;
                }
            }
            try {
                for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (key !== "name" && key !== "description" && key !== "default")
                        return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
                }
            }
            catch (e_23_1) { e_23 = { error: e_23_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_23) throw e_23.error; }
            }
            return null;
        } function sa__517_ea_517(object) { ; if (!Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
            path.push("[" + i + "]");
            var error = _517_s(object[i]);
            path.pop();
            if (error)
                return error;
        } return null; } function su__undefined_sa__517_ea_517_517_517_eu(object) {
            var e_24, _a;
            var conditions = [_undefined, sa__517_ea_517];
            try {
                for (var conditions_10 = __values(conditions), conditions_10_1 = conditions_10.next(); !conditions_10_1.done; conditions_10_1 = conditions_10.next()) {
                    var condition = conditions_10_1.value;
                    var error = condition(object);
                    if (!error)
                        return null;
                }
            }
            catch (e_24_1) { e_24 = { error: e_24_1 }; }
            finally {
                try {
                    if (conditions_10_1 && !conditions_10_1.done && (_a = conditions_10.return)) _a.call(conditions_10);
                }
                finally { if (e_24) throw e_24.error; }
            }
            return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
        } function _507_s(object) {
            var e_25, _a;
            ;
            if (typeof object !== "object" || object === null || Array.isArray(object))
                return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
            {
                if ("name" in object) {
                    path.push("name");
                    var error = _string(object["name"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
            }
            {
                if ("services" in object) {
                    path.push("services");
                    var error = sa__508_ea_508(object["services"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'services' in object", path: path.slice(), reason: { type: "missing-property", property: "services" } };
            }
            {
                if ("securitySchemes" in object) {
                    path.push("securitySchemes");
                    var error = su__undefined_sa_su__510__511__512__513_eu_ea_514_514_514_eu(object["securitySchemes"]);
                    path.pop();
                    if (error)
                        return error;
                }
            }
            {
                if ("defaultService" in object) {
                    path.push("defaultService");
                    var error = _string(object["defaultService"]);
                    path.pop();
                    if (error)
                        return error;
                }
                else
                    return { message: "validation failed at " + path.join(".") + ": expected 'defaultService' in object", path: path.slice(), reason: { type: "missing-property", property: "defaultService" } };
            }
            {
                if ("parameters" in object) {
                    path.push("parameters");
                    var error = su__undefined_sa__517_ea_517_517_517_eu(object["parameters"]);
                    path.pop();
                    if (error)
                        return error;
                }
            }
            try {
                for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (key !== "name" && key !== "services" && key !== "securitySchemes" && key !== "defaultService" && key !== "parameters")
                        return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
                }
            }
            catch (e_25_1) { e_25 = { error: e_25_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_25) throw e_25.error; }
            }
            return null;
        } var error = _507_s(object); return error; });
    }
    catch (error) {
        if (error instanceof typescript_is_1.TypeGuardError) {
            throw new error_1.AssertionError("Provider JSON " + error.message, error.path);
        }
        throw error;
    }
    if (!isValidProviderName(parsedInput.name)) {
        throw new error_1.AssertionError('invalid provider name', ['$', 'name']);
    }
    if (parsedInput.parameters !== undefined) {
        try {
            for (var _b = __values(parsedInput.parameters.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), index = _d[0], parameter = _d[1];
                if (!ast_1.isValidIdentifier(parameter.name)) {
                    throw new error_1.AssertionError('invalid parameter name', [
                        '$',
                        'parameters',
                        index.toString(),
                    ]);
                }
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_13) throw e_13.error; }
        }
    }
    return parsedInput;
}
exports.assertProviderJson = assertProviderJson;
exports.isApiKeySecurityScheme = typescript_is_1.createIs(function (object) { var path = ["$"]; function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _520(object) { ; if (object !== "apiKey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apiKey'", path: path.slice(), reason: { type: "string-literal", value: "apiKey" } };
else
    return null; } function _525(object) { ; if (object !== "header")
    return { message: "validation failed at " + path.join(".") + ": expected string 'header'", path: path.slice(), reason: { type: "string-literal", value: "header" } };
else
    return null; } function _527(object) { ; if (object !== "body")
    return { message: "validation failed at " + path.join(".") + ": expected string 'body'", path: path.slice(), reason: { type: "string-literal", value: "body" } };
else
    return null; } function _529(object) { ; if (object !== "path")
    return { message: "validation failed at " + path.join(".") + ": expected string 'path'", path: path.slice(), reason: { type: "string-literal", value: "path" } };
else
    return null; } function _531(object) { ; if (object !== "query")
    return { message: "validation failed at " + path.join(".") + ": expected string 'query'", path: path.slice(), reason: { type: "string-literal", value: "query" } };
else
    return null; } function su__525__527__529__531_eu(object) {
    var e_26, _a;
    var conditions = [_525, _527, _529, _531];
    try {
        for (var conditions_11 = __values(conditions), conditions_11_1 = conditions_11.next(); !conditions_11_1.done; conditions_11_1 = conditions_11.next()) {
            var condition = conditions_11_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_26_1) { e_26 = { error: e_26_1 }; }
    finally {
        try {
            if (conditions_11_1 && !conditions_11_1.done && (_a = conditions_11.return)) _a.call(conditions_11);
        }
        finally { if (e_26) throw e_26.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_27, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_12 = __values(conditions), conditions_12_1 = conditions_12.next(); !conditions_12_1.done; conditions_12_1 = conditions_12.next()) {
            var condition = conditions_12_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_27_1) { e_27 = { error: e_27_1 }; }
    finally {
        try {
            if (conditions_12_1 && !conditions_12_1.done && (_a = conditions_12.return)) _a.call(conditions_12);
        }
        finally { if (e_27) throw e_27.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _510_s(object) {
    var e_28, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _520(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("in" in object) {
            path.push("in");
            var error = su__525__527__529__531_eu(object["in"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'in' in object", path: path.slice(), reason: { type: "missing-property", property: "in" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = su__undefined__string_eu(object["name"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "in" && key !== "name")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_28_1) { e_28 = { error: e_28_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_28) throw e_28.error; }
    }
    return null;
} var error = _510_s(object); return error; });
exports.isBasicAuthSecurityScheme = typescript_is_1.createIs(function (object) { var path = ["$"]; function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _522(object) { ; if (object !== "http")
    return { message: "validation failed at " + path.join(".") + ": expected string 'http'", path: path.slice(), reason: { type: "string-literal", value: "http" } };
else
    return null; } function _534(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _511_s(object) {
    var e_29, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _522(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = _534(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_29_1) { e_29 = { error: e_29_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_29) throw e_29.error; }
    }
    return null;
} var error = _511_s(object); return error; });
exports.isBearerTokenSecurityScheme = typescript_is_1.createIs(function (object) { var path = ["$"]; function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _522(object) { ; if (object !== "http")
    return { message: "validation failed at " + path.join(".") + ": expected string 'http'", path: path.slice(), reason: { type: "string-literal", value: "http" } };
else
    return null; } function _536(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_30, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_13 = __values(conditions), conditions_13_1 = conditions_13.next(); !conditions_13_1.done; conditions_13_1 = conditions_13.next()) {
            var condition = conditions_13_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_30_1) { e_30 = { error: e_30_1 }; }
    finally {
        try {
            if (conditions_13_1 && !conditions_13_1.done && (_a = conditions_13.return)) _a.call(conditions_13);
        }
        finally { if (e_30) throw e_30.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _512_s(object) {
    var e_31, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _522(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = _536(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
    }
    {
        if ("bearerFormat" in object) {
            path.push("bearerFormat");
            var error = su__undefined__string_eu(object["bearerFormat"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "scheme" && key !== "bearerFormat")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_31_1) { e_31 = { error: e_31_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_31) throw e_31.error; }
    }
    return null;
} var error = _512_s(object); return error; });
exports.isDigestSecurityScheme = typescript_is_1.createIs(function (object) { var path = ["$"]; function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _522(object) { ; if (object !== "http")
    return { message: "validation failed at " + path.join(".") + ": expected string 'http'", path: path.slice(), reason: { type: "string-literal", value: "http" } };
else
    return null; } function _538(object) { ; if (object !== "digest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'digest'", path: path.slice(), reason: { type: "string-literal", value: "digest" } };
else
    return null; } function _513_s(object) {
    var e_32, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("type" in object) {
            path.push("type");
            var error = _522(object["type"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'type' in object", path: path.slice(), reason: { type: "missing-property", property: "type" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = _538(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'scheme' in object", path: path.slice(), reason: { type: "missing-property", property: "scheme" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "type" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_32_1) { e_32 = { error: e_32_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_32) throw e_32.error; }
    }
    return null;
} var error = _513_s(object); return error; });
function prepareSecurityValues(providerName, schemes) {
    var e_33, _a;
    var security = [];
    try {
        for (var schemes_1 = __values(schemes), schemes_1_1 = schemes_1.next(); !schemes_1_1.done; schemes_1_1 = schemes_1.next()) {
            var scheme = schemes_1_1.value;
            var envProviderName = providerName.replace(/-/g, '_').toUpperCase();
            if (exports.isApiKeySecurityScheme(scheme)) {
                security.push({
                    id: scheme.id,
                    apikey: "$" + envProviderName + "_API_KEY",
                });
            }
            else if (exports.isBasicAuthSecurityScheme(scheme)) {
                security.push({
                    id: scheme.id,
                    username: "$" + envProviderName + "_USERNAME",
                    password: "$" + envProviderName + "_PASSWORD",
                });
            }
            else if (exports.isBearerTokenSecurityScheme(scheme)) {
                security.push({
                    id: scheme.id,
                    token: "$" + envProviderName + "_TOKEN",
                });
            }
            else if (exports.isDigestSecurityScheme(scheme)) {
                security.push({
                    id: scheme.id,
                    digest: "$" + envProviderName + "_DIGEST",
                });
            }
        }
    }
    catch (e_33_1) { e_33 = { error: e_33_1 }; }
    finally {
        try {
            if (schemes_1_1 && !schemes_1_1.done && (_a = schemes_1.return)) _a.call(schemes_1);
        }
        finally { if (e_33) throw e_33.error; }
    }
    return security;
}
exports.prepareSecurityValues = prepareSecurityValues;
function prepareProviderParameters(providerName, parameters) {
    var e_34, _a;
    var envProviderName = providerName.replace(/-/g, '_').toUpperCase();
    var preparedParameters = {};
    try {
        for (var parameters_1 = __values(parameters), parameters_1_1 = parameters_1.next(); !parameters_1_1.done; parameters_1_1 = parameters_1.next()) {
            var parameter = parameters_1_1.value;
            var envParameterName = parameter.name.replace(/-/g, '_').toUpperCase();
            preparedParameters[parameter.name] = "$" + envProviderName + "_" + envParameterName;
        }
    }
    catch (e_34_1) { e_34 = { error: e_34_1 }; }
    finally {
        try {
            if (parameters_1_1 && !parameters_1_1.done && (_a = parameters_1.return)) _a.call(parameters_1);
        }
        finally { if (e_34) throw e_34.error; }
    }
    return preparedParameters;
}
exports.prepareProviderParameters = prepareProviderParameters;
//# sourceMappingURL=providerjson.utils.js.map