import { DocumentDefinition, EnumDefinitionNode, EnumValueNode, FieldDefinitionNode, ListDefinitionNode, ModelTypeNameNode, NamedFieldDefinitionNode, NamedModelDefinitionNode, NonNullDefinitionNode, ObjectDefinitionNode, PrimitiveTypeNameNode, ProfileASTNode, ProfileDocumentNode, ProfileHeaderNode, Type, TypeDefinition, TypeName, UnionDefinitionNode, UseCaseDefinitionNode, UseCaseSlotDefinitionNode } from './profile-ast';
import { Guard } from './utils';
export declare const isDocumentDefinition: Guard<DocumentDefinition>;
export declare const isEnumDefinitionNode: Guard<EnumDefinitionNode>;
export declare const isEnumValueNode: Guard<EnumValueNode>;
export declare const isFieldDefinitionNode: Guard<FieldDefinitionNode>;
export declare const isListDefinitionNode: Guard<ListDefinitionNode>;
export declare const isModelTypeNameNode: Guard<ModelTypeNameNode>;
export declare const isNamedFieldDefinitionNode: Guard<NamedFieldDefinitionNode>;
export declare const isNamedModelDefinitionNode: Guard<NamedModelDefinitionNode>;
export declare const isNonNullDefinitionNode: Guard<NonNullDefinitionNode>;
export declare const isObjectDefinitionNode: Guard<ObjectDefinitionNode>;
export declare const isPrimitiveTypeNameNode: Guard<PrimitiveTypeNameNode>;
export declare const isProfileASTNode: Guard<ProfileASTNode>;
export declare const isProfileDocumentNode: Guard<ProfileDocumentNode>;
export declare const isProfileHeaderNode: Guard<ProfileHeaderNode>;
export declare const isType: Guard<Type>;
export declare const isTypeDefinition: Guard<TypeDefinition>;
export declare const isTypeName: Guard<TypeName>;
export declare const isUnionDefinitionNode: Guard<UnionDefinitionNode>;
export declare const isUseCaseDefinitionNode: Guard<UseCaseDefinitionNode>;
export declare const isUseCaseSlotDefinitionNode: Guard<UseCaseSlotDefinitionNode<ProfileASTNode>>;
export declare function assertProfileDocumentNode(node: unknown): ProfileDocumentNode;
export interface ProfileAstVisitor<R = unknown> {
    visit(node: ProfileASTNode, ...parameters: unknown[]): R;
    visitEnumDefinitionNode(node: EnumDefinitionNode, ...parameters: unknown[]): R;
    visitEnumValueNode(node: EnumValueNode, ...parameters: unknown[]): R;
    visitFieldDefinitionNode(node: FieldDefinitionNode, ...parameters: unknown[]): R;
    visitListDefinitionNode(node: ListDefinitionNode, ...parameters: unknown[]): R;
    visitModelTypeNameNode(node: ModelTypeNameNode, ...parameters: unknown[]): R;
    visitNamedFieldDefinitionNode(node: NamedFieldDefinitionNode, ...parameters: unknown[]): R;
    visitNamedModelDefinitionNode(node: NamedModelDefinitionNode, ...parameters: unknown[]): R;
    visitNonNullDefinitionNode(node: NonNullDefinitionNode, ...parameters: unknown[]): R;
    visitObjectDefinitionNode(node: ObjectDefinitionNode, ...parameters: unknown[]): R;
    visitPrimitiveTypeNameNode(node: PrimitiveTypeNameNode, ...parameters: unknown[]): R;
    visitProfileDocumentNode(node: ProfileDocumentNode, ...parameters: unknown[]): R;
    visitProfileHeaderNode(node: ProfileHeaderNode, ...parameters: unknown[]): R;
    visitUnionDefinitionNode(node: UnionDefinitionNode, ...parameters: unknown[]): R;
    visitUseCaseDefinitionNode(node: UseCaseDefinitionNode, ...parameters: unknown[]): R;
}
