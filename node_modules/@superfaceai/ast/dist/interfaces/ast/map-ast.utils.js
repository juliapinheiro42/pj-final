"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertMapDocumentNode = exports.isSetStatementNode = exports.isPrimitiveLiteralNode = exports.isOutcomeStatementNode = exports.isOperationDefinitionNode = exports.isObjectLiteralNode = exports.isMapHeaderNode = exports.isMapDocumentNode = exports.isMapDefinitionNode = exports.isMapASTNode = exports.isJessieExpressionNode = exports.isIterationAtomNode = exports.isInlineCallNode = exports.isHttpResponseHandlerNode = exports.isHttpRequestNode = exports.isHttpCallStatementNode = exports.isConditionAtomNode = exports.isCallStatementNode = exports.isAssignmentNode = void 0;
var typescript_is_1 = require("typescript-is");
var error_1 = require("../../error");
exports.isAssignmentNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_1, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return null;
} function _181_s(object) {
    var e_2, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return null;
} function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__181_eu(object) {
    var e_3, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_1 = __values(conditions), conditions_1_1 = conditions_1.next(); !conditions_1_1.done; conditions_1_1 = conditions_1.next()) {
            var condition = conditions_1_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (conditions_1_1 && !conditions_1_1.done && (_a = conditions_1.return)) _a.call(conditions_1);
        }
        finally { if (e_3) throw e_3.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _176_s(object) {
    var e_4, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_4) throw e_4.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_5, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_2 = __values(conditions), conditions_2_1 = conditions_2.next(); !conditions_2_1.done; conditions_2_1 = conditions_2.next()) {
            var condition = conditions_2_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if (conditions_2_1 && !conditions_2_1.done && (_a = conditions_2.return)) _a.call(conditions_2);
        }
        finally { if (e_5) throw e_5.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_6, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_6_1) { e_6 = { error: e_6_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_6) throw e_6.error; }
    }
    return null;
} function _189_s(object) {
    var e_7, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_7_1) { e_7 = { error: e_7_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_7) throw e_7.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_8, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_3 = __values(conditions), conditions_3_1 = conditions_3.next(); !conditions_3_1.done; conditions_3_1 = conditions_3.next()) {
            var condition = conditions_3_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_8_1) { e_8 = { error: e_8_1 }; }
    finally {
        try {
            if (conditions_3_1 && !conditions_3_1.done && (_a = conditions_3.return)) _a.call(conditions_3);
        }
        finally { if (e_8) throw e_8.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_9, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_9_1) { e_9 = { error: e_9_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_9) throw e_9.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_10, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_4 = __values(conditions), conditions_4_1 = conditions_4.next(); !conditions_4_1.done; conditions_4_1 = conditions_4.next()) {
            var condition = conditions_4_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_10_1) { e_10 = { error: e_10_1 }; }
    finally {
        try {
            if (conditions_4_1 && !conditions_4_1.done && (_a = conditions_4.return)) _a.call(conditions_4);
        }
        finally { if (e_10) throw e_10.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_11, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_11_1) { e_11 = { error: e_11_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_11) throw e_11.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_12, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_5 = __values(conditions), conditions_5_1 = conditions_5.next(); !conditions_5_1.done; conditions_5_1 = conditions_5.next()) {
            var condition = conditions_5_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_12_1) { e_12 = { error: e_12_1 }; }
    finally {
        try {
            if (conditions_5_1 && !conditions_5_1.done && (_a = conditions_5.return)) _a.call(conditions_5);
        }
        finally { if (e_12) throw e_12.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_13, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_13_1) { e_13 = { error: e_13_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_13) throw e_13.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_14, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_6 = __values(conditions), conditions_6_1 = conditions_6.next(); !conditions_6_1.done; conditions_6_1 = conditions_6.next()) {
            var condition = conditions_6_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_14_1) { e_14 = { error: e_14_1 }; }
    finally {
        try {
            if (conditions_6_1 && !conditions_6_1.done && (_a = conditions_6.return)) _a.call(conditions_6);
        }
        finally { if (e_14) throw e_14.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_15, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_15_1) { e_15 = { error: e_15_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_15) throw e_15.error; }
    }
    return null;
} var error = _172_s(object); return error; });
exports.isCallStatementNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _203(object) { ; if (object !== "CallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'CallStatement'", path: path.slice(), reason: { type: "string-literal", value: "CallStatement" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_16, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_7 = __values(conditions), conditions_7_1 = conditions_7.next(); !conditions_7_1.done; conditions_7_1 = conditions_7.next()) {
            var condition = conditions_7_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_16_1) { e_16 = { error: e_16_1 }; }
    finally {
        try {
            if (conditions_7_1 && !conditions_7_1.done && (_a = conditions_7.return)) _a.call(conditions_7);
        }
        finally { if (e_16) throw e_16.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_17, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_17_1) { e_17 = { error: e_17_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_17) throw e_17.error; }
    }
    return null;
} function _181_s(object) {
    var e_18, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_18_1) { e_18 = { error: e_18_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_18) throw e_18.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_19, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_8 = __values(conditions), conditions_8_1 = conditions_8.next(); !conditions_8_1.done; conditions_8_1 = conditions_8.next()) {
            var condition = conditions_8_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_19_1) { e_19 = { error: e_19_1 }; }
    finally {
        try {
            if (conditions_8_1 && !conditions_8_1.done && (_a = conditions_8.return)) _a.call(conditions_8);
        }
        finally { if (e_19) throw e_19.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_20, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_20_1) { e_20 = { error: e_20_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_20) throw e_20.error; }
    }
    return null;
} function _191_s(object) {
    var e_21, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_21_1) { e_21 = { error: e_21_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_21) throw e_21.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_22, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_9 = __values(conditions), conditions_9_1 = conditions_9.next(); !conditions_9_1.done; conditions_9_1 = conditions_9.next()) {
            var condition = conditions_9_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_22_1) { e_22 = { error: e_22_1 }; }
    finally {
        try {
            if (conditions_9_1 && !conditions_9_1.done && (_a = conditions_9.return)) _a.call(conditions_9);
        }
        finally { if (e_22) throw e_22.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _189_s(object) {
    var e_23, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_23_1) { e_23 = { error: e_23_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_23) throw e_23.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_24, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_10 = __values(conditions), conditions_10_1 = conditions_10.next(); !conditions_10_1.done; conditions_10_1 = conditions_10.next()) {
            var condition = conditions_10_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_24_1) { e_24 = { error: e_24_1 }; }
    finally {
        try {
            if (conditions_10_1 && !conditions_10_1.done && (_a = conditions_10.return)) _a.call(conditions_10);
        }
        finally { if (e_24) throw e_24.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _176_s(object) {
    var e_25, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_25_1) { e_25 = { error: e_25_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_25) throw e_25.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _177_s(object) {
    var e_26, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_26_1) { e_26 = { error: e_26_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_26) throw e_26.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_27, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_11 = __values(conditions), conditions_11_1 = conditions_11.next(); !conditions_11_1.done; conditions_11_1 = conditions_11.next()) {
            var condition = conditions_11_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_27_1) { e_27 = { error: e_27_1 }; }
    finally {
        try {
            if (conditions_11_1 && !conditions_11_1.done && (_a = conditions_11.return)) _a.call(conditions_11);
        }
        finally { if (e_27) throw e_27.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_28, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_28_1) { e_28 = { error: e_28_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_28) throw e_28.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_29, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_12 = __values(conditions), conditions_12_1 = conditions_12.next(); !conditions_12_1.done; conditions_12_1 = conditions_12.next()) {
            var condition = conditions_12_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_29_1) { e_29 = { error: e_29_1 }; }
    finally {
        try {
            if (conditions_12_1 && !conditions_12_1.done && (_a = conditions_12.return)) _a.call(conditions_12);
        }
        finally { if (e_29) throw e_29.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_30, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_30_1) { e_30 = { error: e_30_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_30) throw e_30.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _205_s(object) {
    var e_31, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_31_1) { e_31 = { error: e_31_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_31) throw e_31.error; }
    }
    return null;
} function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _206_s(object) {
    var e_32, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_32_1) { e_32 = { error: e_32_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_32) throw e_32.error; }
    }
    return null;
} function su__205__206_eu(object) {
    var e_33, _a;
    var conditions = [_205_s, _206_s];
    try {
        for (var conditions_13 = __values(conditions), conditions_13_1 = conditions_13.next(); !conditions_13_1.done; conditions_13_1 = conditions_13.next()) {
            var condition = conditions_13_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_33_1) { e_33 = { error: e_33_1 }; }
    finally {
        try {
            if (conditions_13_1 && !conditions_13_1.done && (_a = conditions_13.return)) _a.call(conditions_13);
        }
        finally { if (e_33) throw e_33.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__205__206_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _202_s(object) {
    var e_34, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _203(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iteration" && key !== "condition" && key !== "operationName" && key !== "arguments" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_34_1) { e_34 = { error: e_34_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_34) throw e_34.error; }
    }
    return null;
} var error = _202_s(object); return error; });
exports.isConditionAtomNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_35, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_14 = __values(conditions), conditions_14_1 = conditions_14.next(); !conditions_14_1.done; conditions_14_1 = conditions_14.next()) {
            var condition = conditions_14_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_35_1) { e_35 = { error: e_35_1 }; }
    finally {
        try {
            if (conditions_14_1 && !conditions_14_1.done && (_a = conditions_14.return)) _a.call(conditions_14);
        }
        finally { if (e_35) throw e_35.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_36, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_36_1) { e_36 = { error: e_36_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_36) throw e_36.error; }
    }
    return null;
} function _181_s(object) {
    var e_37, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_37_1) { e_37 = { error: e_37_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_37) throw e_37.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_38, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_15 = __values(conditions), conditions_15_1 = conditions_15.next(); !conditions_15_1.done; conditions_15_1 = conditions_15.next()) {
            var condition = conditions_15_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_38_1) { e_38 = { error: e_38_1 }; }
    finally {
        try {
            if (conditions_15_1 && !conditions_15_1.done && (_a = conditions_15.return)) _a.call(conditions_15);
        }
        finally { if (e_38) throw e_38.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_39, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_39_1) { e_39 = { error: e_39_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_39) throw e_39.error; }
    }
    return null;
} function _189_s(object) {
    var e_40, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_40_1) { e_40 = { error: e_40_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_40) throw e_40.error; }
    }
    return null;
} var error = _189_s(object); return error; });
exports.isHttpCallStatementNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _214(object) { ; if (object !== "HttpCallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpCallStatement'", path: path.slice(), reason: { type: "string-literal", value: "HttpCallStatement" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _220(object) { ; if (object !== "HttpRequest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpRequest'", path: path.slice(), reason: { type: "string-literal", value: "HttpRequest" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_41, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_16 = __values(conditions), conditions_16_1 = conditions_16.next(); !conditions_16_1.done; conditions_16_1 = conditions_16.next()) {
            var condition = conditions_16_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_41_1) { e_41 = { error: e_41_1 }; }
    finally {
        try {
            if (conditions_16_1 && !conditions_16_1.done && (_a = conditions_16.return)) _a.call(conditions_16);
        }
        finally { if (e_41) throw e_41.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_42, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_42_1) { e_42 = { error: e_42_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_42) throw e_42.error; }
    }
    return null;
} function _181_s(object) {
    var e_43, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_43_1) { e_43 = { error: e_43_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_43) throw e_43.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_44, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_17 = __values(conditions), conditions_17_1 = conditions_17.next(); !conditions_17_1.done; conditions_17_1 = conditions_17.next()) {
            var condition = conditions_17_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_44_1) { e_44 = { error: e_44_1 }; }
    finally {
        try {
            if (conditions_17_1 && !conditions_17_1.done && (_a = conditions_17.return)) _a.call(conditions_17);
        }
        finally { if (e_44) throw e_44.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_45, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_45_1) { e_45 = { error: e_45_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_45) throw e_45.error; }
    }
    return null;
} function _189_s(object) {
    var e_46, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_46_1) { e_46 = { error: e_46_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_46) throw e_46.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_47, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_18 = __values(conditions), conditions_18_1 = conditions_18.next(); !conditions_18_1.done; conditions_18_1 = conditions_18.next()) {
            var condition = conditions_18_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_47_1) { e_47 = { error: e_47_1 }; }
    finally {
        try {
            if (conditions_18_1 && !conditions_18_1.done && (_a = conditions_18.return)) _a.call(conditions_18);
        }
        finally { if (e_47) throw e_47.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_48, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_48_1) { e_48 = { error: e_48_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_48) throw e_48.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_49, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_19 = __values(conditions), conditions_19_1 = conditions_19.next(); !conditions_19_1.done; conditions_19_1 = conditions_19.next()) {
            var condition = conditions_19_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_49_1) { e_49 = { error: e_49_1 }; }
    finally {
        try {
            if (conditions_19_1 && !conditions_19_1.done && (_a = conditions_19.return)) _a.call(conditions_19);
        }
        finally { if (e_49) throw e_49.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_50, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_50_1) { e_50 = { error: e_50_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_50) throw e_50.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_51, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_20 = __values(conditions), conditions_20_1 = conditions_20.next(); !conditions_20_1.done; conditions_20_1 = conditions_20.next()) {
            var condition = conditions_20_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_51_1) { e_51 = { error: e_51_1 }; }
    finally {
        try {
            if (conditions_20_1 && !conditions_20_1.done && (_a = conditions_20.return)) _a.call(conditions_20);
        }
        finally { if (e_51) throw e_51.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_52, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_52_1) { e_52 = { error: e_52_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_52) throw e_52.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_53, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_21 = __values(conditions), conditions_21_1 = conditions_21.next(); !conditions_21_1.done; conditions_21_1 = conditions_21.next()) {
            var condition = conditions_21_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_53_1) { e_53 = { error: e_53_1 }; }
    finally {
        try {
            if (conditions_21_1 && !conditions_21_1.done && (_a = conditions_21.return)) _a.call(conditions_21);
        }
        finally { if (e_53) throw e_53.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_54, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_54_1) { e_54 = { error: e_54_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_54) throw e_54.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _176_s(object) {
    var e_55, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_55_1) { e_55 = { error: e_55_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_55) throw e_55.error; }
    }
    return null;
} function su__undefined__176_eu(object) {
    var e_56, _a;
    var conditions = [_undefined, _176_s];
    try {
        for (var conditions_22 = __values(conditions), conditions_22_1 = conditions_22.next(); !conditions_22_1.done; conditions_22_1 = conditions_22.next()) {
            var condition = conditions_22_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_56_1) { e_56 = { error: e_56_1 }; }
    finally {
        try {
            if (conditions_22_1 && !conditions_22_1.done && (_a = conditions_22.return)) _a.call(conditions_22);
        }
        finally { if (e_56) throw e_56.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function su__undefined__176__177__178__179_eu(object) {
    var e_57, _a;
    var conditions = [_undefined, _176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_23 = __values(conditions), conditions_23_1 = conditions_23.next(); !conditions_23_1.done; conditions_23_1 = conditions_23.next()) {
            var condition = conditions_23_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_57_1) { e_57 = { error: e_57_1 }; }
    finally {
        try {
            if (conditions_23_1 && !conditions_23_1.done && (_a = conditions_23.return)) _a.call(conditions_23);
        }
        finally { if (e_57) throw e_57.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _226(object) { ; if (object !== "apikey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apikey'", path: path.slice(), reason: { type: "string-literal", value: "apikey" } };
else
    return null; } function _228(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _230(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function su__undefined__226__228__230_eu(object) {
    var e_58, _a;
    var conditions = [_undefined, _226, _228, _230];
    try {
        for (var conditions_24 = __values(conditions), conditions_24_1 = conditions_24.next(); !conditions_24_1.done; conditions_24_1 = conditions_24.next()) {
            var condition = conditions_24_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_58_1) { e_58 = { error: e_58_1 }; }
    finally {
        try {
            if (conditions_24_1 && !conditions_24_1.done && (_a = conditions_24.return)) _a.call(conditions_24);
        }
        finally { if (e_58) throw e_58.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _224_s(object) {
    var e_59, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = su__undefined__226__228__230_eu(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_59_1) { e_59 = { error: e_59_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_59) throw e_59.error; }
    }
    return null;
} function sa__224_ea_224(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _224_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _216_s(object) {
    var e_60, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _220(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("query" in object) {
            path.push("query");
            var error = su__undefined__176_eu(object["query"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("headers" in object) {
            path.push("headers");
            var error = su__undefined__176_eu(object["headers"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("body" in object) {
            path.push("body");
            var error = su__undefined__176__177__178__179_eu(object["body"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("security" in object) {
            path.push("security");
            var error = sa__224_ea_224(object["security"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'security' in object", path: path.slice(), reason: { type: "missing-property", property: "security" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "contentType" && key !== "contentLanguage" && key !== "query" && key !== "headers" && key !== "body" && key !== "security" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_60_1) { e_60 = { error: e_60_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_60) throw e_60.error; }
    }
    return null;
} function su__undefined__216_eu(object) {
    var e_61, _a;
    var conditions = [_undefined, _216_s];
    try {
        for (var conditions_25 = __values(conditions), conditions_25_1 = conditions_25.next(); !conditions_25_1.done; conditions_25_1 = conditions_25.next()) {
            var condition = conditions_25_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_61_1) { e_61 = { error: e_61_1 }; }
    finally {
        try {
            if (conditions_25_1 && !conditions_25_1.done && (_a = conditions_25.return)) _a.call(conditions_25);
        }
        finally { if (e_61) throw e_61.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _233(object) { ; if (object !== "HttpResponseHandler")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpResponseHandler'", path: path.slice(), reason: { type: "string-literal", value: "HttpResponseHandler" } };
else
    return null; } function su__undefined__number_eu(object) {
    var e_62, _a;
    var conditions = [_undefined, _number];
    try {
        for (var conditions_26 = __values(conditions), conditions_26_1 = conditions_26.next(); !conditions_26_1.done; conditions_26_1 = conditions_26.next()) {
            var condition = conditions_26_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_62_1) { e_62 = { error: e_62_1 }; }
    finally {
        try {
            if (conditions_26_1 && !conditions_26_1.done && (_a = conditions_26.return)) _a.call(conditions_26);
        }
        finally { if (e_62) throw e_62.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _205_s(object) {
    var e_63, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_63_1) { e_63 = { error: e_63_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_63) throw e_63.error; }
    }
    return null;
} function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _206_s(object) {
    var e_64, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_64_1) { e_64 = { error: e_64_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_64) throw e_64.error; }
    }
    return null;
} function su__205__206_eu(object) {
    var e_65, _a;
    var conditions = [_205_s, _206_s];
    try {
        for (var conditions_27 = __values(conditions), conditions_27_1 = conditions_27.next(); !conditions_27_1.done; conditions_27_1 = conditions_27.next()) {
            var condition = conditions_27_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_65_1) { e_65 = { error: e_65_1 }; }
    finally {
        try {
            if (conditions_27_1 && !conditions_27_1.done && (_a = conditions_27.return)) _a.call(conditions_27);
        }
        finally { if (e_65) throw e_65.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__205__206_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _218_s(object) {
    var e_66, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _233(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("statusCode" in object) {
            path.push("statusCode");
            var error = su__undefined__number_eu(object["statusCode"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "statusCode" && key !== "contentType" && key !== "contentLanguage" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_66_1) { e_66 = { error: e_66_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_66) throw e_66.error; }
    }
    return null;
} function sa__218_ea_218(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _218_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _213_s(object) {
    var e_67, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _214(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("method" in object) {
            path.push("method");
            var error = _string(object["method"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'method' in object", path: path.slice(), reason: { type: "missing-property", property: "method" } };
    }
    {
        if ("url" in object) {
            path.push("url");
            var error = _string(object["url"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'url' in object", path: path.slice(), reason: { type: "missing-property", property: "url" } };
    }
    {
        if ("request" in object) {
            path.push("request");
            var error = su__undefined__216_eu(object["request"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("responseHandlers" in object) {
            path.push("responseHandlers");
            var error = sa__218_ea_218(object["responseHandlers"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'responseHandlers' in object", path: path.slice(), reason: { type: "missing-property", property: "responseHandlers" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "method" && key !== "url" && key !== "request" && key !== "responseHandlers" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_67_1) { e_67 = { error: e_67_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_67) throw e_67.error; }
    }
    return null;
} var error = _213_s(object); return error; });
exports.isHttpRequestNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _220(object) { ; if (object !== "HttpRequest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpRequest'", path: path.slice(), reason: { type: "string-literal", value: "HttpRequest" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_68, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_28 = __values(conditions), conditions_28_1 = conditions_28.next(); !conditions_28_1.done; conditions_28_1 = conditions_28.next()) {
            var condition = conditions_28_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_68_1) { e_68 = { error: e_68_1 }; }
    finally {
        try {
            if (conditions_28_1 && !conditions_28_1.done && (_a = conditions_28.return)) _a.call(conditions_28);
        }
        finally { if (e_68) throw e_68.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_69, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_69_1) { e_69 = { error: e_69_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_69) throw e_69.error; }
    }
    return null;
} function _181_s(object) {
    var e_70, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_70_1) { e_70 = { error: e_70_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_70) throw e_70.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_71, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_29 = __values(conditions), conditions_29_1 = conditions_29.next(); !conditions_29_1.done; conditions_29_1 = conditions_29.next()) {
            var condition = conditions_29_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_71_1) { e_71 = { error: e_71_1 }; }
    finally {
        try {
            if (conditions_29_1 && !conditions_29_1.done && (_a = conditions_29.return)) _a.call(conditions_29);
        }
        finally { if (e_71) throw e_71.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_72, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_72_1) { e_72 = { error: e_72_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_72) throw e_72.error; }
    }
    return null;
} function _189_s(object) {
    var e_73, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_73_1) { e_73 = { error: e_73_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_73) throw e_73.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_74, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_30 = __values(conditions), conditions_30_1 = conditions_30.next(); !conditions_30_1.done; conditions_30_1 = conditions_30.next()) {
            var condition = conditions_30_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_74_1) { e_74 = { error: e_74_1 }; }
    finally {
        try {
            if (conditions_30_1 && !conditions_30_1.done && (_a = conditions_30.return)) _a.call(conditions_30);
        }
        finally { if (e_74) throw e_74.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_75, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_75_1) { e_75 = { error: e_75_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_75) throw e_75.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_76, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_31 = __values(conditions), conditions_31_1 = conditions_31.next(); !conditions_31_1.done; conditions_31_1 = conditions_31.next()) {
            var condition = conditions_31_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_76_1) { e_76 = { error: e_76_1 }; }
    finally {
        try {
            if (conditions_31_1 && !conditions_31_1.done && (_a = conditions_31.return)) _a.call(conditions_31);
        }
        finally { if (e_76) throw e_76.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_77, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_77_1) { e_77 = { error: e_77_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_77) throw e_77.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_78, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_32 = __values(conditions), conditions_32_1 = conditions_32.next(); !conditions_32_1.done; conditions_32_1 = conditions_32.next()) {
            var condition = conditions_32_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_78_1) { e_78 = { error: e_78_1 }; }
    finally {
        try {
            if (conditions_32_1 && !conditions_32_1.done && (_a = conditions_32.return)) _a.call(conditions_32);
        }
        finally { if (e_78) throw e_78.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_79, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_79_1) { e_79 = { error: e_79_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_79) throw e_79.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_80, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_33 = __values(conditions), conditions_33_1 = conditions_33.next(); !conditions_33_1.done; conditions_33_1 = conditions_33.next()) {
            var condition = conditions_33_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_80_1) { e_80 = { error: e_80_1 }; }
    finally {
        try {
            if (conditions_33_1 && !conditions_33_1.done && (_a = conditions_33.return)) _a.call(conditions_33);
        }
        finally { if (e_80) throw e_80.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_81, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_81_1) { e_81 = { error: e_81_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_81) throw e_81.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _176_s(object) {
    var e_82, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_82_1) { e_82 = { error: e_82_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_82) throw e_82.error; }
    }
    return null;
} function su__undefined__176_eu(object) {
    var e_83, _a;
    var conditions = [_undefined, _176_s];
    try {
        for (var conditions_34 = __values(conditions), conditions_34_1 = conditions_34.next(); !conditions_34_1.done; conditions_34_1 = conditions_34.next()) {
            var condition = conditions_34_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_83_1) { e_83 = { error: e_83_1 }; }
    finally {
        try {
            if (conditions_34_1 && !conditions_34_1.done && (_a = conditions_34.return)) _a.call(conditions_34);
        }
        finally { if (e_83) throw e_83.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function su__undefined__176__177__178__179_eu(object) {
    var e_84, _a;
    var conditions = [_undefined, _176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_35 = __values(conditions), conditions_35_1 = conditions_35.next(); !conditions_35_1.done; conditions_35_1 = conditions_35.next()) {
            var condition = conditions_35_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_84_1) { e_84 = { error: e_84_1 }; }
    finally {
        try {
            if (conditions_35_1 && !conditions_35_1.done && (_a = conditions_35.return)) _a.call(conditions_35);
        }
        finally { if (e_84) throw e_84.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _226(object) { ; if (object !== "apikey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apikey'", path: path.slice(), reason: { type: "string-literal", value: "apikey" } };
else
    return null; } function _228(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _230(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function su__undefined__226__228__230_eu(object) {
    var e_85, _a;
    var conditions = [_undefined, _226, _228, _230];
    try {
        for (var conditions_36 = __values(conditions), conditions_36_1 = conditions_36.next(); !conditions_36_1.done; conditions_36_1 = conditions_36.next()) {
            var condition = conditions_36_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_85_1) { e_85 = { error: e_85_1 }; }
    finally {
        try {
            if (conditions_36_1 && !conditions_36_1.done && (_a = conditions_36.return)) _a.call(conditions_36);
        }
        finally { if (e_85) throw e_85.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _224_s(object) {
    var e_86, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = su__undefined__226__228__230_eu(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_86_1) { e_86 = { error: e_86_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_86) throw e_86.error; }
    }
    return null;
} function sa__224_ea_224(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _224_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _216_s(object) {
    var e_87, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _220(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("query" in object) {
            path.push("query");
            var error = su__undefined__176_eu(object["query"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("headers" in object) {
            path.push("headers");
            var error = su__undefined__176_eu(object["headers"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("body" in object) {
            path.push("body");
            var error = su__undefined__176__177__178__179_eu(object["body"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("security" in object) {
            path.push("security");
            var error = sa__224_ea_224(object["security"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'security' in object", path: path.slice(), reason: { type: "missing-property", property: "security" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "contentType" && key !== "contentLanguage" && key !== "query" && key !== "headers" && key !== "body" && key !== "security" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_87_1) { e_87 = { error: e_87_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_87) throw e_87.error; }
    }
    return null;
} var error = _216_s(object); return error; });
exports.isHttpResponseHandlerNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _233(object) { ; if (object !== "HttpResponseHandler")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpResponseHandler'", path: path.slice(), reason: { type: "string-literal", value: "HttpResponseHandler" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__number_eu(object) {
    var e_88, _a;
    var conditions = [_undefined, _number];
    try {
        for (var conditions_37 = __values(conditions), conditions_37_1 = conditions_37.next(); !conditions_37_1.done; conditions_37_1 = conditions_37.next()) {
            var condition = conditions_37_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_88_1) { e_88 = { error: e_88_1 }; }
    finally {
        try {
            if (conditions_37_1 && !conditions_37_1.done && (_a = conditions_37.return)) _a.call(conditions_37);
        }
        finally { if (e_88) throw e_88.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_89, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_38 = __values(conditions), conditions_38_1 = conditions_38.next(); !conditions_38_1.done; conditions_38_1 = conditions_38.next()) {
            var condition = conditions_38_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_89_1) { e_89 = { error: e_89_1 }; }
    finally {
        try {
            if (conditions_38_1 && !conditions_38_1.done && (_a = conditions_38.return)) _a.call(conditions_38);
        }
        finally { if (e_89) throw e_89.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _186_s(object) {
    var e_90, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_90_1) { e_90 = { error: e_90_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_90) throw e_90.error; }
    }
    return null;
} function _181_s(object) {
    var e_91, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_91_1) { e_91 = { error: e_91_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_91) throw e_91.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_92, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_39 = __values(conditions), conditions_39_1 = conditions_39.next(); !conditions_39_1.done; conditions_39_1 = conditions_39.next()) {
            var condition = conditions_39_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_92_1) { e_92 = { error: e_92_1 }; }
    finally {
        try {
            if (conditions_39_1 && !conditions_39_1.done && (_a = conditions_39.return)) _a.call(conditions_39);
        }
        finally { if (e_92) throw e_92.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_93, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_93_1) { e_93 = { error: e_93_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_93) throw e_93.error; }
    }
    return null;
} function _189_s(object) {
    var e_94, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_94_1) { e_94 = { error: e_94_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_94) throw e_94.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_95, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_40 = __values(conditions), conditions_40_1 = conditions_40.next(); !conditions_40_1.done; conditions_40_1 = conditions_40.next()) {
            var condition = conditions_40_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_95_1) { e_95 = { error: e_95_1 }; }
    finally {
        try {
            if (conditions_40_1 && !conditions_40_1.done && (_a = conditions_40.return)) _a.call(conditions_40);
        }
        finally { if (e_95) throw e_95.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _176_s(object) {
    var e_96, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_96_1) { e_96 = { error: e_96_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_96) throw e_96.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_97, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_97_1) { e_97 = { error: e_97_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_97) throw e_97.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_98, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_41 = __values(conditions), conditions_41_1 = conditions_41.next(); !conditions_41_1.done; conditions_41_1 = conditions_41.next()) {
            var condition = conditions_41_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_98_1) { e_98 = { error: e_98_1 }; }
    finally {
        try {
            if (conditions_41_1 && !conditions_41_1.done && (_a = conditions_41.return)) _a.call(conditions_41);
        }
        finally { if (e_98) throw e_98.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_99, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_99_1) { e_99 = { error: e_99_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_99) throw e_99.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_100, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_42 = __values(conditions), conditions_42_1 = conditions_42.next(); !conditions_42_1.done; conditions_42_1 = conditions_42.next()) {
            var condition = conditions_42_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_100_1) { e_100 = { error: e_100_1 }; }
    finally {
        try {
            if (conditions_42_1 && !conditions_42_1.done && (_a = conditions_42.return)) _a.call(conditions_42);
        }
        finally { if (e_100) throw e_100.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_101, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_101_1) { e_101 = { error: e_101_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_101) throw e_101.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_102, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_43 = __values(conditions), conditions_43_1 = conditions_43.next(); !conditions_43_1.done; conditions_43_1 = conditions_43.next()) {
            var condition = conditions_43_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_102_1) { e_102 = { error: e_102_1 }; }
    finally {
        try {
            if (conditions_43_1 && !conditions_43_1.done && (_a = conditions_43.return)) _a.call(conditions_43);
        }
        finally { if (e_102) throw e_102.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_103, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_103_1) { e_103 = { error: e_103_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_103) throw e_103.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _205_s(object) {
    var e_104, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_104_1) { e_104 = { error: e_104_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_104) throw e_104.error; }
    }
    return null;
} function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _206_s(object) {
    var e_105, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_105_1) { e_105 = { error: e_105_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_105) throw e_105.error; }
    }
    return null;
} function su__205__206_eu(object) {
    var e_106, _a;
    var conditions = [_205_s, _206_s];
    try {
        for (var conditions_44 = __values(conditions), conditions_44_1 = conditions_44.next(); !conditions_44_1.done; conditions_44_1 = conditions_44.next()) {
            var condition = conditions_44_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_106_1) { e_106 = { error: e_106_1 }; }
    finally {
        try {
            if (conditions_44_1 && !conditions_44_1.done && (_a = conditions_44.return)) _a.call(conditions_44);
        }
        finally { if (e_106) throw e_106.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__205__206_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _218_s(object) {
    var e_107, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _233(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("statusCode" in object) {
            path.push("statusCode");
            var error = su__undefined__number_eu(object["statusCode"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "statusCode" && key !== "contentType" && key !== "contentLanguage" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_107_1) { e_107 = { error: e_107_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_107) throw e_107.error; }
    }
    return null;
} var error = _218_s(object); return error; });
exports.isInlineCallNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_108, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_45 = __values(conditions), conditions_45_1 = conditions_45.next(); !conditions_45_1.done; conditions_45_1 = conditions_45.next()) {
            var condition = conditions_45_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_108_1) { e_108 = { error: e_108_1 }; }
    finally {
        try {
            if (conditions_45_1 && !conditions_45_1.done && (_a = conditions_45.return)) _a.call(conditions_45);
        }
        finally { if (e_108) throw e_108.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_109, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_109_1) { e_109 = { error: e_109_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_109) throw e_109.error; }
    }
    return null;
} function _181_s(object) {
    var e_110, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_110_1) { e_110 = { error: e_110_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_110) throw e_110.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_111, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_46 = __values(conditions), conditions_46_1 = conditions_46.next(); !conditions_46_1.done; conditions_46_1 = conditions_46.next()) {
            var condition = conditions_46_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_111_1) { e_111 = { error: e_111_1 }; }
    finally {
        try {
            if (conditions_46_1 && !conditions_46_1.done && (_a = conditions_46.return)) _a.call(conditions_46);
        }
        finally { if (e_111) throw e_111.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_112, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_112_1) { e_112 = { error: e_112_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_112) throw e_112.error; }
    }
    return null;
} function _189_s(object) {
    var e_113, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_113_1) { e_113 = { error: e_113_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_113) throw e_113.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_114, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_47 = __values(conditions), conditions_47_1 = conditions_47.next(); !conditions_47_1.done; conditions_47_1 = conditions_47.next()) {
            var condition = conditions_47_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_114_1) { e_114 = { error: e_114_1 }; }
    finally {
        try {
            if (conditions_47_1 && !conditions_47_1.done && (_a = conditions_47.return)) _a.call(conditions_47);
        }
        finally { if (e_114) throw e_114.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_115, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_115_1) { e_115 = { error: e_115_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_115) throw e_115.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_116, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_48 = __values(conditions), conditions_48_1 = conditions_48.next(); !conditions_48_1.done; conditions_48_1 = conditions_48.next()) {
            var condition = conditions_48_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_116_1) { e_116 = { error: e_116_1 }; }
    finally {
        try {
            if (conditions_48_1 && !conditions_48_1.done && (_a = conditions_48.return)) _a.call(conditions_48);
        }
        finally { if (e_116) throw e_116.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _176_s(object) {
    var e_117, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_117_1) { e_117 = { error: e_117_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_117) throw e_117.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_118, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_49 = __values(conditions), conditions_49_1 = conditions_49.next(); !conditions_49_1.done; conditions_49_1 = conditions_49.next()) {
            var condition = conditions_49_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_118_1) { e_118 = { error: e_118_1 }; }
    finally {
        try {
            if (conditions_49_1 && !conditions_49_1.done && (_a = conditions_49.return)) _a.call(conditions_49);
        }
        finally { if (e_118) throw e_118.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_119, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_119_1) { e_119 = { error: e_119_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_119) throw e_119.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_120, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_50 = __values(conditions), conditions_50_1 = conditions_50.next(); !conditions_50_1.done; conditions_50_1 = conditions_50.next()) {
            var condition = conditions_50_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_120_1) { e_120 = { error: e_120_1 }; }
    finally {
        try {
            if (conditions_50_1 && !conditions_50_1.done && (_a = conditions_50.return)) _a.call(conditions_50);
        }
        finally { if (e_120) throw e_120.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_121, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_121_1) { e_121 = { error: e_121_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_121) throw e_121.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _177_s(object) {
    var e_122, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_122_1) { e_122 = { error: e_122_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_122) throw e_122.error; }
    }
    return null;
} var error = _177_s(object); return error; });
exports.isIterationAtomNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_123, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_51 = __values(conditions), conditions_51_1 = conditions_51.next(); !conditions_51_1.done; conditions_51_1 = conditions_51.next()) {
            var condition = conditions_51_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_123_1) { e_123 = { error: e_123_1 }; }
    finally {
        try {
            if (conditions_51_1 && !conditions_51_1.done && (_a = conditions_51.return)) _a.call(conditions_51);
        }
        finally { if (e_123) throw e_123.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_124, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_124_1) { e_124 = { error: e_124_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_124) throw e_124.error; }
    }
    return null;
} function _181_s(object) {
    var e_125, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_125_1) { e_125 = { error: e_125_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_125) throw e_125.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_126, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_52 = __values(conditions), conditions_52_1 = conditions_52.next(); !conditions_52_1.done; conditions_52_1 = conditions_52.next()) {
            var condition = conditions_52_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_126_1) { e_126 = { error: e_126_1 }; }
    finally {
        try {
            if (conditions_52_1 && !conditions_52_1.done && (_a = conditions_52.return)) _a.call(conditions_52);
        }
        finally { if (e_126) throw e_126.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_127, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_127_1) { e_127 = { error: e_127_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_127) throw e_127.error; }
    }
    return null;
} function _191_s(object) {
    var e_128, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_128_1) { e_128 = { error: e_128_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_128) throw e_128.error; }
    }
    return null;
} var error = _191_s(object); return error; });
exports.isJessieExpressionNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_129, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_53 = __values(conditions), conditions_53_1 = conditions_53.next(); !conditions_53_1.done; conditions_53_1 = conditions_53.next()) {
            var condition = conditions_53_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_129_1) { e_129 = { error: e_129_1 }; }
    finally {
        try {
            if (conditions_53_1 && !conditions_53_1.done && (_a = conditions_53.return)) _a.call(conditions_53);
        }
        finally { if (e_129) throw e_129.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_130, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_130_1) { e_130 = { error: e_130_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_130) throw e_130.error; }
    }
    return null;
} function _181_s(object) {
    var e_131, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_131_1) { e_131 = { error: e_131_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_131) throw e_131.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_132, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_54 = __values(conditions), conditions_54_1 = conditions_54.next(); !conditions_54_1.done; conditions_54_1 = conditions_54.next()) {
            var condition = conditions_54_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_132_1) { e_132 = { error: e_132_1 }; }
    finally {
        try {
            if (conditions_54_1 && !conditions_54_1.done && (_a = conditions_54.return)) _a.call(conditions_54);
        }
        finally { if (e_132) throw e_132.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_133, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_133_1) { e_133 = { error: e_133_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_133) throw e_133.error; }
    }
    return null;
} var error = _179_s(object); return error; });
exports.isMapASTNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_134, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_134_1) { e_134 = { error: e_134_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_134) throw e_134.error; }
    }
    return null;
} function _181_s(object) {
    var e_135, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_135_1) { e_135 = { error: e_135_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_135) throw e_135.error; }
    }
    return null;
} function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__181_eu(object) {
    var e_136, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_55 = __values(conditions), conditions_55_1 = conditions_55.next(); !conditions_55_1.done; conditions_55_1 = conditions_55.next()) {
            var condition = conditions_55_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_136_1) { e_136 = { error: e_136_1 }; }
    finally {
        try {
            if (conditions_55_1 && !conditions_55_1.done && (_a = conditions_55.return)) _a.call(conditions_55);
        }
        finally { if (e_136) throw e_136.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _176_s(object) {
    var e_137, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_137_1) { e_137 = { error: e_137_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_137) throw e_137.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_138, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_56 = __values(conditions), conditions_56_1 = conditions_56.next(); !conditions_56_1.done; conditions_56_1 = conditions_56.next()) {
            var condition = conditions_56_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_138_1) { e_138 = { error: e_138_1 }; }
    finally {
        try {
            if (conditions_56_1 && !conditions_56_1.done && (_a = conditions_56.return)) _a.call(conditions_56);
        }
        finally { if (e_138) throw e_138.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_139, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_139_1) { e_139 = { error: e_139_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_139) throw e_139.error; }
    }
    return null;
} function _189_s(object) {
    var e_140, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_140_1) { e_140 = { error: e_140_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_140) throw e_140.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_141, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_57 = __values(conditions), conditions_57_1 = conditions_57.next(); !conditions_57_1.done; conditions_57_1 = conditions_57.next()) {
            var condition = conditions_57_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_141_1) { e_141 = { error: e_141_1 }; }
    finally {
        try {
            if (conditions_57_1 && !conditions_57_1.done && (_a = conditions_57.return)) _a.call(conditions_57);
        }
        finally { if (e_141) throw e_141.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_142, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_142_1) { e_142 = { error: e_142_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_142) throw e_142.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_143, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_58 = __values(conditions), conditions_58_1 = conditions_58.next(); !conditions_58_1.done; conditions_58_1 = conditions_58.next()) {
            var condition = conditions_58_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_143_1) { e_143 = { error: e_143_1 }; }
    finally {
        try {
            if (conditions_58_1 && !conditions_58_1.done && (_a = conditions_58.return)) _a.call(conditions_58);
        }
        finally { if (e_143) throw e_143.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_144, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_144_1) { e_144 = { error: e_144_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_144) throw e_144.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_145, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_59 = __values(conditions), conditions_59_1 = conditions_59.next(); !conditions_59_1.done; conditions_59_1 = conditions_59.next()) {
            var condition = conditions_59_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_145_1) { e_145 = { error: e_145_1 }; }
    finally {
        try {
            if (conditions_59_1 && !conditions_59_1.done && (_a = conditions_59.return)) _a.call(conditions_59);
        }
        finally { if (e_145) throw e_145.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_146, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_146_1) { e_146 = { error: e_146_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_146) throw e_146.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_147, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_60 = __values(conditions), conditions_60_1 = conditions_60.next(); !conditions_60_1.done; conditions_60_1 = conditions_60.next()) {
            var condition = conditions_60_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_147_1) { e_147 = { error: e_147_1 }; }
    finally {
        try {
            if (conditions_60_1 && !conditions_60_1.done && (_a = conditions_60.return)) _a.call(conditions_60);
        }
        finally { if (e_147) throw e_147.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_148, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_148_1) { e_148 = { error: e_148_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_148) throw e_148.error; }
    }
    return null;
} function _203(object) { ; if (object !== "CallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'CallStatement'", path: path.slice(), reason: { type: "string-literal", value: "CallStatement" } };
else
    return null; } function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _205_s(object) {
    var e_149, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_149_1) { e_149 = { error: e_149_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_149) throw e_149.error; }
    }
    return null;
} function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _206_s(object) {
    var e_150, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_150_1) { e_150 = { error: e_150_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_150) throw e_150.error; }
    }
    return null;
} function su__205__206_eu(object) {
    var e_151, _a;
    var conditions = [_205_s, _206_s];
    try {
        for (var conditions_61 = __values(conditions), conditions_61_1 = conditions_61.next(); !conditions_61_1.done; conditions_61_1 = conditions_61.next()) {
            var condition = conditions_61_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_151_1) { e_151 = { error: e_151_1 }; }
    finally {
        try {
            if (conditions_61_1 && !conditions_61_1.done && (_a = conditions_61.return)) _a.call(conditions_61);
        }
        finally { if (e_151) throw e_151.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__205__206_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _202_s(object) {
    var e_152, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _203(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iteration" && key !== "condition" && key !== "operationName" && key !== "arguments" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_152_1) { e_152 = { error: e_152_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_152) throw e_152.error; }
    }
    return null;
} function _214(object) { ; if (object !== "HttpCallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpCallStatement'", path: path.slice(), reason: { type: "string-literal", value: "HttpCallStatement" } };
else
    return null; } function _220(object) { ; if (object !== "HttpRequest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpRequest'", path: path.slice(), reason: { type: "string-literal", value: "HttpRequest" } };
else
    return null; } function su__undefined__176_eu(object) {
    var e_153, _a;
    var conditions = [_undefined, _176_s];
    try {
        for (var conditions_62 = __values(conditions), conditions_62_1 = conditions_62.next(); !conditions_62_1.done; conditions_62_1 = conditions_62.next()) {
            var condition = conditions_62_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_153_1) { e_153 = { error: e_153_1 }; }
    finally {
        try {
            if (conditions_62_1 && !conditions_62_1.done && (_a = conditions_62.return)) _a.call(conditions_62);
        }
        finally { if (e_153) throw e_153.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function su__undefined__176__177__178__179_eu(object) {
    var e_154, _a;
    var conditions = [_undefined, _176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_63 = __values(conditions), conditions_63_1 = conditions_63.next(); !conditions_63_1.done; conditions_63_1 = conditions_63.next()) {
            var condition = conditions_63_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_154_1) { e_154 = { error: e_154_1 }; }
    finally {
        try {
            if (conditions_63_1 && !conditions_63_1.done && (_a = conditions_63.return)) _a.call(conditions_63);
        }
        finally { if (e_154) throw e_154.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _226(object) { ; if (object !== "apikey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apikey'", path: path.slice(), reason: { type: "string-literal", value: "apikey" } };
else
    return null; } function _228(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _230(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function su__undefined__226__228__230_eu(object) {
    var e_155, _a;
    var conditions = [_undefined, _226, _228, _230];
    try {
        for (var conditions_64 = __values(conditions), conditions_64_1 = conditions_64.next(); !conditions_64_1.done; conditions_64_1 = conditions_64.next()) {
            var condition = conditions_64_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_155_1) { e_155 = { error: e_155_1 }; }
    finally {
        try {
            if (conditions_64_1 && !conditions_64_1.done && (_a = conditions_64.return)) _a.call(conditions_64);
        }
        finally { if (e_155) throw e_155.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _224_s(object) {
    var e_156, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = su__undefined__226__228__230_eu(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_156_1) { e_156 = { error: e_156_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_156) throw e_156.error; }
    }
    return null;
} function sa__224_ea_224(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _224_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _216_s(object) {
    var e_157, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _220(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("query" in object) {
            path.push("query");
            var error = su__undefined__176_eu(object["query"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("headers" in object) {
            path.push("headers");
            var error = su__undefined__176_eu(object["headers"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("body" in object) {
            path.push("body");
            var error = su__undefined__176__177__178__179_eu(object["body"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("security" in object) {
            path.push("security");
            var error = sa__224_ea_224(object["security"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'security' in object", path: path.slice(), reason: { type: "missing-property", property: "security" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "contentType" && key !== "contentLanguage" && key !== "query" && key !== "headers" && key !== "body" && key !== "security" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_157_1) { e_157 = { error: e_157_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_157) throw e_157.error; }
    }
    return null;
} function su__undefined__216_eu(object) {
    var e_158, _a;
    var conditions = [_undefined, _216_s];
    try {
        for (var conditions_65 = __values(conditions), conditions_65_1 = conditions_65.next(); !conditions_65_1.done; conditions_65_1 = conditions_65.next()) {
            var condition = conditions_65_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_158_1) { e_158 = { error: e_158_1 }; }
    finally {
        try {
            if (conditions_65_1 && !conditions_65_1.done && (_a = conditions_65.return)) _a.call(conditions_65);
        }
        finally { if (e_158) throw e_158.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _233(object) { ; if (object !== "HttpResponseHandler")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpResponseHandler'", path: path.slice(), reason: { type: "string-literal", value: "HttpResponseHandler" } };
else
    return null; } function su__undefined__number_eu(object) {
    var e_159, _a;
    var conditions = [_undefined, _number];
    try {
        for (var conditions_66 = __values(conditions), conditions_66_1 = conditions_66.next(); !conditions_66_1.done; conditions_66_1 = conditions_66.next()) {
            var condition = conditions_66_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_159_1) { e_159 = { error: e_159_1 }; }
    finally {
        try {
            if (conditions_66_1 && !conditions_66_1.done && (_a = conditions_66.return)) _a.call(conditions_66);
        }
        finally { if (e_159) throw e_159.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _218_s(object) {
    var e_160, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _233(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("statusCode" in object) {
            path.push("statusCode");
            var error = su__undefined__number_eu(object["statusCode"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "statusCode" && key !== "contentType" && key !== "contentLanguage" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_160_1) { e_160 = { error: e_160_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_160) throw e_160.error; }
    }
    return null;
} function sa__218_ea_218(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _218_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _213_s(object) {
    var e_161, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _214(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("method" in object) {
            path.push("method");
            var error = _string(object["method"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'method' in object", path: path.slice(), reason: { type: "missing-property", property: "method" } };
    }
    {
        if ("url" in object) {
            path.push("url");
            var error = _string(object["url"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'url' in object", path: path.slice(), reason: { type: "missing-property", property: "url" } };
    }
    {
        if ("request" in object) {
            path.push("request");
            var error = su__undefined__216_eu(object["request"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("responseHandlers" in object) {
            path.push("responseHandlers");
            var error = sa__218_ea_218(object["responseHandlers"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'responseHandlers' in object", path: path.slice(), reason: { type: "missing-property", property: "responseHandlers" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "method" && key !== "url" && key !== "request" && key !== "responseHandlers" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_161_1) { e_161 = { error: e_161_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_161) throw e_161.error; }
    }
    return null;
} function _241(object) { ; if (object !== "MapDefinition")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapDefinition'", path: path.slice(), reason: { type: "string-literal", value: "MapDefinition" } };
else
    return null; } function su__202__205__206__213_eu(object) {
    var e_162, _a;
    var conditions = [_202_s, _205_s, _206_s, _213_s];
    try {
        for (var conditions_67 = __values(conditions), conditions_67_1 = conditions_67.next(); !conditions_67_1.done; conditions_67_1 = conditions_67.next()) {
            var condition = conditions_67_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_162_1) { e_162 = { error: e_162_1 }; }
    finally {
        try {
            if (conditions_67_1 && !conditions_67_1.done && (_a = conditions_67.return)) _a.call(conditions_67);
        }
        finally { if (e_162) throw e_162.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__202__205__206__213_eu_ea_243(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__202__205__206__213_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _245_s(object) {
    var e_163, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("title" in object) {
            path.push("title");
            var error = _string(object["title"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'title' in object", path: path.slice(), reason: { type: "missing-property", property: "title" } };
    }
    {
        if ("description" in object) {
            path.push("description");
            var error = su__undefined__string_eu(object["description"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "title" && key !== "description" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_163_1) { e_163 = { error: e_163_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_163) throw e_163.error; }
    }
    return null;
} function su__undefined__245_eu(object) {
    var e_164, _a;
    var conditions = [_undefined, _245_s];
    try {
        for (var conditions_68 = __values(conditions), conditions_68_1 = conditions_68.next(); !conditions_68_1.done; conditions_68_1 = conditions_68.next()) {
            var condition = conditions_68_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_164_1) { e_164 = { error: e_164_1 }; }
    finally {
        try {
            if (conditions_68_1 && !conditions_68_1.done && (_a = conditions_68.return)) _a.call(conditions_68);
        }
        finally { if (e_164) throw e_164.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _235_s(object) {
    var e_165, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _241(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("usecaseName" in object) {
            path.push("usecaseName");
            var error = _string(object["usecaseName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'usecaseName' in object", path: path.slice(), reason: { type: "missing-property", property: "usecaseName" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "name" && key !== "usecaseName" && key !== "statements" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_165_1) { e_165 = { error: e_165_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_165) throw e_165.error; }
    }
    return null;
} function _247(object) { ; if (object !== "OperationDefinition")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OperationDefinition'", path: path.slice(), reason: { type: "string-literal", value: "OperationDefinition" } };
else
    return null; } function _237_s(object) {
    var e_166, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _247(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "name" && key !== "statements" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_166_1) { e_166 = { error: e_166_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_166) throw e_166.error; }
    }
    return null;
} function _249(object) { ; if (object !== "MapHeader")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapHeader'", path: path.slice(), reason: { type: "string-literal", value: "MapHeader" } };
else
    return null; } function _252_s(object) {
    var e_167, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("major" in object) {
            path.push("major");
            var error = _number(object["major"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
    }
    {
        if ("minor" in object) {
            path.push("minor");
            var error = _number(object["minor"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
    }
    {
        if ("patch" in object) {
            path.push("patch");
            var error = su__undefined__number_eu(object["patch"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("label" in object) {
            path.push("label");
            var error = su__undefined__string_eu(object["label"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_167_1) { e_167 = { error: e_167_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_167) throw e_167.error; }
    }
    return null;
} function _251_s(object) {
    var e_168, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("scope" in object) {
            path.push("scope");
            var error = su__undefined__string_eu(object["scope"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("version" in object) {
            path.push("version");
            var error = _252_s(object["version"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'version' in object", path: path.slice(), reason: { type: "missing-property", property: "version" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "scope" && key !== "name" && key !== "version")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_168_1) { e_168 = { error: e_168_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_168) throw e_168.error; }
    }
    return null;
} function _238_s(object) {
    var e_169, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _249(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("profile" in object) {
            path.push("profile");
            var error = _251_s(object["profile"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'profile' in object", path: path.slice(), reason: { type: "missing-property", property: "profile" } };
    }
    {
        if ("provider" in object) {
            path.push("provider");
            var error = _string(object["provider"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'provider' in object", path: path.slice(), reason: { type: "missing-property", property: "provider" } };
    }
    {
        if ("variant" in object) {
            path.push("variant");
            var error = su__undefined__string_eu(object["variant"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "profile" && key !== "provider" && key !== "variant" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_169_1) { e_169 = { error: e_169_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_169) throw e_169.error; }
    }
    return null;
} function _258_s(object) {
    var e_170, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("major" in object) {
            path.push("major");
            var error = _number(object["major"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
    }
    {
        if ("minor" in object) {
            path.push("minor");
            var error = _number(object["minor"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
    }
    {
        if ("patch" in object) {
            path.push("patch");
            var error = _number(object["patch"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'patch' in object", path: path.slice(), reason: { type: "missing-property", property: "patch" } };
    }
    {
        if ("label" in object) {
            path.push("label");
            var error = su__undefined__string_eu(object["label"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_170_1) { e_170 = { error: e_170_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_170) throw e_170.error; }
    }
    return null;
} function _259_s(object) {
    var e_171, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("major" in object) {
            path.push("major");
            var error = _number(object["major"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
    }
    {
        if ("minor" in object) {
            path.push("minor");
            var error = _number(object["minor"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
    }
    {
        if ("patch" in object) {
            path.push("patch");
            var error = _number(object["patch"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'patch' in object", path: path.slice(), reason: { type: "missing-property", property: "patch" } };
    }
    {
        if ("label" in object) {
            path.push("label");
            var error = su__undefined__string_eu(object["label"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_171_1) { e_171 = { error: e_171_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_171) throw e_171.error; }
    }
    return null;
} function _253_s(object) {
    var e_172, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("astVersion" in object) {
            path.push("astVersion");
            var error = _258_s(object["astVersion"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'astVersion' in object", path: path.slice(), reason: { type: "missing-property", property: "astVersion" } };
    }
    {
        if ("parserVersion" in object) {
            path.push("parserVersion");
            var error = _259_s(object["parserVersion"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'parserVersion' in object", path: path.slice(), reason: { type: "missing-property", property: "parserVersion" } };
    }
    {
        if ("sourceChecksum" in object) {
            path.push("sourceChecksum");
            var error = _string(object["sourceChecksum"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'sourceChecksum' in object", path: path.slice(), reason: { type: "missing-property", property: "sourceChecksum" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "astVersion" && key !== "parserVersion" && key !== "sourceChecksum")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_172_1) { e_172 = { error: e_172_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_172) throw e_172.error; }
    }
    return null;
} function _254(object) { ; if (object !== "MapDocument")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapDocument'", path: path.slice(), reason: { type: "string-literal", value: "MapDocument" } };
else
    return null; } function su__235__237_eu(object) {
    var e_173, _a;
    var conditions = [_235_s, _237_s];
    try {
        for (var conditions_69 = __values(conditions), conditions_69_1 = conditions_69.next(); !conditions_69_1.done; conditions_69_1 = conditions_69.next()) {
            var condition = conditions_69_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_173_1) { e_173 = { error: e_173_1 }; }
    finally {
        try {
            if (conditions_69_1 && !conditions_69_1.done && (_a = conditions_69.return)) _a.call(conditions_69);
        }
        finally { if (e_173) throw e_173.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__235__237_eu_ea_256(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__235__237_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _239_s(object) {
    var e_174, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("astMetadata" in object) {
            path.push("astMetadata");
            var error = _253_s(object["astMetadata"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'astMetadata' in object", path: path.slice(), reason: { type: "missing-property", property: "astMetadata" } };
    }
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _254(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("header" in object) {
            path.push("header");
            var error = _238_s(object["header"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'header' in object", path: path.slice(), reason: { type: "missing-property", property: "header" } };
    }
    {
        if ("definitions" in object) {
            path.push("definitions");
            var error = sa_su__235__237_eu_ea_256(object["definitions"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'definitions' in object", path: path.slice(), reason: { type: "missing-property", property: "definitions" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "astMetadata" && key !== "kind" && key !== "header" && key !== "definitions" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_174_1) { e_174 = { error: e_174_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_174) throw e_174.error; }
    }
    return null;
} function su__172__176__177__178__179__189__191__202__205__206__213__216__218__235__237__238__239_eu(object) {
    var e_175, _a;
    var conditions = [_172_s, _176_s, _177_s, _178_s, _179_s, _189_s, _191_s, _202_s, _205_s, _206_s, _213_s, _216_s, _218_s, _235_s, _237_s, _238_s, _239_s];
    try {
        for (var conditions_70 = __values(conditions), conditions_70_1 = conditions_70.next(); !conditions_70_1.done; conditions_70_1 = conditions_70.next()) {
            var condition = conditions_70_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_175_1) { e_175 = { error: e_175_1 }; }
    finally {
        try {
            if (conditions_70_1 && !conditions_70_1.done && (_a = conditions_70.return)) _a.call(conditions_70);
        }
        finally { if (e_175) throw e_175.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} var error = su__172__176__177__178__179__189__191__202__205__206__213__216__218__235__237__238__239_eu(object); return error; });
exports.isMapDefinitionNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _241(object) { ; if (object !== "MapDefinition")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapDefinition'", path: path.slice(), reason: { type: "string-literal", value: "MapDefinition" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _203(object) { ; if (object !== "CallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'CallStatement'", path: path.slice(), reason: { type: "string-literal", value: "CallStatement" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_176, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_71 = __values(conditions), conditions_71_1 = conditions_71.next(); !conditions_71_1.done; conditions_71_1 = conditions_71.next()) {
            var condition = conditions_71_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_176_1) { e_176 = { error: e_176_1 }; }
    finally {
        try {
            if (conditions_71_1 && !conditions_71_1.done && (_a = conditions_71.return)) _a.call(conditions_71);
        }
        finally { if (e_176) throw e_176.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_177, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_177_1) { e_177 = { error: e_177_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_177) throw e_177.error; }
    }
    return null;
} function _181_s(object) {
    var e_178, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_178_1) { e_178 = { error: e_178_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_178) throw e_178.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_179, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_72 = __values(conditions), conditions_72_1 = conditions_72.next(); !conditions_72_1.done; conditions_72_1 = conditions_72.next()) {
            var condition = conditions_72_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_179_1) { e_179 = { error: e_179_1 }; }
    finally {
        try {
            if (conditions_72_1 && !conditions_72_1.done && (_a = conditions_72.return)) _a.call(conditions_72);
        }
        finally { if (e_179) throw e_179.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_180, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_180_1) { e_180 = { error: e_180_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_180) throw e_180.error; }
    }
    return null;
} function _191_s(object) {
    var e_181, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_181_1) { e_181 = { error: e_181_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_181) throw e_181.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_182, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_73 = __values(conditions), conditions_73_1 = conditions_73.next(); !conditions_73_1.done; conditions_73_1 = conditions_73.next()) {
            var condition = conditions_73_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_182_1) { e_182 = { error: e_182_1 }; }
    finally {
        try {
            if (conditions_73_1 && !conditions_73_1.done && (_a = conditions_73.return)) _a.call(conditions_73);
        }
        finally { if (e_182) throw e_182.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _189_s(object) {
    var e_183, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_183_1) { e_183 = { error: e_183_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_183) throw e_183.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_184, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_74 = __values(conditions), conditions_74_1 = conditions_74.next(); !conditions_74_1.done; conditions_74_1 = conditions_74.next()) {
            var condition = conditions_74_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_184_1) { e_184 = { error: e_184_1 }; }
    finally {
        try {
            if (conditions_74_1 && !conditions_74_1.done && (_a = conditions_74.return)) _a.call(conditions_74);
        }
        finally { if (e_184) throw e_184.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _176_s(object) {
    var e_185, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_185_1) { e_185 = { error: e_185_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_185) throw e_185.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _177_s(object) {
    var e_186, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_186_1) { e_186 = { error: e_186_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_186) throw e_186.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_187, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_75 = __values(conditions), conditions_75_1 = conditions_75.next(); !conditions_75_1.done; conditions_75_1 = conditions_75.next()) {
            var condition = conditions_75_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_187_1) { e_187 = { error: e_187_1 }; }
    finally {
        try {
            if (conditions_75_1 && !conditions_75_1.done && (_a = conditions_75.return)) _a.call(conditions_75);
        }
        finally { if (e_187) throw e_187.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_188, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_188_1) { e_188 = { error: e_188_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_188) throw e_188.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_189, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_76 = __values(conditions), conditions_76_1 = conditions_76.next(); !conditions_76_1.done; conditions_76_1 = conditions_76.next()) {
            var condition = conditions_76_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_189_1) { e_189 = { error: e_189_1 }; }
    finally {
        try {
            if (conditions_76_1 && !conditions_76_1.done && (_a = conditions_76.return)) _a.call(conditions_76);
        }
        finally { if (e_189) throw e_189.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_190, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_190_1) { e_190 = { error: e_190_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_190) throw e_190.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _205_s(object) {
    var e_191, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_191_1) { e_191 = { error: e_191_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_191) throw e_191.error; }
    }
    return null;
} function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _206_s(object) {
    var e_192, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_192_1) { e_192 = { error: e_192_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_192) throw e_192.error; }
    }
    return null;
} function su__205__206_eu(object) {
    var e_193, _a;
    var conditions = [_205_s, _206_s];
    try {
        for (var conditions_77 = __values(conditions), conditions_77_1 = conditions_77.next(); !conditions_77_1.done; conditions_77_1 = conditions_77.next()) {
            var condition = conditions_77_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_193_1) { e_193 = { error: e_193_1 }; }
    finally {
        try {
            if (conditions_77_1 && !conditions_77_1.done && (_a = conditions_77.return)) _a.call(conditions_77);
        }
        finally { if (e_193) throw e_193.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__205__206_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _202_s(object) {
    var e_194, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _203(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iteration" && key !== "condition" && key !== "operationName" && key !== "arguments" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_194_1) { e_194 = { error: e_194_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_194) throw e_194.error; }
    }
    return null;
} function _214(object) { ; if (object !== "HttpCallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpCallStatement'", path: path.slice(), reason: { type: "string-literal", value: "HttpCallStatement" } };
else
    return null; } function _220(object) { ; if (object !== "HttpRequest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpRequest'", path: path.slice(), reason: { type: "string-literal", value: "HttpRequest" } };
else
    return null; } function su__undefined__176_eu(object) {
    var e_195, _a;
    var conditions = [_undefined, _176_s];
    try {
        for (var conditions_78 = __values(conditions), conditions_78_1 = conditions_78.next(); !conditions_78_1.done; conditions_78_1 = conditions_78.next()) {
            var condition = conditions_78_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_195_1) { e_195 = { error: e_195_1 }; }
    finally {
        try {
            if (conditions_78_1 && !conditions_78_1.done && (_a = conditions_78.return)) _a.call(conditions_78);
        }
        finally { if (e_195) throw e_195.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function su__undefined__176__177__178__179_eu(object) {
    var e_196, _a;
    var conditions = [_undefined, _176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_79 = __values(conditions), conditions_79_1 = conditions_79.next(); !conditions_79_1.done; conditions_79_1 = conditions_79.next()) {
            var condition = conditions_79_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_196_1) { e_196 = { error: e_196_1 }; }
    finally {
        try {
            if (conditions_79_1 && !conditions_79_1.done && (_a = conditions_79.return)) _a.call(conditions_79);
        }
        finally { if (e_196) throw e_196.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _226(object) { ; if (object !== "apikey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apikey'", path: path.slice(), reason: { type: "string-literal", value: "apikey" } };
else
    return null; } function _228(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _230(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function su__undefined__226__228__230_eu(object) {
    var e_197, _a;
    var conditions = [_undefined, _226, _228, _230];
    try {
        for (var conditions_80 = __values(conditions), conditions_80_1 = conditions_80.next(); !conditions_80_1.done; conditions_80_1 = conditions_80.next()) {
            var condition = conditions_80_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_197_1) { e_197 = { error: e_197_1 }; }
    finally {
        try {
            if (conditions_80_1 && !conditions_80_1.done && (_a = conditions_80.return)) _a.call(conditions_80);
        }
        finally { if (e_197) throw e_197.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _224_s(object) {
    var e_198, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = su__undefined__226__228__230_eu(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_198_1) { e_198 = { error: e_198_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_198) throw e_198.error; }
    }
    return null;
} function sa__224_ea_224(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _224_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _216_s(object) {
    var e_199, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _220(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("query" in object) {
            path.push("query");
            var error = su__undefined__176_eu(object["query"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("headers" in object) {
            path.push("headers");
            var error = su__undefined__176_eu(object["headers"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("body" in object) {
            path.push("body");
            var error = su__undefined__176__177__178__179_eu(object["body"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("security" in object) {
            path.push("security");
            var error = sa__224_ea_224(object["security"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'security' in object", path: path.slice(), reason: { type: "missing-property", property: "security" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "contentType" && key !== "contentLanguage" && key !== "query" && key !== "headers" && key !== "body" && key !== "security" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_199_1) { e_199 = { error: e_199_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_199) throw e_199.error; }
    }
    return null;
} function su__undefined__216_eu(object) {
    var e_200, _a;
    var conditions = [_undefined, _216_s];
    try {
        for (var conditions_81 = __values(conditions), conditions_81_1 = conditions_81.next(); !conditions_81_1.done; conditions_81_1 = conditions_81.next()) {
            var condition = conditions_81_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_200_1) { e_200 = { error: e_200_1 }; }
    finally {
        try {
            if (conditions_81_1 && !conditions_81_1.done && (_a = conditions_81.return)) _a.call(conditions_81);
        }
        finally { if (e_200) throw e_200.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _233(object) { ; if (object !== "HttpResponseHandler")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpResponseHandler'", path: path.slice(), reason: { type: "string-literal", value: "HttpResponseHandler" } };
else
    return null; } function su__undefined__number_eu(object) {
    var e_201, _a;
    var conditions = [_undefined, _number];
    try {
        for (var conditions_82 = __values(conditions), conditions_82_1 = conditions_82.next(); !conditions_82_1.done; conditions_82_1 = conditions_82.next()) {
            var condition = conditions_82_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_201_1) { e_201 = { error: e_201_1 }; }
    finally {
        try {
            if (conditions_82_1 && !conditions_82_1.done && (_a = conditions_82.return)) _a.call(conditions_82);
        }
        finally { if (e_201) throw e_201.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _218_s(object) {
    var e_202, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _233(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("statusCode" in object) {
            path.push("statusCode");
            var error = su__undefined__number_eu(object["statusCode"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "statusCode" && key !== "contentType" && key !== "contentLanguage" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_202_1) { e_202 = { error: e_202_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_202) throw e_202.error; }
    }
    return null;
} function sa__218_ea_218(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _218_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _213_s(object) {
    var e_203, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _214(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("method" in object) {
            path.push("method");
            var error = _string(object["method"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'method' in object", path: path.slice(), reason: { type: "missing-property", property: "method" } };
    }
    {
        if ("url" in object) {
            path.push("url");
            var error = _string(object["url"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'url' in object", path: path.slice(), reason: { type: "missing-property", property: "url" } };
    }
    {
        if ("request" in object) {
            path.push("request");
            var error = su__undefined__216_eu(object["request"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("responseHandlers" in object) {
            path.push("responseHandlers");
            var error = sa__218_ea_218(object["responseHandlers"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'responseHandlers' in object", path: path.slice(), reason: { type: "missing-property", property: "responseHandlers" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "method" && key !== "url" && key !== "request" && key !== "responseHandlers" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_203_1) { e_203 = { error: e_203_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_203) throw e_203.error; }
    }
    return null;
} function su__202__205__206__213_eu(object) {
    var e_204, _a;
    var conditions = [_202_s, _205_s, _206_s, _213_s];
    try {
        for (var conditions_83 = __values(conditions), conditions_83_1 = conditions_83.next(); !conditions_83_1.done; conditions_83_1 = conditions_83.next()) {
            var condition = conditions_83_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_204_1) { e_204 = { error: e_204_1 }; }
    finally {
        try {
            if (conditions_83_1 && !conditions_83_1.done && (_a = conditions_83.return)) _a.call(conditions_83);
        }
        finally { if (e_204) throw e_204.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__202__205__206__213_eu_ea_243(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__202__205__206__213_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _245_s(object) {
    var e_205, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("title" in object) {
            path.push("title");
            var error = _string(object["title"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'title' in object", path: path.slice(), reason: { type: "missing-property", property: "title" } };
    }
    {
        if ("description" in object) {
            path.push("description");
            var error = su__undefined__string_eu(object["description"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "title" && key !== "description" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_205_1) { e_205 = { error: e_205_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_205) throw e_205.error; }
    }
    return null;
} function su__undefined__245_eu(object) {
    var e_206, _a;
    var conditions = [_undefined, _245_s];
    try {
        for (var conditions_84 = __values(conditions), conditions_84_1 = conditions_84.next(); !conditions_84_1.done; conditions_84_1 = conditions_84.next()) {
            var condition = conditions_84_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_206_1) { e_206 = { error: e_206_1 }; }
    finally {
        try {
            if (conditions_84_1 && !conditions_84_1.done && (_a = conditions_84.return)) _a.call(conditions_84);
        }
        finally { if (e_206) throw e_206.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _235_s(object) {
    var e_207, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _241(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("usecaseName" in object) {
            path.push("usecaseName");
            var error = _string(object["usecaseName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'usecaseName' in object", path: path.slice(), reason: { type: "missing-property", property: "usecaseName" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "name" && key !== "usecaseName" && key !== "statements" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_207_1) { e_207 = { error: e_207_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_207) throw e_207.error; }
    }
    return null;
} var error = _235_s(object); return error; });
exports.isMapDocumentNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_208, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_85 = __values(conditions), conditions_85_1 = conditions_85.next(); !conditions_85_1.done; conditions_85_1 = conditions_85.next()) {
            var condition = conditions_85_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_208_1) { e_208 = { error: e_208_1 }; }
    finally {
        try {
            if (conditions_85_1 && !conditions_85_1.done && (_a = conditions_85.return)) _a.call(conditions_85);
        }
        finally { if (e_208) throw e_208.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _258_s(object) {
    var e_209, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("major" in object) {
            path.push("major");
            var error = _number(object["major"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
    }
    {
        if ("minor" in object) {
            path.push("minor");
            var error = _number(object["minor"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
    }
    {
        if ("patch" in object) {
            path.push("patch");
            var error = _number(object["patch"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'patch' in object", path: path.slice(), reason: { type: "missing-property", property: "patch" } };
    }
    {
        if ("label" in object) {
            path.push("label");
            var error = su__undefined__string_eu(object["label"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_209_1) { e_209 = { error: e_209_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_209) throw e_209.error; }
    }
    return null;
} function _259_s(object) {
    var e_210, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("major" in object) {
            path.push("major");
            var error = _number(object["major"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
    }
    {
        if ("minor" in object) {
            path.push("minor");
            var error = _number(object["minor"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
    }
    {
        if ("patch" in object) {
            path.push("patch");
            var error = _number(object["patch"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'patch' in object", path: path.slice(), reason: { type: "missing-property", property: "patch" } };
    }
    {
        if ("label" in object) {
            path.push("label");
            var error = su__undefined__string_eu(object["label"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_210_1) { e_210 = { error: e_210_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_210) throw e_210.error; }
    }
    return null;
} function _253_s(object) {
    var e_211, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("astVersion" in object) {
            path.push("astVersion");
            var error = _258_s(object["astVersion"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'astVersion' in object", path: path.slice(), reason: { type: "missing-property", property: "astVersion" } };
    }
    {
        if ("parserVersion" in object) {
            path.push("parserVersion");
            var error = _259_s(object["parserVersion"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'parserVersion' in object", path: path.slice(), reason: { type: "missing-property", property: "parserVersion" } };
    }
    {
        if ("sourceChecksum" in object) {
            path.push("sourceChecksum");
            var error = _string(object["sourceChecksum"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'sourceChecksum' in object", path: path.slice(), reason: { type: "missing-property", property: "sourceChecksum" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "astVersion" && key !== "parserVersion" && key !== "sourceChecksum")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_211_1) { e_211 = { error: e_211_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_211) throw e_211.error; }
    }
    return null;
} function _254(object) { ; if (object !== "MapDocument")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapDocument'", path: path.slice(), reason: { type: "string-literal", value: "MapDocument" } };
else
    return null; } function _249(object) { ; if (object !== "MapHeader")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapHeader'", path: path.slice(), reason: { type: "string-literal", value: "MapHeader" } };
else
    return null; } function su__undefined__number_eu(object) {
    var e_212, _a;
    var conditions = [_undefined, _number];
    try {
        for (var conditions_86 = __values(conditions), conditions_86_1 = conditions_86.next(); !conditions_86_1.done; conditions_86_1 = conditions_86.next()) {
            var condition = conditions_86_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_212_1) { e_212 = { error: e_212_1 }; }
    finally {
        try {
            if (conditions_86_1 && !conditions_86_1.done && (_a = conditions_86.return)) _a.call(conditions_86);
        }
        finally { if (e_212) throw e_212.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _252_s(object) {
    var e_213, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("major" in object) {
            path.push("major");
            var error = _number(object["major"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
    }
    {
        if ("minor" in object) {
            path.push("minor");
            var error = _number(object["minor"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
    }
    {
        if ("patch" in object) {
            path.push("patch");
            var error = su__undefined__number_eu(object["patch"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("label" in object) {
            path.push("label");
            var error = su__undefined__string_eu(object["label"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_213_1) { e_213 = { error: e_213_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_213) throw e_213.error; }
    }
    return null;
} function _251_s(object) {
    var e_214, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("scope" in object) {
            path.push("scope");
            var error = su__undefined__string_eu(object["scope"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("version" in object) {
            path.push("version");
            var error = _252_s(object["version"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'version' in object", path: path.slice(), reason: { type: "missing-property", property: "version" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "scope" && key !== "name" && key !== "version")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_214_1) { e_214 = { error: e_214_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_214) throw e_214.error; }
    }
    return null;
} function _186_s(object) {
    var e_215, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_215_1) { e_215 = { error: e_215_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_215) throw e_215.error; }
    }
    return null;
} function _181_s(object) {
    var e_216, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_216_1) { e_216 = { error: e_216_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_216) throw e_216.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_217, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_87 = __values(conditions), conditions_87_1 = conditions_87.next(); !conditions_87_1.done; conditions_87_1 = conditions_87.next()) {
            var condition = conditions_87_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_217_1) { e_217 = { error: e_217_1 }; }
    finally {
        try {
            if (conditions_87_1 && !conditions_87_1.done && (_a = conditions_87.return)) _a.call(conditions_87);
        }
        finally { if (e_217) throw e_217.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _245_s(object) {
    var e_218, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("title" in object) {
            path.push("title");
            var error = _string(object["title"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'title' in object", path: path.slice(), reason: { type: "missing-property", property: "title" } };
    }
    {
        if ("description" in object) {
            path.push("description");
            var error = su__undefined__string_eu(object["description"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "title" && key !== "description" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_218_1) { e_218 = { error: e_218_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_218) throw e_218.error; }
    }
    return null;
} function su__undefined__245_eu(object) {
    var e_219, _a;
    var conditions = [_undefined, _245_s];
    try {
        for (var conditions_88 = __values(conditions), conditions_88_1 = conditions_88.next(); !conditions_88_1.done; conditions_88_1 = conditions_88.next()) {
            var condition = conditions_88_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_219_1) { e_219 = { error: e_219_1 }; }
    finally {
        try {
            if (conditions_88_1 && !conditions_88_1.done && (_a = conditions_88.return)) _a.call(conditions_88);
        }
        finally { if (e_219) throw e_219.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _238_s(object) {
    var e_220, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _249(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("profile" in object) {
            path.push("profile");
            var error = _251_s(object["profile"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'profile' in object", path: path.slice(), reason: { type: "missing-property", property: "profile" } };
    }
    {
        if ("provider" in object) {
            path.push("provider");
            var error = _string(object["provider"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'provider' in object", path: path.slice(), reason: { type: "missing-property", property: "provider" } };
    }
    {
        if ("variant" in object) {
            path.push("variant");
            var error = su__undefined__string_eu(object["variant"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "profile" && key !== "provider" && key !== "variant" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_220_1) { e_220 = { error: e_220_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_220) throw e_220.error; }
    }
    return null;
} function _241(object) { ; if (object !== "MapDefinition")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapDefinition'", path: path.slice(), reason: { type: "string-literal", value: "MapDefinition" } };
else
    return null; } function _203(object) { ; if (object !== "CallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'CallStatement'", path: path.slice(), reason: { type: "string-literal", value: "CallStatement" } };
else
    return null; } function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _179_s(object) {
    var e_221, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_221_1) { e_221 = { error: e_221_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_221) throw e_221.error; }
    }
    return null;
} function _191_s(object) {
    var e_222, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_222_1) { e_222 = { error: e_222_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_222) throw e_222.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_223, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_89 = __values(conditions), conditions_89_1 = conditions_89.next(); !conditions_89_1.done; conditions_89_1 = conditions_89.next()) {
            var condition = conditions_89_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_223_1) { e_223 = { error: e_223_1 }; }
    finally {
        try {
            if (conditions_89_1 && !conditions_89_1.done && (_a = conditions_89.return)) _a.call(conditions_89);
        }
        finally { if (e_223) throw e_223.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _189_s(object) {
    var e_224, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_224_1) { e_224 = { error: e_224_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_224) throw e_224.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_225, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_90 = __values(conditions), conditions_90_1 = conditions_90.next(); !conditions_90_1.done; conditions_90_1 = conditions_90.next()) {
            var condition = conditions_90_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_225_1) { e_225 = { error: e_225_1 }; }
    finally {
        try {
            if (conditions_90_1 && !conditions_90_1.done && (_a = conditions_90.return)) _a.call(conditions_90);
        }
        finally { if (e_225) throw e_225.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _176_s(object) {
    var e_226, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_226_1) { e_226 = { error: e_226_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_226) throw e_226.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _177_s(object) {
    var e_227, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_227_1) { e_227 = { error: e_227_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_227) throw e_227.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_228, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_91 = __values(conditions), conditions_91_1 = conditions_91.next(); !conditions_91_1.done; conditions_91_1 = conditions_91.next()) {
            var condition = conditions_91_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_228_1) { e_228 = { error: e_228_1 }; }
    finally {
        try {
            if (conditions_91_1 && !conditions_91_1.done && (_a = conditions_91.return)) _a.call(conditions_91);
        }
        finally { if (e_228) throw e_228.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_229, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_229_1) { e_229 = { error: e_229_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_229) throw e_229.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_230, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_92 = __values(conditions), conditions_92_1 = conditions_92.next(); !conditions_92_1.done; conditions_92_1 = conditions_92.next()) {
            var condition = conditions_92_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_230_1) { e_230 = { error: e_230_1 }; }
    finally {
        try {
            if (conditions_92_1 && !conditions_92_1.done && (_a = conditions_92.return)) _a.call(conditions_92);
        }
        finally { if (e_230) throw e_230.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_231, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_231_1) { e_231 = { error: e_231_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_231) throw e_231.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _205_s(object) {
    var e_232, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_232_1) { e_232 = { error: e_232_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_232) throw e_232.error; }
    }
    return null;
} function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _206_s(object) {
    var e_233, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_233_1) { e_233 = { error: e_233_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_233) throw e_233.error; }
    }
    return null;
} function su__205__206_eu(object) {
    var e_234, _a;
    var conditions = [_205_s, _206_s];
    try {
        for (var conditions_93 = __values(conditions), conditions_93_1 = conditions_93.next(); !conditions_93_1.done; conditions_93_1 = conditions_93.next()) {
            var condition = conditions_93_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_234_1) { e_234 = { error: e_234_1 }; }
    finally {
        try {
            if (conditions_93_1 && !conditions_93_1.done && (_a = conditions_93.return)) _a.call(conditions_93);
        }
        finally { if (e_234) throw e_234.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__205__206_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _202_s(object) {
    var e_235, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _203(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iteration" && key !== "condition" && key !== "operationName" && key !== "arguments" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_235_1) { e_235 = { error: e_235_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_235) throw e_235.error; }
    }
    return null;
} function _214(object) { ; if (object !== "HttpCallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpCallStatement'", path: path.slice(), reason: { type: "string-literal", value: "HttpCallStatement" } };
else
    return null; } function _220(object) { ; if (object !== "HttpRequest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpRequest'", path: path.slice(), reason: { type: "string-literal", value: "HttpRequest" } };
else
    return null; } function su__undefined__176_eu(object) {
    var e_236, _a;
    var conditions = [_undefined, _176_s];
    try {
        for (var conditions_94 = __values(conditions), conditions_94_1 = conditions_94.next(); !conditions_94_1.done; conditions_94_1 = conditions_94.next()) {
            var condition = conditions_94_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_236_1) { e_236 = { error: e_236_1 }; }
    finally {
        try {
            if (conditions_94_1 && !conditions_94_1.done && (_a = conditions_94.return)) _a.call(conditions_94);
        }
        finally { if (e_236) throw e_236.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function su__undefined__176__177__178__179_eu(object) {
    var e_237, _a;
    var conditions = [_undefined, _176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_95 = __values(conditions), conditions_95_1 = conditions_95.next(); !conditions_95_1.done; conditions_95_1 = conditions_95.next()) {
            var condition = conditions_95_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_237_1) { e_237 = { error: e_237_1 }; }
    finally {
        try {
            if (conditions_95_1 && !conditions_95_1.done && (_a = conditions_95.return)) _a.call(conditions_95);
        }
        finally { if (e_237) throw e_237.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _226(object) { ; if (object !== "apikey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apikey'", path: path.slice(), reason: { type: "string-literal", value: "apikey" } };
else
    return null; } function _228(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _230(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function su__undefined__226__228__230_eu(object) {
    var e_238, _a;
    var conditions = [_undefined, _226, _228, _230];
    try {
        for (var conditions_96 = __values(conditions), conditions_96_1 = conditions_96.next(); !conditions_96_1.done; conditions_96_1 = conditions_96.next()) {
            var condition = conditions_96_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_238_1) { e_238 = { error: e_238_1 }; }
    finally {
        try {
            if (conditions_96_1 && !conditions_96_1.done && (_a = conditions_96.return)) _a.call(conditions_96);
        }
        finally { if (e_238) throw e_238.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _224_s(object) {
    var e_239, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = su__undefined__226__228__230_eu(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_239_1) { e_239 = { error: e_239_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_239) throw e_239.error; }
    }
    return null;
} function sa__224_ea_224(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _224_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _216_s(object) {
    var e_240, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _220(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("query" in object) {
            path.push("query");
            var error = su__undefined__176_eu(object["query"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("headers" in object) {
            path.push("headers");
            var error = su__undefined__176_eu(object["headers"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("body" in object) {
            path.push("body");
            var error = su__undefined__176__177__178__179_eu(object["body"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("security" in object) {
            path.push("security");
            var error = sa__224_ea_224(object["security"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'security' in object", path: path.slice(), reason: { type: "missing-property", property: "security" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "contentType" && key !== "contentLanguage" && key !== "query" && key !== "headers" && key !== "body" && key !== "security" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_240_1) { e_240 = { error: e_240_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_240) throw e_240.error; }
    }
    return null;
} function su__undefined__216_eu(object) {
    var e_241, _a;
    var conditions = [_undefined, _216_s];
    try {
        for (var conditions_97 = __values(conditions), conditions_97_1 = conditions_97.next(); !conditions_97_1.done; conditions_97_1 = conditions_97.next()) {
            var condition = conditions_97_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_241_1) { e_241 = { error: e_241_1 }; }
    finally {
        try {
            if (conditions_97_1 && !conditions_97_1.done && (_a = conditions_97.return)) _a.call(conditions_97);
        }
        finally { if (e_241) throw e_241.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _233(object) { ; if (object !== "HttpResponseHandler")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpResponseHandler'", path: path.slice(), reason: { type: "string-literal", value: "HttpResponseHandler" } };
else
    return null; } function _218_s(object) {
    var e_242, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _233(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("statusCode" in object) {
            path.push("statusCode");
            var error = su__undefined__number_eu(object["statusCode"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "statusCode" && key !== "contentType" && key !== "contentLanguage" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_242_1) { e_242 = { error: e_242_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_242) throw e_242.error; }
    }
    return null;
} function sa__218_ea_218(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _218_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _213_s(object) {
    var e_243, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _214(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("method" in object) {
            path.push("method");
            var error = _string(object["method"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'method' in object", path: path.slice(), reason: { type: "missing-property", property: "method" } };
    }
    {
        if ("url" in object) {
            path.push("url");
            var error = _string(object["url"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'url' in object", path: path.slice(), reason: { type: "missing-property", property: "url" } };
    }
    {
        if ("request" in object) {
            path.push("request");
            var error = su__undefined__216_eu(object["request"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("responseHandlers" in object) {
            path.push("responseHandlers");
            var error = sa__218_ea_218(object["responseHandlers"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'responseHandlers' in object", path: path.slice(), reason: { type: "missing-property", property: "responseHandlers" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "method" && key !== "url" && key !== "request" && key !== "responseHandlers" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_243_1) { e_243 = { error: e_243_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_243) throw e_243.error; }
    }
    return null;
} function su__202__205__206__213_eu(object) {
    var e_244, _a;
    var conditions = [_202_s, _205_s, _206_s, _213_s];
    try {
        for (var conditions_98 = __values(conditions), conditions_98_1 = conditions_98.next(); !conditions_98_1.done; conditions_98_1 = conditions_98.next()) {
            var condition = conditions_98_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_244_1) { e_244 = { error: e_244_1 }; }
    finally {
        try {
            if (conditions_98_1 && !conditions_98_1.done && (_a = conditions_98.return)) _a.call(conditions_98);
        }
        finally { if (e_244) throw e_244.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__202__205__206__213_eu_ea_243(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__202__205__206__213_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _235_s(object) {
    var e_245, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _241(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("usecaseName" in object) {
            path.push("usecaseName");
            var error = _string(object["usecaseName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'usecaseName' in object", path: path.slice(), reason: { type: "missing-property", property: "usecaseName" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "name" && key !== "usecaseName" && key !== "statements" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_245_1) { e_245 = { error: e_245_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_245) throw e_245.error; }
    }
    return null;
} function _247(object) { ; if (object !== "OperationDefinition")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OperationDefinition'", path: path.slice(), reason: { type: "string-literal", value: "OperationDefinition" } };
else
    return null; } function _237_s(object) {
    var e_246, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _247(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "name" && key !== "statements" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_246_1) { e_246 = { error: e_246_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_246) throw e_246.error; }
    }
    return null;
} function su__235__237_eu(object) {
    var e_247, _a;
    var conditions = [_235_s, _237_s];
    try {
        for (var conditions_99 = __values(conditions), conditions_99_1 = conditions_99.next(); !conditions_99_1.done; conditions_99_1 = conditions_99.next()) {
            var condition = conditions_99_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_247_1) { e_247 = { error: e_247_1 }; }
    finally {
        try {
            if (conditions_99_1 && !conditions_99_1.done && (_a = conditions_99.return)) _a.call(conditions_99);
        }
        finally { if (e_247) throw e_247.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__235__237_eu_ea_256(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__235__237_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _239_s(object) {
    var e_248, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("astMetadata" in object) {
            path.push("astMetadata");
            var error = _253_s(object["astMetadata"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'astMetadata' in object", path: path.slice(), reason: { type: "missing-property", property: "astMetadata" } };
    }
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _254(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("header" in object) {
            path.push("header");
            var error = _238_s(object["header"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'header' in object", path: path.slice(), reason: { type: "missing-property", property: "header" } };
    }
    {
        if ("definitions" in object) {
            path.push("definitions");
            var error = sa_su__235__237_eu_ea_256(object["definitions"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'definitions' in object", path: path.slice(), reason: { type: "missing-property", property: "definitions" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "astMetadata" && key !== "kind" && key !== "header" && key !== "definitions" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_248_1) { e_248 = { error: e_248_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_248) throw e_248.error; }
    }
    return null;
} var error = _239_s(object); return error; });
exports.isMapHeaderNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _249(object) { ; if (object !== "MapHeader")
    return { message: "validation failed at " + path.join(".") + ": expected string 'MapHeader'", path: path.slice(), reason: { type: "string-literal", value: "MapHeader" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_249, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_100 = __values(conditions), conditions_100_1 = conditions_100.next(); !conditions_100_1.done; conditions_100_1 = conditions_100.next()) {
            var condition = conditions_100_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_249_1) { e_249 = { error: e_249_1 }; }
    finally {
        try {
            if (conditions_100_1 && !conditions_100_1.done && (_a = conditions_100.return)) _a.call(conditions_100);
        }
        finally { if (e_249) throw e_249.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function su__undefined__number_eu(object) {
    var e_250, _a;
    var conditions = [_undefined, _number];
    try {
        for (var conditions_101 = __values(conditions), conditions_101_1 = conditions_101.next(); !conditions_101_1.done; conditions_101_1 = conditions_101.next()) {
            var condition = conditions_101_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_250_1) { e_250 = { error: e_250_1 }; }
    finally {
        try {
            if (conditions_101_1 && !conditions_101_1.done && (_a = conditions_101.return)) _a.call(conditions_101);
        }
        finally { if (e_250) throw e_250.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _252_s(object) {
    var e_251, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("major" in object) {
            path.push("major");
            var error = _number(object["major"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
    }
    {
        if ("minor" in object) {
            path.push("minor");
            var error = _number(object["minor"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
    }
    {
        if ("patch" in object) {
            path.push("patch");
            var error = su__undefined__number_eu(object["patch"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("label" in object) {
            path.push("label");
            var error = su__undefined__string_eu(object["label"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_251_1) { e_251 = { error: e_251_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_251) throw e_251.error; }
    }
    return null;
} function _251_s(object) {
    var e_252, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("scope" in object) {
            path.push("scope");
            var error = su__undefined__string_eu(object["scope"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("version" in object) {
            path.push("version");
            var error = _252_s(object["version"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'version' in object", path: path.slice(), reason: { type: "missing-property", property: "version" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "scope" && key !== "name" && key !== "version")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_252_1) { e_252 = { error: e_252_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_252) throw e_252.error; }
    }
    return null;
} function _186_s(object) {
    var e_253, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_253_1) { e_253 = { error: e_253_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_253) throw e_253.error; }
    }
    return null;
} function _181_s(object) {
    var e_254, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_254_1) { e_254 = { error: e_254_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_254) throw e_254.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_255, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_102 = __values(conditions), conditions_102_1 = conditions_102.next(); !conditions_102_1.done; conditions_102_1 = conditions_102.next()) {
            var condition = conditions_102_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_255_1) { e_255 = { error: e_255_1 }; }
    finally {
        try {
            if (conditions_102_1 && !conditions_102_1.done && (_a = conditions_102.return)) _a.call(conditions_102);
        }
        finally { if (e_255) throw e_255.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _245_s(object) {
    var e_256, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("title" in object) {
            path.push("title");
            var error = _string(object["title"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'title' in object", path: path.slice(), reason: { type: "missing-property", property: "title" } };
    }
    {
        if ("description" in object) {
            path.push("description");
            var error = su__undefined__string_eu(object["description"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "title" && key !== "description" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_256_1) { e_256 = { error: e_256_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_256) throw e_256.error; }
    }
    return null;
} function su__undefined__245_eu(object) {
    var e_257, _a;
    var conditions = [_undefined, _245_s];
    try {
        for (var conditions_103 = __values(conditions), conditions_103_1 = conditions_103.next(); !conditions_103_1.done; conditions_103_1 = conditions_103.next()) {
            var condition = conditions_103_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_257_1) { e_257 = { error: e_257_1 }; }
    finally {
        try {
            if (conditions_103_1 && !conditions_103_1.done && (_a = conditions_103.return)) _a.call(conditions_103);
        }
        finally { if (e_257) throw e_257.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _238_s(object) {
    var e_258, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _249(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("profile" in object) {
            path.push("profile");
            var error = _251_s(object["profile"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'profile' in object", path: path.slice(), reason: { type: "missing-property", property: "profile" } };
    }
    {
        if ("provider" in object) {
            path.push("provider");
            var error = _string(object["provider"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'provider' in object", path: path.slice(), reason: { type: "missing-property", property: "provider" } };
    }
    {
        if ("variant" in object) {
            path.push("variant");
            var error = su__undefined__string_eu(object["variant"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "profile" && key !== "provider" && key !== "variant" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_258_1) { e_258 = { error: e_258_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_258) throw e_258.error; }
    }
    return null;
} var error = _238_s(object); return error; });
exports.isObjectLiteralNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_259, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_104 = __values(conditions), conditions_104_1 = conditions_104.next(); !conditions_104_1.done; conditions_104_1 = conditions_104.next()) {
            var condition = conditions_104_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_259_1) { e_259 = { error: e_259_1 }; }
    finally {
        try {
            if (conditions_104_1 && !conditions_104_1.done && (_a = conditions_104.return)) _a.call(conditions_104);
        }
        finally { if (e_259) throw e_259.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_260, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_260_1) { e_260 = { error: e_260_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_260) throw e_260.error; }
    }
    return null;
} function _181_s(object) {
    var e_261, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_261_1) { e_261 = { error: e_261_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_261) throw e_261.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_262, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_105 = __values(conditions), conditions_105_1 = conditions_105.next(); !conditions_105_1.done; conditions_105_1 = conditions_105.next()) {
            var condition = conditions_105_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_262_1) { e_262 = { error: e_262_1 }; }
    finally {
        try {
            if (conditions_105_1 && !conditions_105_1.done && (_a = conditions_105.return)) _a.call(conditions_105);
        }
        finally { if (e_262) throw e_262.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_263, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_263_1) { e_263 = { error: e_263_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_263) throw e_263.error; }
    }
    return null;
} function _189_s(object) {
    var e_264, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_264_1) { e_264 = { error: e_264_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_264) throw e_264.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_265, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_106 = __values(conditions), conditions_106_1 = conditions_106.next(); !conditions_106_1.done; conditions_106_1 = conditions_106.next()) {
            var condition = conditions_106_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_265_1) { e_265 = { error: e_265_1 }; }
    finally {
        try {
            if (conditions_106_1 && !conditions_106_1.done && (_a = conditions_106.return)) _a.call(conditions_106);
        }
        finally { if (e_265) throw e_265.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_266, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_266_1) { e_266 = { error: e_266_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_266) throw e_266.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_267, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_107 = __values(conditions), conditions_107_1 = conditions_107.next(); !conditions_107_1.done; conditions_107_1 = conditions_107.next()) {
            var condition = conditions_107_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_267_1) { e_267 = { error: e_267_1 }; }
    finally {
        try {
            if (conditions_107_1 && !conditions_107_1.done && (_a = conditions_107.return)) _a.call(conditions_107);
        }
        finally { if (e_267) throw e_267.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_268, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_268_1) { e_268 = { error: e_268_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_268) throw e_268.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_269, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_108 = __values(conditions), conditions_108_1 = conditions_108.next(); !conditions_108_1.done; conditions_108_1 = conditions_108.next()) {
            var condition = conditions_108_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_269_1) { e_269 = { error: e_269_1 }; }
    finally {
        try {
            if (conditions_108_1 && !conditions_108_1.done && (_a = conditions_108.return)) _a.call(conditions_108);
        }
        finally { if (e_269) throw e_269.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_270, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_270_1) { e_270 = { error: e_270_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_270) throw e_270.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_271, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_109 = __values(conditions), conditions_109_1 = conditions_109.next(); !conditions_109_1.done; conditions_109_1 = conditions_109.next()) {
            var condition = conditions_109_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_271_1) { e_271 = { error: e_271_1 }; }
    finally {
        try {
            if (conditions_109_1 && !conditions_109_1.done && (_a = conditions_109.return)) _a.call(conditions_109);
        }
        finally { if (e_271) throw e_271.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_272, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_272_1) { e_272 = { error: e_272_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_272) throw e_272.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _176_s(object) {
    var e_273, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_273_1) { e_273 = { error: e_273_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_273) throw e_273.error; }
    }
    return null;
} var error = _176_s(object); return error; });
exports.isOperationDefinitionNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _247(object) { ; if (object !== "OperationDefinition")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OperationDefinition'", path: path.slice(), reason: { type: "string-literal", value: "OperationDefinition" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _203(object) { ; if (object !== "CallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'CallStatement'", path: path.slice(), reason: { type: "string-literal", value: "CallStatement" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_274, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_110 = __values(conditions), conditions_110_1 = conditions_110.next(); !conditions_110_1.done; conditions_110_1 = conditions_110.next()) {
            var condition = conditions_110_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_274_1) { e_274 = { error: e_274_1 }; }
    finally {
        try {
            if (conditions_110_1 && !conditions_110_1.done && (_a = conditions_110.return)) _a.call(conditions_110);
        }
        finally { if (e_274) throw e_274.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_275, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_275_1) { e_275 = { error: e_275_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_275) throw e_275.error; }
    }
    return null;
} function _181_s(object) {
    var e_276, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_276_1) { e_276 = { error: e_276_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_276) throw e_276.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_277, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_111 = __values(conditions), conditions_111_1 = conditions_111.next(); !conditions_111_1.done; conditions_111_1 = conditions_111.next()) {
            var condition = conditions_111_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_277_1) { e_277 = { error: e_277_1 }; }
    finally {
        try {
            if (conditions_111_1 && !conditions_111_1.done && (_a = conditions_111.return)) _a.call(conditions_111);
        }
        finally { if (e_277) throw e_277.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_278, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_278_1) { e_278 = { error: e_278_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_278) throw e_278.error; }
    }
    return null;
} function _191_s(object) {
    var e_279, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_279_1) { e_279 = { error: e_279_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_279) throw e_279.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_280, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_112 = __values(conditions), conditions_112_1 = conditions_112.next(); !conditions_112_1.done; conditions_112_1 = conditions_112.next()) {
            var condition = conditions_112_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_280_1) { e_280 = { error: e_280_1 }; }
    finally {
        try {
            if (conditions_112_1 && !conditions_112_1.done && (_a = conditions_112.return)) _a.call(conditions_112);
        }
        finally { if (e_280) throw e_280.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _189_s(object) {
    var e_281, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_281_1) { e_281 = { error: e_281_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_281) throw e_281.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_282, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_113 = __values(conditions), conditions_113_1 = conditions_113.next(); !conditions_113_1.done; conditions_113_1 = conditions_113.next()) {
            var condition = conditions_113_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_282_1) { e_282 = { error: e_282_1 }; }
    finally {
        try {
            if (conditions_113_1 && !conditions_113_1.done && (_a = conditions_113.return)) _a.call(conditions_113);
        }
        finally { if (e_282) throw e_282.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _176_s(object) {
    var e_283, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_283_1) { e_283 = { error: e_283_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_283) throw e_283.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _177_s(object) {
    var e_284, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_284_1) { e_284 = { error: e_284_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_284) throw e_284.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_285, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_114 = __values(conditions), conditions_114_1 = conditions_114.next(); !conditions_114_1.done; conditions_114_1 = conditions_114.next()) {
            var condition = conditions_114_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_285_1) { e_285 = { error: e_285_1 }; }
    finally {
        try {
            if (conditions_114_1 && !conditions_114_1.done && (_a = conditions_114.return)) _a.call(conditions_114);
        }
        finally { if (e_285) throw e_285.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_286, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_286_1) { e_286 = { error: e_286_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_286) throw e_286.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_287, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_115 = __values(conditions), conditions_115_1 = conditions_115.next(); !conditions_115_1.done; conditions_115_1 = conditions_115.next()) {
            var condition = conditions_115_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_287_1) { e_287 = { error: e_287_1 }; }
    finally {
        try {
            if (conditions_115_1 && !conditions_115_1.done && (_a = conditions_115.return)) _a.call(conditions_115);
        }
        finally { if (e_287) throw e_287.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_288, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_288_1) { e_288 = { error: e_288_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_288) throw e_288.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _205_s(object) {
    var e_289, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_289_1) { e_289 = { error: e_289_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_289) throw e_289.error; }
    }
    return null;
} function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _206_s(object) {
    var e_290, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_290_1) { e_290 = { error: e_290_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_290) throw e_290.error; }
    }
    return null;
} function su__205__206_eu(object) {
    var e_291, _a;
    var conditions = [_205_s, _206_s];
    try {
        for (var conditions_116 = __values(conditions), conditions_116_1 = conditions_116.next(); !conditions_116_1.done; conditions_116_1 = conditions_116.next()) {
            var condition = conditions_116_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_291_1) { e_291 = { error: e_291_1 }; }
    finally {
        try {
            if (conditions_116_1 && !conditions_116_1.done && (_a = conditions_116.return)) _a.call(conditions_116);
        }
        finally { if (e_291) throw e_291.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__205__206_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _202_s(object) {
    var e_292, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _203(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iteration" && key !== "condition" && key !== "operationName" && key !== "arguments" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_292_1) { e_292 = { error: e_292_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_292) throw e_292.error; }
    }
    return null;
} function _214(object) { ; if (object !== "HttpCallStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpCallStatement'", path: path.slice(), reason: { type: "string-literal", value: "HttpCallStatement" } };
else
    return null; } function _220(object) { ; if (object !== "HttpRequest")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpRequest'", path: path.slice(), reason: { type: "string-literal", value: "HttpRequest" } };
else
    return null; } function su__undefined__176_eu(object) {
    var e_293, _a;
    var conditions = [_undefined, _176_s];
    try {
        for (var conditions_117 = __values(conditions), conditions_117_1 = conditions_117.next(); !conditions_117_1.done; conditions_117_1 = conditions_117.next()) {
            var condition = conditions_117_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_293_1) { e_293 = { error: e_293_1 }; }
    finally {
        try {
            if (conditions_117_1 && !conditions_117_1.done && (_a = conditions_117.return)) _a.call(conditions_117);
        }
        finally { if (e_293) throw e_293.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function su__undefined__176__177__178__179_eu(object) {
    var e_294, _a;
    var conditions = [_undefined, _176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_118 = __values(conditions), conditions_118_1 = conditions_118.next(); !conditions_118_1.done; conditions_118_1 = conditions_118.next()) {
            var condition = conditions_118_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_294_1) { e_294 = { error: e_294_1 }; }
    finally {
        try {
            if (conditions_118_1 && !conditions_118_1.done && (_a = conditions_118.return)) _a.call(conditions_118);
        }
        finally { if (e_294) throw e_294.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _226(object) { ; if (object !== "apikey")
    return { message: "validation failed at " + path.join(".") + ": expected string 'apikey'", path: path.slice(), reason: { type: "string-literal", value: "apikey" } };
else
    return null; } function _228(object) { ; if (object !== "basic")
    return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
else
    return null; } function _230(object) { ; if (object !== "bearer")
    return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
else
    return null; } function su__undefined__226__228__230_eu(object) {
    var e_295, _a;
    var conditions = [_undefined, _226, _228, _230];
    try {
        for (var conditions_119 = __values(conditions), conditions_119_1 = conditions_119.next(); !conditions_119_1.done; conditions_119_1 = conditions_119.next()) {
            var condition = conditions_119_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_295_1) { e_295 = { error: e_295_1 }; }
    finally {
        try {
            if (conditions_119_1 && !conditions_119_1.done && (_a = conditions_119.return)) _a.call(conditions_119);
        }
        finally { if (e_295) throw e_295.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _224_s(object) {
    var e_296, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("id" in object) {
            path.push("id");
            var error = _string(object["id"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
    }
    {
        if ("scheme" in object) {
            path.push("scheme");
            var error = su__undefined__226__228__230_eu(object["scheme"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "id" && key !== "scheme")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_296_1) { e_296 = { error: e_296_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_296) throw e_296.error; }
    }
    return null;
} function sa__224_ea_224(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _224_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _216_s(object) {
    var e_297, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _220(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("query" in object) {
            path.push("query");
            var error = su__undefined__176_eu(object["query"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("headers" in object) {
            path.push("headers");
            var error = su__undefined__176_eu(object["headers"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("body" in object) {
            path.push("body");
            var error = su__undefined__176__177__178__179_eu(object["body"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("security" in object) {
            path.push("security");
            var error = sa__224_ea_224(object["security"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'security' in object", path: path.slice(), reason: { type: "missing-property", property: "security" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "contentType" && key !== "contentLanguage" && key !== "query" && key !== "headers" && key !== "body" && key !== "security" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_297_1) { e_297 = { error: e_297_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_297) throw e_297.error; }
    }
    return null;
} function su__undefined__216_eu(object) {
    var e_298, _a;
    var conditions = [_undefined, _216_s];
    try {
        for (var conditions_120 = __values(conditions), conditions_120_1 = conditions_120.next(); !conditions_120_1.done; conditions_120_1 = conditions_120.next()) {
            var condition = conditions_120_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_298_1) { e_298 = { error: e_298_1 }; }
    finally {
        try {
            if (conditions_120_1 && !conditions_120_1.done && (_a = conditions_120.return)) _a.call(conditions_120);
        }
        finally { if (e_298) throw e_298.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _233(object) { ; if (object !== "HttpResponseHandler")
    return { message: "validation failed at " + path.join(".") + ": expected string 'HttpResponseHandler'", path: path.slice(), reason: { type: "string-literal", value: "HttpResponseHandler" } };
else
    return null; } function su__undefined__number_eu(object) {
    var e_299, _a;
    var conditions = [_undefined, _number];
    try {
        for (var conditions_121 = __values(conditions), conditions_121_1 = conditions_121.next(); !conditions_121_1.done; conditions_121_1 = conditions_121.next()) {
            var condition = conditions_121_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_299_1) { e_299 = { error: e_299_1 }; }
    finally {
        try {
            if (conditions_121_1 && !conditions_121_1.done && (_a = conditions_121.return)) _a.call(conditions_121);
        }
        finally { if (e_299) throw e_299.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _218_s(object) {
    var e_300, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _233(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("statusCode" in object) {
            path.push("statusCode");
            var error = su__undefined__number_eu(object["statusCode"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentType" in object) {
            path.push("contentType");
            var error = su__undefined__string_eu(object["contentType"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("contentLanguage" in object) {
            path.push("contentLanguage");
            var error = su__undefined__string_eu(object["contentLanguage"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__205__206_eu_ea_207(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "statusCode" && key !== "contentType" && key !== "contentLanguage" && key !== "statements" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_300_1) { e_300 = { error: e_300_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_300) throw e_300.error; }
    }
    return null;
} function sa__218_ea_218(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _218_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _213_s(object) {
    var e_301, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _214(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("method" in object) {
            path.push("method");
            var error = _string(object["method"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'method' in object", path: path.slice(), reason: { type: "missing-property", property: "method" } };
    }
    {
        if ("url" in object) {
            path.push("url");
            var error = _string(object["url"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'url' in object", path: path.slice(), reason: { type: "missing-property", property: "url" } };
    }
    {
        if ("request" in object) {
            path.push("request");
            var error = su__undefined__216_eu(object["request"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("responseHandlers" in object) {
            path.push("responseHandlers");
            var error = sa__218_ea_218(object["responseHandlers"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'responseHandlers' in object", path: path.slice(), reason: { type: "missing-property", property: "responseHandlers" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "method" && key !== "url" && key !== "request" && key !== "responseHandlers" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_301_1) { e_301 = { error: e_301_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_301) throw e_301.error; }
    }
    return null;
} function su__202__205__206__213_eu(object) {
    var e_302, _a;
    var conditions = [_202_s, _205_s, _206_s, _213_s];
    try {
        for (var conditions_122 = __values(conditions), conditions_122_1 = conditions_122.next(); !conditions_122_1.done; conditions_122_1 = conditions_122.next()) {
            var condition = conditions_122_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_302_1) { e_302 = { error: e_302_1 }; }
    finally {
        try {
            if (conditions_122_1 && !conditions_122_1.done && (_a = conditions_122.return)) _a.call(conditions_122);
        }
        finally { if (e_302) throw e_302.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function sa_su__202__205__206__213_eu_ea_243(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = su__202__205__206__213_eu(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _245_s(object) {
    var e_303, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("title" in object) {
            path.push("title");
            var error = _string(object["title"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'title' in object", path: path.slice(), reason: { type: "missing-property", property: "title" } };
    }
    {
        if ("description" in object) {
            path.push("description");
            var error = su__undefined__string_eu(object["description"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "title" && key !== "description" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_303_1) { e_303 = { error: e_303_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_303) throw e_303.error; }
    }
    return null;
} function su__undefined__245_eu(object) {
    var e_304, _a;
    var conditions = [_undefined, _245_s];
    try {
        for (var conditions_123 = __values(conditions), conditions_123_1 = conditions_123.next(); !conditions_123_1.done; conditions_123_1 = conditions_123.next()) {
            var condition = conditions_123_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_304_1) { e_304 = { error: e_304_1 }; }
    finally {
        try {
            if (conditions_123_1 && !conditions_123_1.done && (_a = conditions_123.return)) _a.call(conditions_123);
        }
        finally { if (e_304) throw e_304.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _237_s(object) {
    var e_305, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _247(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("name" in object) {
            path.push("name");
            var error = _string(object["name"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
    }
    {
        if ("statements" in object) {
            path.push("statements");
            var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("documentation" in object) {
            path.push("documentation");
            var error = su__undefined__245_eu(object["documentation"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "name" && key !== "statements" && key !== "location" && key !== "documentation")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_305_1) { e_305 = { error: e_305_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_305) throw e_305.error; }
    }
    return null;
} var error = _237_s(object); return error; });
exports.isOutcomeStatementNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _211(object) { ; if (object !== "OutcomeStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_306, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_124 = __values(conditions), conditions_124_1 = conditions_124.next(); !conditions_124_1.done; conditions_124_1 = conditions_124.next()) {
            var condition = conditions_124_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_306_1) { e_306 = { error: e_306_1 }; }
    finally {
        try {
            if (conditions_124_1 && !conditions_124_1.done && (_a = conditions_124.return)) _a.call(conditions_124);
        }
        finally { if (e_306) throw e_306.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_307, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_307_1) { e_307 = { error: e_307_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_307) throw e_307.error; }
    }
    return null;
} function _181_s(object) {
    var e_308, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_308_1) { e_308 = { error: e_308_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_308) throw e_308.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_309, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_125 = __values(conditions), conditions_125_1 = conditions_125.next(); !conditions_125_1.done; conditions_125_1 = conditions_125.next()) {
            var condition = conditions_125_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_309_1) { e_309 = { error: e_309_1 }; }
    finally {
        try {
            if (conditions_125_1 && !conditions_125_1.done && (_a = conditions_125.return)) _a.call(conditions_125);
        }
        finally { if (e_309) throw e_309.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_310, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_310_1) { e_310 = { error: e_310_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_310) throw e_310.error; }
    }
    return null;
} function _189_s(object) {
    var e_311, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_311_1) { e_311 = { error: e_311_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_311) throw e_311.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_312, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_126 = __values(conditions), conditions_126_1 = conditions_126.next(); !conditions_126_1.done; conditions_126_1 = conditions_126.next()) {
            var condition = conditions_126_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_312_1) { e_312 = { error: e_312_1 }; }
    finally {
        try {
            if (conditions_126_1 && !conditions_126_1.done && (_a = conditions_126.return)) _a.call(conditions_126);
        }
        finally { if (e_312) throw e_312.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _boolean(object) { ; if (typeof object !== "boolean")
    return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
else
    return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_313, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_313_1) { e_313 = { error: e_313_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_313) throw e_313.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_314, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_127 = __values(conditions), conditions_127_1 = conditions_127.next(); !conditions_127_1.done; conditions_127_1 = conditions_127.next()) {
            var condition = conditions_127_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_314_1) { e_314 = { error: e_314_1 }; }
    finally {
        try {
            if (conditions_127_1 && !conditions_127_1.done && (_a = conditions_127.return)) _a.call(conditions_127);
        }
        finally { if (e_314) throw e_314.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_315, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_315_1) { e_315 = { error: e_315_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_315) throw e_315.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_316, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_128 = __values(conditions), conditions_128_1 = conditions_128.next(); !conditions_128_1.done; conditions_128_1 = conditions_128.next()) {
            var condition = conditions_128_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_316_1) { e_316 = { error: e_316_1 }; }
    finally {
        try {
            if (conditions_128_1 && !conditions_128_1.done && (_a = conditions_128.return)) _a.call(conditions_128);
        }
        finally { if (e_316) throw e_316.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_317, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_317_1) { e_317 = { error: e_317_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_317) throw e_317.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_318, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_129 = __values(conditions), conditions_129_1 = conditions_129.next(); !conditions_129_1.done; conditions_129_1 = conditions_129.next()) {
            var condition = conditions_129_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_318_1) { e_318 = { error: e_318_1 }; }
    finally {
        try {
            if (conditions_129_1 && !conditions_129_1.done && (_a = conditions_129.return)) _a.call(conditions_129);
        }
        finally { if (e_318) throw e_318.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_319, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_319_1) { e_319 = { error: e_319_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_319) throw e_319.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _176_s(object) {
    var e_320, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_320_1) { e_320 = { error: e_320_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_320) throw e_320.error; }
    }
    return null;
} function _206_s(object) {
    var e_321, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _211(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("isError" in object) {
            path.push("isError");
            var error = _boolean(object["isError"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
    }
    {
        if ("terminateFlow" in object) {
            path.push("terminateFlow");
            var error = _boolean(object["terminateFlow"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_321_1) { e_321 = { error: e_321_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_321) throw e_321.error; }
    }
    return null;
} var error = _206_s(object); return error; });
exports.isPrimitiveLiteralNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_322, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_130 = __values(conditions), conditions_130_1 = conditions_130.next(); !conditions_130_1.done; conditions_130_1 = conditions_130.next()) {
            var condition = conditions_130_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_322_1) { e_322 = { error: e_322_1 }; }
    finally {
        try {
            if (conditions_130_1 && !conditions_130_1.done && (_a = conditions_130.return)) _a.call(conditions_130);
        }
        finally { if (e_322) throw e_322.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _186_s(object) {
    var e_323, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_323_1) { e_323 = { error: e_323_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_323) throw e_323.error; }
    }
    return null;
} function _181_s(object) {
    var e_324, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_324_1) { e_324 = { error: e_324_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_324) throw e_324.error; }
    }
    return null;
} function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__181_eu(object) {
    var e_325, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_131 = __values(conditions), conditions_131_1 = conditions_131.next(); !conditions_131_1.done; conditions_131_1 = conditions_131.next()) {
            var condition = conditions_131_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_325_1) { e_325 = { error: e_325_1 }; }
    finally {
        try {
            if (conditions_131_1 && !conditions_131_1.done && (_a = conditions_131.return)) _a.call(conditions_131);
        }
        finally { if (e_325) throw e_325.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_326, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_326_1) { e_326 = { error: e_326_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_326) throw e_326.error; }
    }
    return null;
} var error = _178_s(object); return error; });
exports.isSetStatementNode = typescript_is_1.createIs(function (object) { var path = ["$"]; function _209(object) { ; if (object !== "SetStatement")
    return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
else
    return null; } function _undefined(object) { ; if (object !== undefined)
    return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
else
    return null; } function _193(object) { ; if (object !== "ConditionAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
else
    return null; } function _195(object) { ; if (object !== "JessieExpression")
    return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
else
    return null; } function _string(object) { ; if (typeof object !== "string")
    return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
else
    return null; } function _null(object) { ; if (object !== null)
    return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
else
    return null; } function su__undefined__string_eu(object) {
    var e_327, _a;
    var conditions = [_undefined, _string];
    try {
        for (var conditions_132 = __values(conditions), conditions_132_1 = conditions_132.next(); !conditions_132_1.done; conditions_132_1 = conditions_132.next()) {
            var condition = conditions_132_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_327_1) { e_327 = { error: e_327_1 }; }
    finally {
        try {
            if (conditions_132_1 && !conditions_132_1.done && (_a = conditions_132.return)) _a.call(conditions_132);
        }
        finally { if (e_327) throw e_327.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _number(object) { ; if (typeof object !== "number")
    return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
else
    return null; } function _186_s(object) {
    var e_328, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("line" in object) {
            path.push("line");
            var error = _number(object["line"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
    }
    {
        if ("column" in object) {
            path.push("column");
            var error = _number(object["column"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
    }
    {
        if ("charIndex" in object) {
            path.push("charIndex");
            var error = _number(object["charIndex"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "line" && key !== "column" && key !== "charIndex")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_328_1) { e_328 = { error: e_328_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_328) throw e_328.error; }
    }
    return null;
} function _181_s(object) {
    var e_329, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("start" in object) {
            path.push("start");
            var error = _186_s(object["start"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
    }
    {
        if ("end" in object) {
            path.push("end");
            var error = _186_s(object["end"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "start" && key !== "end")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_329_1) { e_329 = { error: e_329_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_329) throw e_329.error; }
    }
    return null;
} function su__undefined__181_eu(object) {
    var e_330, _a;
    var conditions = [_undefined, _181_s];
    try {
        for (var conditions_133 = __values(conditions), conditions_133_1 = conditions_133.next(); !conditions_133_1.done; conditions_133_1 = conditions_133.next()) {
            var condition = conditions_133_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_330_1) { e_330 = { error: e_330_1 }; }
    finally {
        try {
            if (conditions_133_1 && !conditions_133_1.done && (_a = conditions_133.return)) _a.call(conditions_133);
        }
        finally { if (e_330) throw e_330.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _179_s(object) {
    var e_331, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _195(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _string(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("source" in object) {
            path.push("source");
            var error = su__undefined__string_eu(object["source"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("sourceMap" in object) {
            path.push("sourceMap");
            var error = su__undefined__string_eu(object["sourceMap"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_331_1) { e_331 = { error: e_331_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_331) throw e_331.error; }
    }
    return null;
} function _189_s(object) {
    var e_332, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _193(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("expression" in object) {
            path.push("expression");
            var error = _179_s(object["expression"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "expression" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_332_1) { e_332 = { error: e_332_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_332) throw e_332.error; }
    }
    return null;
} function su__undefined__189_eu(object) {
    var e_333, _a;
    var conditions = [_undefined, _189_s];
    try {
        for (var conditions_134 = __values(conditions), conditions_134_1 = conditions_134.next(); !conditions_134_1.done; conditions_134_1 = conditions_134.next()) {
            var condition = conditions_134_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_333_1) { e_333 = { error: e_333_1 }; }
    finally {
        try {
            if (conditions_134_1 && !conditions_134_1.done && (_a = conditions_134.return)) _a.call(conditions_134);
        }
        finally { if (e_333) throw e_333.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _174(object) { ; if (object !== "Assignment")
    return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
else
    return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _string(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _183(object) { ; if (object !== "ObjectLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
else
    return null; } function _176_s(object) {
    var e_334, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _183(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("fields" in object) {
            path.push("fields");
            var error = sa__172_ea_172(object["fields"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "fields" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_334_1) { e_334 = { error: e_334_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_334) throw e_334.error; }
    }
    return null;
} function _187(object) { ; if (object !== "InlineCall")
    return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
else
    return null; } function _197(object) { ; if (object !== "IterationAtom")
    return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
else
    return null; } function _191_s(object) {
    var e_335, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _197(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("iterationVariable" in object) {
            path.push("iterationVariable");
            var error = _string(object["iterationVariable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
    }
    {
        if ("iterable" in object) {
            path.push("iterable");
            var error = _179_s(object["iterable"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_335_1) { e_335 = { error: e_335_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_335) throw e_335.error; }
    }
    return null;
} function su__undefined__191_eu(object) {
    var e_336, _a;
    var conditions = [_undefined, _191_s];
    try {
        for (var conditions_135 = __values(conditions), conditions_135_1 = conditions_135.next(); !conditions_135_1.done; conditions_135_1 = conditions_135.next()) {
            var condition = conditions_135_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_336_1) { e_336 = { error: e_336_1 }; }
    finally {
        try {
            if (conditions_135_1 && !conditions_135_1.done && (_a = conditions_135.return)) _a.call(conditions_135);
        }
        finally { if (e_336) throw e_336.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _177_s(object) {
    var e_337, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _187(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("iteration" in object) {
            path.push("iteration");
            var error = su__undefined__191_eu(object["iteration"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("operationName" in object) {
            path.push("operationName");
            var error = _string(object["operationName"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
    }
    {
        if ("arguments" in object) {
            path.push("arguments");
            var error = sa__172_ea_172(object["arguments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_337_1) { e_337 = { error: e_337_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_337) throw e_337.error; }
    }
    return null;
} function _199(object) { ; if (object !== "PrimitiveLiteral")
    return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
else
    return null; } function _false(object) { ; if (object !== false)
    return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
else
    return null; } function _true(object) { ; if (object !== true)
    return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
else
    return null; } function su__string__number__15__17_eu(object) {
    var e_338, _a;
    var conditions = [_string, _number, _false, _true];
    try {
        for (var conditions_136 = __values(conditions), conditions_136_1 = conditions_136.next(); !conditions_136_1.done; conditions_136_1 = conditions_136.next()) {
            var condition = conditions_136_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_338_1) { e_338 = { error: e_338_1 }; }
    finally {
        try {
            if (conditions_136_1 && !conditions_136_1.done && (_a = conditions_136.return)) _a.call(conditions_136);
        }
        finally { if (e_338) throw e_338.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _178_s(object) {
    var e_339, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _199(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__string__number__15__17_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_339_1) { e_339 = { error: e_339_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_339) throw e_339.error; }
    }
    return null;
} function su__176__177__178__179_eu(object) {
    var e_340, _a;
    var conditions = [_176_s, _177_s, _178_s, _179_s];
    try {
        for (var conditions_137 = __values(conditions), conditions_137_1 = conditions_137.next(); !conditions_137_1.done; conditions_137_1 = conditions_137.next()) {
            var condition = conditions_137_1.value;
            var error = condition(object);
            if (!error)
                return null;
        }
    }
    catch (e_340_1) { e_340 = { error: e_340_1 }; }
    finally {
        try {
            if (conditions_137_1 && !conditions_137_1.done && (_a = conditions_137.return)) _a.call(conditions_137);
        }
        finally { if (e_340) throw e_340.error; }
    }
    return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
} function _172_s(object) {
    var e_341, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _174(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("key" in object) {
            path.push("key");
            var error = sa__string_ea_11(object["key"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
    }
    {
        if ("value" in object) {
            path.push("value");
            var error = su__176__177__178__179_eu(object["value"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_341_1) { e_341 = { error: e_341_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_341) throw e_341.error; }
    }
    return null;
} function sa__172_ea_172(object) { ; if (!Array.isArray(object))
    return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
    path.push("[" + i + "]");
    var error = _172_s(object[i]);
    path.pop();
    if (error)
        return error;
} return null; } function _205_s(object) {
    var e_342, _a;
    ;
    if (typeof object !== "object" || object === null || Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
    {
        if ("kind" in object) {
            path.push("kind");
            var error = _209(object["kind"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
    }
    {
        if ("condition" in object) {
            path.push("condition");
            var error = su__undefined__189_eu(object["condition"]);
            path.pop();
            if (error)
                return error;
        }
    }
    {
        if ("assignments" in object) {
            path.push("assignments");
            var error = sa__172_ea_172(object["assignments"]);
            path.pop();
            if (error)
                return error;
        }
        else
            return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
    }
    {
        if ("location" in object) {
            path.push("location");
            var error = su__undefined__181_eu(object["location"]);
            path.pop();
            if (error)
                return error;
        }
    }
    try {
        for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
        }
    }
    catch (e_342_1) { e_342 = { error: e_342_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_342) throw e_342.error; }
    }
    return null;
} var error = _205_s(object); return error; });
function assertMapDocumentNode(node) {
    var assert = typescript_is_1.createAssertEquals(function (object) { var path = ["$"]; function _number(object) { ; if (typeof object !== "number")
        return { message: "validation failed at " + path.join(".") + ": expected a number", path: path.slice(), reason: { type: "number" } };
    else
        return null; } function _undefined(object) { ; if (object !== undefined)
        return { message: "validation failed at " + path.join(".") + ": expected undefined", path: path.slice(), reason: { type: "undefined" } };
    else
        return null; } function _string(object) { ; if (typeof object !== "string")
        return { message: "validation failed at " + path.join(".") + ": expected a string", path: path.slice(), reason: { type: "string" } };
    else
        return null; } function _null(object) { ; if (object !== null)
        return { message: "validation failed at " + path.join(".") + ": expected null", path: path.slice(), reason: { type: "null" } };
    else
        return null; } function su__undefined__string_eu(object) {
        var e_343, _a;
        var conditions = [_undefined, _string];
        try {
            for (var conditions_138 = __values(conditions), conditions_138_1 = conditions_138.next(); !conditions_138_1.done; conditions_138_1 = conditions_138.next()) {
                var condition = conditions_138_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_343_1) { e_343 = { error: e_343_1 }; }
        finally {
            try {
                if (conditions_138_1 && !conditions_138_1.done && (_a = conditions_138.return)) _a.call(conditions_138);
            }
            finally { if (e_343) throw e_343.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _258_s(object) {
        var e_344, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("major" in object) {
                path.push("major");
                var error = _number(object["major"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
        }
        {
            if ("minor" in object) {
                path.push("minor");
                var error = _number(object["minor"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
        }
        {
            if ("patch" in object) {
                path.push("patch");
                var error = _number(object["patch"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'patch' in object", path: path.slice(), reason: { type: "missing-property", property: "patch" } };
        }
        {
            if ("label" in object) {
                path.push("label");
                var error = su__undefined__string_eu(object["label"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_344_1) { e_344 = { error: e_344_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_344) throw e_344.error; }
        }
        return null;
    } function _259_s(object) {
        var e_345, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("major" in object) {
                path.push("major");
                var error = _number(object["major"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
        }
        {
            if ("minor" in object) {
                path.push("minor");
                var error = _number(object["minor"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
        }
        {
            if ("patch" in object) {
                path.push("patch");
                var error = _number(object["patch"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'patch' in object", path: path.slice(), reason: { type: "missing-property", property: "patch" } };
        }
        {
            if ("label" in object) {
                path.push("label");
                var error = su__undefined__string_eu(object["label"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_345_1) { e_345 = { error: e_345_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_345) throw e_345.error; }
        }
        return null;
    } function _253_s(object) {
        var e_346, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("astVersion" in object) {
                path.push("astVersion");
                var error = _258_s(object["astVersion"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'astVersion' in object", path: path.slice(), reason: { type: "missing-property", property: "astVersion" } };
        }
        {
            if ("parserVersion" in object) {
                path.push("parserVersion");
                var error = _259_s(object["parserVersion"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'parserVersion' in object", path: path.slice(), reason: { type: "missing-property", property: "parserVersion" } };
        }
        {
            if ("sourceChecksum" in object) {
                path.push("sourceChecksum");
                var error = _string(object["sourceChecksum"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'sourceChecksum' in object", path: path.slice(), reason: { type: "missing-property", property: "sourceChecksum" } };
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "astVersion" && key !== "parserVersion" && key !== "sourceChecksum")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_346_1) { e_346 = { error: e_346_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_346) throw e_346.error; }
        }
        return null;
    } function _254(object) { ; if (object !== "MapDocument")
        return { message: "validation failed at " + path.join(".") + ": expected string 'MapDocument'", path: path.slice(), reason: { type: "string-literal", value: "MapDocument" } };
    else
        return null; } function _249(object) { ; if (object !== "MapHeader")
        return { message: "validation failed at " + path.join(".") + ": expected string 'MapHeader'", path: path.slice(), reason: { type: "string-literal", value: "MapHeader" } };
    else
        return null; } function su__undefined__number_eu(object) {
        var e_347, _a;
        var conditions = [_undefined, _number];
        try {
            for (var conditions_139 = __values(conditions), conditions_139_1 = conditions_139.next(); !conditions_139_1.done; conditions_139_1 = conditions_139.next()) {
                var condition = conditions_139_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_347_1) { e_347 = { error: e_347_1 }; }
        finally {
            try {
                if (conditions_139_1 && !conditions_139_1.done && (_a = conditions_139.return)) _a.call(conditions_139);
            }
            finally { if (e_347) throw e_347.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _252_s(object) {
        var e_348, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("major" in object) {
                path.push("major");
                var error = _number(object["major"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'major' in object", path: path.slice(), reason: { type: "missing-property", property: "major" } };
        }
        {
            if ("minor" in object) {
                path.push("minor");
                var error = _number(object["minor"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'minor' in object", path: path.slice(), reason: { type: "missing-property", property: "minor" } };
        }
        {
            if ("patch" in object) {
                path.push("patch");
                var error = su__undefined__number_eu(object["patch"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("label" in object) {
                path.push("label");
                var error = su__undefined__string_eu(object["label"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "major" && key !== "minor" && key !== "patch" && key !== "label")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_348_1) { e_348 = { error: e_348_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_348) throw e_348.error; }
        }
        return null;
    } function _251_s(object) {
        var e_349, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("scope" in object) {
                path.push("scope");
                var error = su__undefined__string_eu(object["scope"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("name" in object) {
                path.push("name");
                var error = _string(object["name"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
        }
        {
            if ("version" in object) {
                path.push("version");
                var error = _252_s(object["version"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'version' in object", path: path.slice(), reason: { type: "missing-property", property: "version" } };
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "scope" && key !== "name" && key !== "version")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_349_1) { e_349 = { error: e_349_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_349) throw e_349.error; }
        }
        return null;
    } function _186_s(object) {
        var e_350, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("line" in object) {
                path.push("line");
                var error = _number(object["line"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'line' in object", path: path.slice(), reason: { type: "missing-property", property: "line" } };
        }
        {
            if ("column" in object) {
                path.push("column");
                var error = _number(object["column"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'column' in object", path: path.slice(), reason: { type: "missing-property", property: "column" } };
        }
        {
            if ("charIndex" in object) {
                path.push("charIndex");
                var error = _number(object["charIndex"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'charIndex' in object", path: path.slice(), reason: { type: "missing-property", property: "charIndex" } };
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "line" && key !== "column" && key !== "charIndex")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_350_1) { e_350 = { error: e_350_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_350) throw e_350.error; }
        }
        return null;
    } function _181_s(object) {
        var e_351, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("start" in object) {
                path.push("start");
                var error = _186_s(object["start"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'start' in object", path: path.slice(), reason: { type: "missing-property", property: "start" } };
        }
        {
            if ("end" in object) {
                path.push("end");
                var error = _186_s(object["end"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'end' in object", path: path.slice(), reason: { type: "missing-property", property: "end" } };
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "start" && key !== "end")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_351_1) { e_351 = { error: e_351_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_351) throw e_351.error; }
        }
        return null;
    } function su__undefined__181_eu(object) {
        var e_352, _a;
        var conditions = [_undefined, _181_s];
        try {
            for (var conditions_140 = __values(conditions), conditions_140_1 = conditions_140.next(); !conditions_140_1.done; conditions_140_1 = conditions_140.next()) {
                var condition = conditions_140_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_352_1) { e_352 = { error: e_352_1 }; }
        finally {
            try {
                if (conditions_140_1 && !conditions_140_1.done && (_a = conditions_140.return)) _a.call(conditions_140);
            }
            finally { if (e_352) throw e_352.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _245_s(object) {
        var e_353, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("title" in object) {
                path.push("title");
                var error = _string(object["title"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'title' in object", path: path.slice(), reason: { type: "missing-property", property: "title" } };
        }
        {
            if ("description" in object) {
                path.push("description");
                var error = su__undefined__string_eu(object["description"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "title" && key !== "description" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_353_1) { e_353 = { error: e_353_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_353) throw e_353.error; }
        }
        return null;
    } function su__undefined__245_eu(object) {
        var e_354, _a;
        var conditions = [_undefined, _245_s];
        try {
            for (var conditions_141 = __values(conditions), conditions_141_1 = conditions_141.next(); !conditions_141_1.done; conditions_141_1 = conditions_141.next()) {
                var condition = conditions_141_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_354_1) { e_354 = { error: e_354_1 }; }
        finally {
            try {
                if (conditions_141_1 && !conditions_141_1.done && (_a = conditions_141.return)) _a.call(conditions_141);
            }
            finally { if (e_354) throw e_354.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _238_s(object) {
        var e_355, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _249(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("profile" in object) {
                path.push("profile");
                var error = _251_s(object["profile"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'profile' in object", path: path.slice(), reason: { type: "missing-property", property: "profile" } };
        }
        {
            if ("provider" in object) {
                path.push("provider");
                var error = _string(object["provider"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'provider' in object", path: path.slice(), reason: { type: "missing-property", property: "provider" } };
        }
        {
            if ("variant" in object) {
                path.push("variant");
                var error = su__undefined__string_eu(object["variant"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("documentation" in object) {
                path.push("documentation");
                var error = su__undefined__245_eu(object["documentation"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "profile" && key !== "provider" && key !== "variant" && key !== "location" && key !== "documentation")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_355_1) { e_355 = { error: e_355_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_355) throw e_355.error; }
        }
        return null;
    } function _241(object) { ; if (object !== "MapDefinition")
        return { message: "validation failed at " + path.join(".") + ": expected string 'MapDefinition'", path: path.slice(), reason: { type: "string-literal", value: "MapDefinition" } };
    else
        return null; } function _203(object) { ; if (object !== "CallStatement")
        return { message: "validation failed at " + path.join(".") + ": expected string 'CallStatement'", path: path.slice(), reason: { type: "string-literal", value: "CallStatement" } };
    else
        return null; } function _197(object) { ; if (object !== "IterationAtom")
        return { message: "validation failed at " + path.join(".") + ": expected string 'IterationAtom'", path: path.slice(), reason: { type: "string-literal", value: "IterationAtom" } };
    else
        return null; } function _195(object) { ; if (object !== "JessieExpression")
        return { message: "validation failed at " + path.join(".") + ": expected string 'JessieExpression'", path: path.slice(), reason: { type: "string-literal", value: "JessieExpression" } };
    else
        return null; } function _179_s(object) {
        var e_356, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _195(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("expression" in object) {
                path.push("expression");
                var error = _string(object["expression"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
        }
        {
            if ("source" in object) {
                path.push("source");
                var error = su__undefined__string_eu(object["source"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("sourceMap" in object) {
                path.push("sourceMap");
                var error = su__undefined__string_eu(object["sourceMap"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "expression" && key !== "source" && key !== "sourceMap" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_356_1) { e_356 = { error: e_356_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_356) throw e_356.error; }
        }
        return null;
    } function _191_s(object) {
        var e_357, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _197(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("iterationVariable" in object) {
                path.push("iterationVariable");
                var error = _string(object["iterationVariable"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'iterationVariable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterationVariable" } };
        }
        {
            if ("iterable" in object) {
                path.push("iterable");
                var error = _179_s(object["iterable"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'iterable' in object", path: path.slice(), reason: { type: "missing-property", property: "iterable" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "iterationVariable" && key !== "iterable" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_357_1) { e_357 = { error: e_357_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_357) throw e_357.error; }
        }
        return null;
    } function su__undefined__191_eu(object) {
        var e_358, _a;
        var conditions = [_undefined, _191_s];
        try {
            for (var conditions_142 = __values(conditions), conditions_142_1 = conditions_142.next(); !conditions_142_1.done; conditions_142_1 = conditions_142.next()) {
                var condition = conditions_142_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_358_1) { e_358 = { error: e_358_1 }; }
        finally {
            try {
                if (conditions_142_1 && !conditions_142_1.done && (_a = conditions_142.return)) _a.call(conditions_142);
            }
            finally { if (e_358) throw e_358.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _193(object) { ; if (object !== "ConditionAtom")
        return { message: "validation failed at " + path.join(".") + ": expected string 'ConditionAtom'", path: path.slice(), reason: { type: "string-literal", value: "ConditionAtom" } };
    else
        return null; } function _189_s(object) {
        var e_359, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _193(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("expression" in object) {
                path.push("expression");
                var error = _179_s(object["expression"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'expression' in object", path: path.slice(), reason: { type: "missing-property", property: "expression" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "expression" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_359_1) { e_359 = { error: e_359_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_359) throw e_359.error; }
        }
        return null;
    } function su__undefined__189_eu(object) {
        var e_360, _a;
        var conditions = [_undefined, _189_s];
        try {
            for (var conditions_143 = __values(conditions), conditions_143_1 = conditions_143.next(); !conditions_143_1.done; conditions_143_1 = conditions_143.next()) {
                var condition = conditions_143_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_360_1) { e_360 = { error: e_360_1 }; }
        finally {
            try {
                if (conditions_143_1 && !conditions_143_1.done && (_a = conditions_143.return)) _a.call(conditions_143);
            }
            finally { if (e_360) throw e_360.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _174(object) { ; if (object !== "Assignment")
        return { message: "validation failed at " + path.join(".") + ": expected string 'Assignment'", path: path.slice(), reason: { type: "string-literal", value: "Assignment" } };
    else
        return null; } function sa__string_ea_11(object) { ; if (!Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
        path.push("[" + i + "]");
        var error = _string(object[i]);
        path.pop();
        if (error)
            return error;
    } return null; } function _183(object) { ; if (object !== "ObjectLiteral")
        return { message: "validation failed at " + path.join(".") + ": expected string 'ObjectLiteral'", path: path.slice(), reason: { type: "string-literal", value: "ObjectLiteral" } };
    else
        return null; } function _176_s(object) {
        var e_361, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _183(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("fields" in object) {
                path.push("fields");
                var error = sa__172_ea_172(object["fields"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'fields' in object", path: path.slice(), reason: { type: "missing-property", property: "fields" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "fields" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_361_1) { e_361 = { error: e_361_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_361) throw e_361.error; }
        }
        return null;
    } function _187(object) { ; if (object !== "InlineCall")
        return { message: "validation failed at " + path.join(".") + ": expected string 'InlineCall'", path: path.slice(), reason: { type: "string-literal", value: "InlineCall" } };
    else
        return null; } function _177_s(object) {
        var e_362, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _187(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("condition" in object) {
                path.push("condition");
                var error = su__undefined__189_eu(object["condition"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("iteration" in object) {
                path.push("iteration");
                var error = su__undefined__191_eu(object["iteration"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("operationName" in object) {
                path.push("operationName");
                var error = _string(object["operationName"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
        }
        {
            if ("arguments" in object) {
                path.push("arguments");
                var error = sa__172_ea_172(object["arguments"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "condition" && key !== "iteration" && key !== "operationName" && key !== "arguments" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_362_1) { e_362 = { error: e_362_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_362) throw e_362.error; }
        }
        return null;
    } function _199(object) { ; if (object !== "PrimitiveLiteral")
        return { message: "validation failed at " + path.join(".") + ": expected string 'PrimitiveLiteral'", path: path.slice(), reason: { type: "string-literal", value: "PrimitiveLiteral" } };
    else
        return null; } function _false(object) { ; if (object !== false)
        return { message: "validation failed at " + path.join(".") + ": expected false", path: path.slice(), reason: { type: "boolean-literal", value: false } };
    else
        return null; } function _true(object) { ; if (object !== true)
        return { message: "validation failed at " + path.join(".") + ": expected true", path: path.slice(), reason: { type: "boolean-literal", value: true } };
    else
        return null; } function su__string__number__15__17_eu(object) {
        var e_363, _a;
        var conditions = [_string, _number, _false, _true];
        try {
            for (var conditions_144 = __values(conditions), conditions_144_1 = conditions_144.next(); !conditions_144_1.done; conditions_144_1 = conditions_144.next()) {
                var condition = conditions_144_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_363_1) { e_363 = { error: e_363_1 }; }
        finally {
            try {
                if (conditions_144_1 && !conditions_144_1.done && (_a = conditions_144.return)) _a.call(conditions_144);
            }
            finally { if (e_363) throw e_363.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _178_s(object) {
        var e_364, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _199(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("value" in object) {
                path.push("value");
                var error = su__string__number__15__17_eu(object["value"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "value" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_364_1) { e_364 = { error: e_364_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_364) throw e_364.error; }
        }
        return null;
    } function su__176__177__178__179_eu(object) {
        var e_365, _a;
        var conditions = [_176_s, _177_s, _178_s, _179_s];
        try {
            for (var conditions_145 = __values(conditions), conditions_145_1 = conditions_145.next(); !conditions_145_1.done; conditions_145_1 = conditions_145.next()) {
                var condition = conditions_145_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_365_1) { e_365 = { error: e_365_1 }; }
        finally {
            try {
                if (conditions_145_1 && !conditions_145_1.done && (_a = conditions_145.return)) _a.call(conditions_145);
            }
            finally { if (e_365) throw e_365.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _172_s(object) {
        var e_366, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _174(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("key" in object) {
                path.push("key");
                var error = sa__string_ea_11(object["key"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'key' in object", path: path.slice(), reason: { type: "missing-property", property: "key" } };
        }
        {
            if ("value" in object) {
                path.push("value");
                var error = su__176__177__178__179_eu(object["value"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "key" && key !== "value" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_366_1) { e_366 = { error: e_366_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_366) throw e_366.error; }
        }
        return null;
    } function sa__172_ea_172(object) { ; if (!Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
        path.push("[" + i + "]");
        var error = _172_s(object[i]);
        path.pop();
        if (error)
            return error;
    } return null; } function _209(object) { ; if (object !== "SetStatement")
        return { message: "validation failed at " + path.join(".") + ": expected string 'SetStatement'", path: path.slice(), reason: { type: "string-literal", value: "SetStatement" } };
    else
        return null; } function _205_s(object) {
        var e_367, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _209(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("condition" in object) {
                path.push("condition");
                var error = su__undefined__189_eu(object["condition"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("assignments" in object) {
                path.push("assignments");
                var error = sa__172_ea_172(object["assignments"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'assignments' in object", path: path.slice(), reason: { type: "missing-property", property: "assignments" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "condition" && key !== "assignments" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_367_1) { e_367 = { error: e_367_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_367) throw e_367.error; }
        }
        return null;
    } function _211(object) { ; if (object !== "OutcomeStatement")
        return { message: "validation failed at " + path.join(".") + ": expected string 'OutcomeStatement'", path: path.slice(), reason: { type: "string-literal", value: "OutcomeStatement" } };
    else
        return null; } function _boolean(object) { ; if (typeof object !== "boolean")
        return { message: "validation failed at " + path.join(".") + ": expected a boolean", path: path.slice(), reason: { type: "boolean" } };
    else
        return null; } function _206_s(object) {
        var e_368, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _211(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("condition" in object) {
                path.push("condition");
                var error = su__undefined__189_eu(object["condition"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("isError" in object) {
                path.push("isError");
                var error = _boolean(object["isError"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'isError' in object", path: path.slice(), reason: { type: "missing-property", property: "isError" } };
        }
        {
            if ("terminateFlow" in object) {
                path.push("terminateFlow");
                var error = _boolean(object["terminateFlow"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'terminateFlow' in object", path: path.slice(), reason: { type: "missing-property", property: "terminateFlow" } };
        }
        {
            if ("value" in object) {
                path.push("value");
                var error = su__176__177__178__179_eu(object["value"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'value' in object", path: path.slice(), reason: { type: "missing-property", property: "value" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "condition" && key !== "isError" && key !== "terminateFlow" && key !== "value" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_368_1) { e_368 = { error: e_368_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_368) throw e_368.error; }
        }
        return null;
    } function su__205__206_eu(object) {
        var e_369, _a;
        var conditions = [_205_s, _206_s];
        try {
            for (var conditions_146 = __values(conditions), conditions_146_1 = conditions_146.next(); !conditions_146_1.done; conditions_146_1 = conditions_146.next()) {
                var condition = conditions_146_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_369_1) { e_369 = { error: e_369_1 }; }
        finally {
            try {
                if (conditions_146_1 && !conditions_146_1.done && (_a = conditions_146.return)) _a.call(conditions_146);
            }
            finally { if (e_369) throw e_369.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function sa_su__205__206_eu_ea_207(object) { ; if (!Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
        path.push("[" + i + "]");
        var error = su__205__206_eu(object[i]);
        path.pop();
        if (error)
            return error;
    } return null; } function _202_s(object) {
        var e_370, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _203(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("iteration" in object) {
                path.push("iteration");
                var error = su__undefined__191_eu(object["iteration"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("condition" in object) {
                path.push("condition");
                var error = su__undefined__189_eu(object["condition"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("operationName" in object) {
                path.push("operationName");
                var error = _string(object["operationName"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'operationName' in object", path: path.slice(), reason: { type: "missing-property", property: "operationName" } };
        }
        {
            if ("arguments" in object) {
                path.push("arguments");
                var error = sa__172_ea_172(object["arguments"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'arguments' in object", path: path.slice(), reason: { type: "missing-property", property: "arguments" } };
        }
        {
            if ("statements" in object) {
                path.push("statements");
                var error = sa_su__205__206_eu_ea_207(object["statements"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "iteration" && key !== "condition" && key !== "operationName" && key !== "arguments" && key !== "statements" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_370_1) { e_370 = { error: e_370_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_370) throw e_370.error; }
        }
        return null;
    } function _214(object) { ; if (object !== "HttpCallStatement")
        return { message: "validation failed at " + path.join(".") + ": expected string 'HttpCallStatement'", path: path.slice(), reason: { type: "string-literal", value: "HttpCallStatement" } };
    else
        return null; } function _220(object) { ; if (object !== "HttpRequest")
        return { message: "validation failed at " + path.join(".") + ": expected string 'HttpRequest'", path: path.slice(), reason: { type: "string-literal", value: "HttpRequest" } };
    else
        return null; } function su__undefined__176_eu(object) {
        var e_371, _a;
        var conditions = [_undefined, _176_s];
        try {
            for (var conditions_147 = __values(conditions), conditions_147_1 = conditions_147.next(); !conditions_147_1.done; conditions_147_1 = conditions_147.next()) {
                var condition = conditions_147_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_371_1) { e_371 = { error: e_371_1 }; }
        finally {
            try {
                if (conditions_147_1 && !conditions_147_1.done && (_a = conditions_147.return)) _a.call(conditions_147);
            }
            finally { if (e_371) throw e_371.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function su__undefined__176__177__178__179_eu(object) {
        var e_372, _a;
        var conditions = [_undefined, _176_s, _177_s, _178_s, _179_s];
        try {
            for (var conditions_148 = __values(conditions), conditions_148_1 = conditions_148.next(); !conditions_148_1.done; conditions_148_1 = conditions_148.next()) {
                var condition = conditions_148_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_372_1) { e_372 = { error: e_372_1 }; }
        finally {
            try {
                if (conditions_148_1 && !conditions_148_1.done && (_a = conditions_148.return)) _a.call(conditions_148);
            }
            finally { if (e_372) throw e_372.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _226(object) { ; if (object !== "apikey")
        return { message: "validation failed at " + path.join(".") + ": expected string 'apikey'", path: path.slice(), reason: { type: "string-literal", value: "apikey" } };
    else
        return null; } function _228(object) { ; if (object !== "basic")
        return { message: "validation failed at " + path.join(".") + ": expected string 'basic'", path: path.slice(), reason: { type: "string-literal", value: "basic" } };
    else
        return null; } function _230(object) { ; if (object !== "bearer")
        return { message: "validation failed at " + path.join(".") + ": expected string 'bearer'", path: path.slice(), reason: { type: "string-literal", value: "bearer" } };
    else
        return null; } function su__undefined__226__228__230_eu(object) {
        var e_373, _a;
        var conditions = [_undefined, _226, _228, _230];
        try {
            for (var conditions_149 = __values(conditions), conditions_149_1 = conditions_149.next(); !conditions_149_1.done; conditions_149_1 = conditions_149.next()) {
                var condition = conditions_149_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_373_1) { e_373 = { error: e_373_1 }; }
        finally {
            try {
                if (conditions_149_1 && !conditions_149_1.done && (_a = conditions_149.return)) _a.call(conditions_149);
            }
            finally { if (e_373) throw e_373.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _224_s(object) {
        var e_374, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("id" in object) {
                path.push("id");
                var error = _string(object["id"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'id' in object", path: path.slice(), reason: { type: "missing-property", property: "id" } };
        }
        {
            if ("scheme" in object) {
                path.push("scheme");
                var error = su__undefined__226__228__230_eu(object["scheme"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "id" && key !== "scheme")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_374_1) { e_374 = { error: e_374_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_374) throw e_374.error; }
        }
        return null;
    } function sa__224_ea_224(object) { ; if (!Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
        path.push("[" + i + "]");
        var error = _224_s(object[i]);
        path.pop();
        if (error)
            return error;
    } return null; } function _216_s(object) {
        var e_375, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _220(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("contentType" in object) {
                path.push("contentType");
                var error = su__undefined__string_eu(object["contentType"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("contentLanguage" in object) {
                path.push("contentLanguage");
                var error = su__undefined__string_eu(object["contentLanguage"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("query" in object) {
                path.push("query");
                var error = su__undefined__176_eu(object["query"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("headers" in object) {
                path.push("headers");
                var error = su__undefined__176_eu(object["headers"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("body" in object) {
                path.push("body");
                var error = su__undefined__176__177__178__179_eu(object["body"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("security" in object) {
                path.push("security");
                var error = sa__224_ea_224(object["security"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'security' in object", path: path.slice(), reason: { type: "missing-property", property: "security" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "contentType" && key !== "contentLanguage" && key !== "query" && key !== "headers" && key !== "body" && key !== "security" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_375_1) { e_375 = { error: e_375_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_375) throw e_375.error; }
        }
        return null;
    } function su__undefined__216_eu(object) {
        var e_376, _a;
        var conditions = [_undefined, _216_s];
        try {
            for (var conditions_150 = __values(conditions), conditions_150_1 = conditions_150.next(); !conditions_150_1.done; conditions_150_1 = conditions_150.next()) {
                var condition = conditions_150_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_376_1) { e_376 = { error: e_376_1 }; }
        finally {
            try {
                if (conditions_150_1 && !conditions_150_1.done && (_a = conditions_150.return)) _a.call(conditions_150);
            }
            finally { if (e_376) throw e_376.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function _233(object) { ; if (object !== "HttpResponseHandler")
        return { message: "validation failed at " + path.join(".") + ": expected string 'HttpResponseHandler'", path: path.slice(), reason: { type: "string-literal", value: "HttpResponseHandler" } };
    else
        return null; } function _218_s(object) {
        var e_377, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _233(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("statusCode" in object) {
                path.push("statusCode");
                var error = su__undefined__number_eu(object["statusCode"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("contentType" in object) {
                path.push("contentType");
                var error = su__undefined__string_eu(object["contentType"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("contentLanguage" in object) {
                path.push("contentLanguage");
                var error = su__undefined__string_eu(object["contentLanguage"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("statements" in object) {
                path.push("statements");
                var error = sa_su__205__206_eu_ea_207(object["statements"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "statusCode" && key !== "contentType" && key !== "contentLanguage" && key !== "statements" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_377_1) { e_377 = { error: e_377_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_377) throw e_377.error; }
        }
        return null;
    } function sa__218_ea_218(object) { ; if (!Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
        path.push("[" + i + "]");
        var error = _218_s(object[i]);
        path.pop();
        if (error)
            return error;
    } return null; } function _213_s(object) {
        var e_378, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _214(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("method" in object) {
                path.push("method");
                var error = _string(object["method"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'method' in object", path: path.slice(), reason: { type: "missing-property", property: "method" } };
        }
        {
            if ("url" in object) {
                path.push("url");
                var error = _string(object["url"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'url' in object", path: path.slice(), reason: { type: "missing-property", property: "url" } };
        }
        {
            if ("request" in object) {
                path.push("request");
                var error = su__undefined__216_eu(object["request"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("responseHandlers" in object) {
                path.push("responseHandlers");
                var error = sa__218_ea_218(object["responseHandlers"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'responseHandlers' in object", path: path.slice(), reason: { type: "missing-property", property: "responseHandlers" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "method" && key !== "url" && key !== "request" && key !== "responseHandlers" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_378_1) { e_378 = { error: e_378_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_378) throw e_378.error; }
        }
        return null;
    } function su__202__205__206__213_eu(object) {
        var e_379, _a;
        var conditions = [_202_s, _205_s, _206_s, _213_s];
        try {
            for (var conditions_151 = __values(conditions), conditions_151_1 = conditions_151.next(); !conditions_151_1.done; conditions_151_1 = conditions_151.next()) {
                var condition = conditions_151_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_379_1) { e_379 = { error: e_379_1 }; }
        finally {
            try {
                if (conditions_151_1 && !conditions_151_1.done && (_a = conditions_151.return)) _a.call(conditions_151);
            }
            finally { if (e_379) throw e_379.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function sa_su__202__205__206__213_eu_ea_243(object) { ; if (!Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
        path.push("[" + i + "]");
        var error = su__202__205__206__213_eu(object[i]);
        path.pop();
        if (error)
            return error;
    } return null; } function _235_s(object) {
        var e_380, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _241(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("name" in object) {
                path.push("name");
                var error = _string(object["name"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
        }
        {
            if ("usecaseName" in object) {
                path.push("usecaseName");
                var error = _string(object["usecaseName"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'usecaseName' in object", path: path.slice(), reason: { type: "missing-property", property: "usecaseName" } };
        }
        {
            if ("statements" in object) {
                path.push("statements");
                var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("documentation" in object) {
                path.push("documentation");
                var error = su__undefined__245_eu(object["documentation"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "name" && key !== "usecaseName" && key !== "statements" && key !== "location" && key !== "documentation")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_380_1) { e_380 = { error: e_380_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_380) throw e_380.error; }
        }
        return null;
    } function _247(object) { ; if (object !== "OperationDefinition")
        return { message: "validation failed at " + path.join(".") + ": expected string 'OperationDefinition'", path: path.slice(), reason: { type: "string-literal", value: "OperationDefinition" } };
    else
        return null; } function _237_s(object) {
        var e_381, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _247(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("name" in object) {
                path.push("name");
                var error = _string(object["name"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'name' in object", path: path.slice(), reason: { type: "missing-property", property: "name" } };
        }
        {
            if ("statements" in object) {
                path.push("statements");
                var error = sa_su__202__205__206__213_eu_ea_243(object["statements"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'statements' in object", path: path.slice(), reason: { type: "missing-property", property: "statements" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        {
            if ("documentation" in object) {
                path.push("documentation");
                var error = su__undefined__245_eu(object["documentation"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "kind" && key !== "name" && key !== "statements" && key !== "location" && key !== "documentation")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_381_1) { e_381 = { error: e_381_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_381) throw e_381.error; }
        }
        return null;
    } function su__235__237_eu(object) {
        var e_382, _a;
        var conditions = [_235_s, _237_s];
        try {
            for (var conditions_152 = __values(conditions), conditions_152_1 = conditions_152.next(); !conditions_152_1.done; conditions_152_1 = conditions_152.next()) {
                var condition = conditions_152_1.value;
                var error = condition(object);
                if (!error)
                    return null;
            }
        }
        catch (e_382_1) { e_382 = { error: e_382_1 }; }
        finally {
            try {
                if (conditions_152_1 && !conditions_152_1.done && (_a = conditions_152.return)) _a.call(conditions_152);
            }
            finally { if (e_382) throw e_382.error; }
        }
        return { message: "validation failed at " + path.join(".") + ": there are no valid alternatives", path: path.slice(), reason: { type: "union" } };
    } function sa_su__235__237_eu_ea_256(object) { ; if (!Array.isArray(object))
        return { message: "validation failed at " + path.join(".") + ": expected an array", path: path.slice(), reason: { type: "array" } }; for (var i = 0; i < object.length; i++) {
        path.push("[" + i + "]");
        var error = su__235__237_eu(object[i]);
        path.pop();
        if (error)
            return error;
    } return null; } function _239_s(object) {
        var e_383, _a;
        ;
        if (typeof object !== "object" || object === null || Array.isArray(object))
            return { message: "validation failed at " + path.join(".") + ": expected an object", path: path.slice(), reason: { type: "object" } };
        {
            if ("astMetadata" in object) {
                path.push("astMetadata");
                var error = _253_s(object["astMetadata"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'astMetadata' in object", path: path.slice(), reason: { type: "missing-property", property: "astMetadata" } };
        }
        {
            if ("kind" in object) {
                path.push("kind");
                var error = _254(object["kind"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'kind' in object", path: path.slice(), reason: { type: "missing-property", property: "kind" } };
        }
        {
            if ("header" in object) {
                path.push("header");
                var error = _238_s(object["header"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'header' in object", path: path.slice(), reason: { type: "missing-property", property: "header" } };
        }
        {
            if ("definitions" in object) {
                path.push("definitions");
                var error = sa_su__235__237_eu_ea_256(object["definitions"]);
                path.pop();
                if (error)
                    return error;
            }
            else
                return { message: "validation failed at " + path.join(".") + ": expected 'definitions' in object", path: path.slice(), reason: { type: "missing-property", property: "definitions" } };
        }
        {
            if ("location" in object) {
                path.push("location");
                var error = su__undefined__181_eu(object["location"]);
                path.pop();
                if (error)
                    return error;
            }
        }
        try {
            for (var _b = __values(Object.keys(object)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (key !== "astMetadata" && key !== "kind" && key !== "header" && key !== "definitions" && key !== "location")
                    return { message: "validation failed at " + path.join(".") + ": " + ("superfluous property '" + key + "' in object"), path: path.slice(), reason: { type: "superfluous-property" } };
            }
        }
        catch (e_383_1) { e_383 = { error: e_383_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_383) throw e_383.error; }
        }
        return null;
    } var error = _239_s(object); return error; });
    try {
        return assert(node);
    }
    catch (error) {
        if (error instanceof typescript_is_1.TypeGuardError) {
            throw new error_1.AssertionError("Map AST " + error.message, error.path);
        }
        throw error;
    }
}
exports.assertMapDocumentNode = assertMapDocumentNode;
//# sourceMappingURL=map-ast.utils.js.map