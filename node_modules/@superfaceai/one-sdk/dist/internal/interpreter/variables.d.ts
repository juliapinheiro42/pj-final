export declare type Primitive = string | boolean | number | unknown[];
export declare type NonPrimitive = {
    [key: string]: Primitive | NonPrimitive | undefined;
};
export declare type Variables = Primitive | NonPrimitive;
export declare function assertIsVariables(input: unknown): asserts input is Variables | undefined;
export declare function castToVariables(input: unknown): Variables | undefined;
export declare function castToNonPrimitive(input: unknown): NonPrimitive | undefined;
export declare function isPrimitive(input: Variables): input is Primitive;
export declare function isNonPrimitive(input: Variables): input is NonPrimitive;
export declare function isEmptyRecord(input: Record<string, unknown>): input is Record<never, never>;
/**
 * Recursively merges variables from `left` and then from `right` into a new object.
 */
export declare const mergeVariables: (left: NonPrimitive, right: NonPrimitive) => NonPrimitive;
export declare const getValue: (variables: NonPrimitive | undefined, key: string[]) => Variables | undefined;
/**
 * Stringifies a Record of variables. `undefined` values are removed.
 */
export declare const variablesToStrings: (variables?: Variables | undefined) => Record<string, string>;
