import { SecurityValues } from '@superfaceai/ast';
import { SDKExecutionError } from './errors';
export declare function ensureErrorSubclass(error: unknown): Error;
export declare function superJsonNotFoundError(path: string, error: Error): SDKExecutionError;
export declare function superJsonNotAFileError(path: string): SDKExecutionError;
export declare function superJsonFormatError(error: Error): SDKExecutionError;
export declare function superJsonReadError(error: Error): SDKExecutionError;
export declare function noConfiguredProviderError(profileId: string): SDKExecutionError;
export declare function profileNotInstalledError(profileId: string): SDKExecutionError;
export declare function profileFileNotFoundError(file: string, profileId: string): SDKExecutionError;
export declare function profileNotFoundError(profileName: string): SDKExecutionError;
export declare function providersNotSetError(profileName: string): SDKExecutionError;
export declare function unconfiguredProviderInPriorityError(profileId: string, priority: string[], providers: string[]): SDKExecutionError;
export declare function unconfiguredProviderError(providerName: string): SDKExecutionError;
export declare function invalidProfileError(profileId: string): SDKExecutionError;
export declare function serviceNotFoundError(serviceId: string, providerName: string, defaultService: boolean): SDKExecutionError;
export declare function securityNotFoundError(providerName: string, definedSchemes: string[], values: SecurityValues): SDKExecutionError;
export declare function invalidSecurityValuesError(providerName: string, type: string, id: string, valueKeys: string[], requiredKeys: string[]): SDKExecutionError;
export declare function invalidBackoffEntryError(kind: string): SDKExecutionError;
export declare function missingPathReplacementError(missing: string[], url: string, all: string[], available: string[]): SDKExecutionError;
export declare function missingSecurityValuesError(id: string): SDKExecutionError;
export declare function apiKeyInBodyError(valueLocation: string, bodyType: string): SDKExecutionError;
export declare function unsupportedContentType(contentType: string, supportedTypes: string[]): SDKExecutionError;
export declare function usecaseNotFoundError(name: string, usecases: string[]): SDKExecutionError;
export declare function invalidProfileProviderError(profileProviderSettings: string): SDKExecutionError;
export declare function localProviderAndRemoteMapError(providerName: string, profileId: string): SDKExecutionError;
export declare function referencedFileNotFoundError(fileName: string, extensions: string[]): SDKExecutionError;
export declare function providersDoNotMatchError(mapOrJsonProvider: string, configProvider: string, source: 'map' | 'provider.json'): SDKExecutionError;
